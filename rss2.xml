<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Victor</title>
    <link>https://ckck803.github.io/</link>
    
    <atom:link href="https://ckck803.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발 노트</description>
    <pubDate>Mon, 07 Apr 2025 10:34:24 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Docker] Network - 컨테이너간 통신</title>
      <link>https://ckck803.github.io/2025/04/06/docker/network/docker-network/</link>
      <guid>https://ckck803.github.io/2025/04/06/docker/network/docker-network/</guid>
      <pubDate>Sat, 05 Apr 2025 21:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/docker/docker.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/06/docker/volume/docker-volume/&quot; title=&quot;[Docker] Volume - 컨테이너 데이터 관리&quot;&gt;[Docker] Volume - 컨테이너 데이터 관리&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/06/docker/network/docker-network/&quot; title=&quot;[Docker] Network - 컨테이너간 통신&quot;&gt;[Docker] Network - 컨테이너간 통신&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2023/02/08/docker/docker/&quot; title=&quot;[Docker]&quot;&gt;[Docker]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;📌-Docker-Network-란&quot;&gt;&lt;a href=&quot;#📌-Docker-Network-란&quot; class=&quot;headerlink&quot; title=&quot;📌 Docker Network 란?&quot;&gt;&lt;/a&gt;📌 Docker Network 란?&lt;/h2&gt;&lt;p&gt;Docker Network는 컨테이너 간 통신을 가능하게 해주는 가상 네트워크입니다. &lt;/p&gt;
&lt;p&gt;컨테이너는 독립적인 환경에서 실행되지만, 애플리케이션을 만들다 보면 서로 데이터를 주고받아야 하거나 외부 요청을 받아야 할 일이 많습니다. Docker 네트워크는 이러한 컨테이너간 통신을 가능하게 해주는 역할을 합니다.&lt;/p&gt;
&lt;h2 id=&quot;🔍-Docker-Network-의-종류&quot;&gt;&lt;a href=&quot;#🔍-Docker-Network-의-종류&quot; class=&quot;headerlink&quot; title=&quot;🔍 Docker Network 의 종류&quot;&gt;&lt;/a&gt;🔍 Docker Network 의 종류&lt;/h2&gt;&lt;p&gt;Docker는 기본적으로 다음과 같은 네트워크 드라이버들을 제공합니다&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;드라이버&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;bridge&lt;/td&gt;
&lt;td&gt;기본 드라이버. 컨테이너 간 통신이 가능하며, 같은 호스트에서 작동합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;컨테이너가 호스트의 네트워크를 그대로 사용합니다. 격리는 없지만 속도는 빠릅니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;네트워크를 사용하지 않도록 설정합니다. 완전한 격리가 필요할 때 사용합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;overlay&lt;/td&gt;
&lt;td&gt;여러 호스트 간 컨테이너를 연결할 수 있습니다. Docker Swarm에서 유용합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macvlan&lt;/td&gt;
&lt;td&gt;컨테이너에 고유한 MAC 주소를 부여해 물리 네트워크처럼 동작시킵니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;✅-Docker-네트워크-생성&quot;&gt;&lt;a href=&quot;#✅-Docker-네트워크-생성&quot; class=&quot;headerlink&quot; title=&quot;✅ Docker 네트워크 생성&quot;&gt;&lt;/a&gt;✅ Docker 네트워크 생성&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/docker/docker.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/04/06/docker/volume/docker-volume/" title="[Docker] Volume - 컨테이너 데이터 관리">[Docker] Volume - 컨테이너 데이터 관리</a></li><li><a href="/2025/04/06/docker/network/docker-network/" title="[Docker] Network - 컨테이너간 통신">[Docker] Network - 컨테이너간 통신</a></li><li><a href="/2023/02/08/docker/docker/" title="[Docker]">[Docker]</a></li></ul><h2 id="📌-Docker-Network-란"><a href="#📌-Docker-Network-란" class="headerlink" title="📌 Docker Network 란?"></a>📌 Docker Network 란?</h2><p>Docker Network는 컨테이너 간 통신을 가능하게 해주는 가상 네트워크입니다. </p><p>컨테이너는 독립적인 환경에서 실행되지만, 애플리케이션을 만들다 보면 서로 데이터를 주고받아야 하거나 외부 요청을 받아야 할 일이 많습니다. Docker 네트워크는 이러한 컨테이너간 통신을 가능하게 해주는 역할을 합니다.</p><h2 id="🔍-Docker-Network-의-종류"><a href="#🔍-Docker-Network-의-종류" class="headerlink" title="🔍 Docker Network 의 종류"></a>🔍 Docker Network 의 종류</h2><p>Docker는 기본적으로 다음과 같은 네트워크 드라이버들을 제공합니다</p><table><thead><tr><th>드라이버</th><th>설명</th></tr></thead><tbody><tr><td>bridge</td><td>기본 드라이버. 컨테이너 간 통신이 가능하며, 같은 호스트에서 작동합니다.</td></tr><tr><td>host</td><td>컨테이너가 호스트의 네트워크를 그대로 사용합니다. 격리는 없지만 속도는 빠릅니다.</td></tr><tr><td>none</td><td>네트워크를 사용하지 않도록 설정합니다. 완전한 격리가 필요할 때 사용합니다.</td></tr><tr><td>overlay</td><td>여러 호스트 간 컨테이너를 연결할 수 있습니다. Docker Swarm에서 유용합니다.</td></tr><tr><td>macvlan</td><td>컨테이너에 고유한 MAC 주소를 부여해 물리 네트워크처럼 동작시킵니다.</td></tr></tbody></table><h2 id="✅-Docker-네트워크-생성"><a href="#✅-Docker-네트워크-생성" class="headerlink" title="✅ Docker 네트워크 생성"></a>✅ Docker 네트워크 생성</h2><p>Docker 네트워크를 사용하면 다음과 같은 기능들을 사용할 수 있습니다.</p><ul><li>같은 네트워크내 컨테이너 간 이름 기반 통신 가능</li><li>자체 서브넷 설정 가능</li><li>네트워크 격리를 통해 보안 강화</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network create \</span><br><span class="line">  --driver bridge \</span><br><span class="line">  --subnet 192.168.100.0/24 \  <span class="comment"># my-bridge 를 이용하는 Docker 는 192.168.100.0/24 내 IP 를 할당 받습니다.</span></span><br><span class="line">  my-bridge</span><br></pre></td></tr></table></figure><h2 id="✅-Docker-Network-사용"><a href="#✅-Docker-Network-사용" class="headerlink" title="✅ Docker Network 사용"></a>✅ Docker Network 사용</h2><h4 id="1-네트워크-생성"><a href="#1-네트워크-생성" class="headerlink" title="1. 네트워크 생성"></a>1. 네트워크 생성</h4><p>Docker 명령어로 생성하는 네트워크는 기본적으로 bridge 네트워크를 사용합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 사용자 정의 브리지 네트워크 생성</span></span><br><span class="line">docker network create my-bridge-network</span><br><span class="line"></span><br><span class="line"><span class="comment"># 네트워크 확인</span></span><br><span class="line">docker network <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NETWORK ID     NAME                                                                DRIVER    SCOPE</span><br><span class="line">970c8ca1f098   app_default                                                         bridge    <span class="built_in">local</span></span><br><span class="line">b7cc4195660a   bridge                                                              bridge    <span class="built_in">local</span></span><br><span class="line">752114a3f537   cluster4_default                                                    bridge    <span class="built_in">local</span></span><br><span class="line">cefaa7d0f84f   discovery-server_msa                                                bridge    <span class="built_in">local</span></span><br><span class="line">b15c797bd7cb   host                                                                host      <span class="built_in">local</span></span><br><span class="line">e30ba0356072   minikube                                                            bridge    <span class="built_in">local</span></span><br><span class="line">1d556958a0e3   monitoring_kafka_network                                            bridge    <span class="built_in">local</span></span><br><span class="line">c11f235772a0   my-bridge-network                                                   bridge    <span class="built_in">local</span></span><br><span class="line">09369e87d3bf   mysql_default                                                       bridge    <span class="built_in">local</span></span><br><span class="line">12bba3372bec   none                                                                null      <span class="built_in">local</span></span><br><span class="line">b6805d2acdd3   redis-insight_default                                               bridge    <span class="built_in">local</span></span><br><span class="line">2e03a529f3f0   spring-cloud                                                        bridge    <span class="built_in">local</span></span><br></pre></td></tr></table></figure><h4 id="2-컨테이너-2개-실행-같은-네트워크에-연결"><a href="#2-컨테이너-2개-실행-같은-네트워크에-연결" class="headerlink" title="2. 컨테이너 2개 실행 (같은 네트워크에 연결):"></a>2. 컨테이너 2개 실행 (같은 네트워크에 연결):</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name container1 --network my-bridge-network nginx</span><br><span class="line">docker run -it --name container2 --network my-bridge-network alpine sh</span><br></pre></td></tr></table></figure><p>컨테이너2에서 container1 의 이름으로 접속이 가능합니다<br>👉 같은 네트워크에 연결된 컨테이너는 이름으로 서로 통신 가능하다는 점이 포인트입니다!</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># container2 내부에서</span></span><br><span class="line">ping container1</span><br></pre></td></tr></table></figure><h2 id="✅-Docker-네트워크-관련-명령어"><a href="#✅-Docker-네트워크-관련-명령어" class="headerlink" title="✅ Docker 네트워크 관련 명령어"></a>✅ Docker 네트워크 관련 명령어</h2><table><thead><tr><th align="left">명령어</th><th align="left">설명</th></tr></thead><tbody><tr><td align="left">docker network ls</td><td align="left">네트워크 목록 보기</td></tr><tr><td align="left">docker network inspect &lt;이름&gt;</td><td align="left">네트워크 상세 정보 확인</td></tr><tr><td align="left">docker network create &lt;이름&gt;</td><td align="left">네트워크 생성</td></tr><tr><td align="left">docker network rm &lt;이름&gt;</td><td align="left">네트워크 삭제</td></tr><tr><td align="left">docker network connect &lt;네트워크&gt; &lt;컨테이너&gt;</td><td align="left">컨테이너를 네트워크에 연결</td></tr><tr><td align="left">docker network disconnect &lt;네트워크&gt; &lt;컨테이너&gt;</td><td align="left">연결 해제</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Docker/">Docker</category>
      
      
      
      <comments>https://ckck803.github.io/2025/04/06/docker/network/docker-network/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Docker] Volume - 컨테이너 데이터 관리</title>
      <link>https://ckck803.github.io/2025/04/06/docker/volume/docker-volume/</link>
      <guid>https://ckck803.github.io/2025/04/06/docker/volume/docker-volume/</guid>
      <pubDate>Sat, 05 Apr 2025 21:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/docker/docker.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/06/docker/volume/docker-volume/&quot; title=&quot;[Docker] Volume - 컨테이너 데이터 관리&quot;&gt;[Docker] Volume - 컨테이너 데이터 관리&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/06/docker/network/docker-network/&quot; title=&quot;[Docker] Network - 컨테이너간 통신&quot;&gt;[Docker] Network - 컨테이너간 통신&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2023/02/08/docker/docker/&quot; title=&quot;[Docker]&quot;&gt;[Docker]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;🤔-Docker-Volume-이-왜-필요한가&quot;&gt;&lt;a href=&quot;#🤔-Docker-Volume-이-왜-필요한가&quot; class=&quot;headerlink&quot; title=&quot;🤔 Docker Volume 이 왜 필요한가?&quot;&gt;&lt;/a&gt;🤔 Docker Volume 이 왜 필요한가?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;컨테이너내 데이터는 휘발성입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Docker 와 컨테이너 기술이 막 떠오를때 PC 에 깔아서 개발을 하고 있는데 Docker 내에서 설정한 값들이 재실행할때 마다 초기화 되는 현상들을 겪었습니다. 당시 너무 화가나서 여러 책들을 읽어봤는데 생각해보니 컨테이너의 특성을 제대로 이해하지 못해 생기는 문제였었습니다.&lt;/p&gt;
&lt;p&gt;컨테이너는 기본적으로 &lt;strong&gt;휘발성&lt;/strong&gt; 이기 때문에 컨테이너가 종료되거나 삭제되면 내부 데이터도 함께 사라집니다. 쉽게 생각해서 격리돼 있는 컨테이너의 특성상 컨테이너가 생성한 모든 파일들은 결국 컨테이너내에서만 존재하고 컨테이너 삭제시에는 컨테이너와 함께 데이터도 삭제가 되는 것입니다.&lt;/p&gt;
&lt;p&gt;Docker 에서는 Docker Volume 을 통해 컨테이너 내에서의 데이터 휘발성 문제를 해결하고 영구적으로 저장할 수 있는 방법을 제공합니다.&lt;/p&gt;
&lt;h2 id=&quot;✅-Docker-Volume-이란&quot;&gt;&lt;a href=&quot;#✅-Docker-Volume-이란&quot; class=&quot;headerlink&quot; title=&quot;✅ Docker Volume 이란?&quot;&gt;&lt;/a&gt;✅ Docker Volume 이란?&lt;/h2&gt;&lt;p&gt;Docker Volume 은 컨테이너 &lt;strong&gt;외부&lt;/strong&gt; 에 데이터를 저장할 수 있는 공간입니다. 컨테이너와는 별도로 존재하기 때문에, 컨테이너를 삭제하더라도 데이터는 유지되며 데이터 영속성이 보장됩니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/docker/docker.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/04/06/docker/volume/docker-volume/" title="[Docker] Volume - 컨테이너 데이터 관리">[Docker] Volume - 컨테이너 데이터 관리</a></li><li><a href="/2025/04/06/docker/network/docker-network/" title="[Docker] Network - 컨테이너간 통신">[Docker] Network - 컨테이너간 통신</a></li><li><a href="/2023/02/08/docker/docker/" title="[Docker]">[Docker]</a></li></ul><h2 id="🤔-Docker-Volume-이-왜-필요한가"><a href="#🤔-Docker-Volume-이-왜-필요한가" class="headerlink" title="🤔 Docker Volume 이 왜 필요한가?"></a>🤔 Docker Volume 이 왜 필요한가?</h2><blockquote><p>컨테이너내 데이터는 휘발성입니다.</p></blockquote><p>Docker 와 컨테이너 기술이 막 떠오를때 PC 에 깔아서 개발을 하고 있는데 Docker 내에서 설정한 값들이 재실행할때 마다 초기화 되는 현상들을 겪었습니다. 당시 너무 화가나서 여러 책들을 읽어봤는데 생각해보니 컨테이너의 특성을 제대로 이해하지 못해 생기는 문제였었습니다.</p><p>컨테이너는 기본적으로 <strong>휘발성</strong> 이기 때문에 컨테이너가 종료되거나 삭제되면 내부 데이터도 함께 사라집니다. 쉽게 생각해서 격리돼 있는 컨테이너의 특성상 컨테이너가 생성한 모든 파일들은 결국 컨테이너내에서만 존재하고 컨테이너 삭제시에는 컨테이너와 함께 데이터도 삭제가 되는 것입니다.</p><p>Docker 에서는 Docker Volume 을 통해 컨테이너 내에서의 데이터 휘발성 문제를 해결하고 영구적으로 저장할 수 있는 방법을 제공합니다.</p><h2 id="✅-Docker-Volume-이란"><a href="#✅-Docker-Volume-이란" class="headerlink" title="✅ Docker Volume 이란?"></a>✅ Docker Volume 이란?</h2><p>Docker Volume 은 컨테이너 <strong>외부</strong> 에 데이터를 저장할 수 있는 공간입니다. 컨테이너와는 별도로 존재하기 때문에, 컨테이너를 삭제하더라도 데이터는 유지되며 데이터 영속성이 보장됩니다.</p><p>또한, Docker Volume 은 컨테이너와 호스트 시스템 간에 데이터를 공유하거나 컨테이너 간 데이터를 공유할 때 사용할 수 있습니다.</p><h4 id="호스트-PC-에서-Docker-Volume-접근"><a href="#호스트-PC-에서-Docker-Volume-접근" class="headerlink" title="호스트 PC 에서 Docker Volume 접근"></a>호스트 PC 에서 Docker Volume 접근</h4><p>호스트에서 Docker Volume 으로 접근하기 위한 경로는 운영체제 마다 상이합니다. 일단, Linux 환경에서는 Docker Volume 이 기본적으로 <code>/var/lib/docker/volumes</code> 경로 아래에 저장되며, Volume 이름별로 <code>/var/lib/docker/volumes/&lt;volume_name&gt;/_data</code> 에 데이터가 생성돼 해당 경로로 이동하면 접근이 가능합니다. 하지만 윈도우나 맥 환경에서 가상화된 Linux 환경을 띄우고 그 안에서 Docker 를 운영하기 때문에 접근이 어렵습니다.</p><h2 id="✅-Docker-Volume-사용"><a href="#✅-Docker-Volume-사용" class="headerlink" title="✅ Docker Volume 사용"></a>✅ Docker Volume 사용</h2><h4 id="1-Volume-생성"><a href="#1-Volume-생성" class="headerlink" title="1 Volume 생성"></a>1 Volume 생성</h4><p>Docker Volume은 다음과 같은 명령어로 생성할 수 있습니다. 생성된 Volume은 Docker 호스트의 특정 디렉토리에 저장되며, 이를 통해 데이터가 외부에 안전하게 보관됩니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker volume create my_volume</span><br></pre></td></tr></table></figure><h4 id="3-2-컨테이너에-Volume-마운트하기"><a href="#3-2-컨테이너에-Volume-마운트하기" class="headerlink" title="3.2 컨테이너에 Volume 마운트하기"></a>3.2 컨테이너에 Volume 마운트하기</h4><p>생성한 Volume을 컨테이너에 마운트하는 방법은 다음과 같습니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name my_container \</span><br><span class="line">  -v my_volume:/app/data \</span><br><span class="line">  my_image</span><br></pre></td></tr></table></figure><h4 id="3-Volume-리스트-및-삭제"><a href="#3-Volume-리스트-및-삭제" class="headerlink" title="3 Volume 리스트 및 삭제"></a>3 Volume 리스트 및 삭제</h4><p>현재 생성된 Volume 목록을 확인하려면 다음 명령어를 사용합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker volume <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>Docker Volume 을 명시적으로 생성하지 않을 경우 생성된 Volume 목록 확인시 해시된 이름으로 보여져 파악하기가 어렵습니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DRIVER    VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>     49ff6b4a76033b6511cd4ff656a08288e00db0c791d734c8d8f22c61265c570e</span><br><span class="line"><span class="built_in">local</span>     87b7e5bc9d75151f2ca3fe25cfc38d620434133231e3a59ebd8f99c1f43e08b6</span><br><span class="line"><span class="built_in">local</span>     092efe87a570de9ec8a80192b753b66a952abeae53f274e09c867074d1d09fc6</span><br><span class="line"><span class="built_in">local</span>     194d517db62f9a6569e47fce6e99415152c51fdfa1dfaa3a1f275df3cf0396fd</span><br><span class="line"><span class="built_in">local</span>     minikube</span><br><span class="line"><span class="built_in">local</span>     mysql_grafana_data</span><br><span class="line"><span class="built_in">local</span>     mysql_prometheus_data</span><br><span class="line"><span class="built_in">local</span>     redis-insight_redis_insight_volume_data</span><br><span class="line"><span class="built_in">local</span>     redis-insight_redis_volume_data</span><br><span class="line"><span class="built_in">local</span>     redisinsight</span><br><span class="line"><span class="built_in">local</span>     spring-websocket-kafka_redis_insight_volume_data</span><br><span class="line"><span class="built_in">local</span>     spring-websocket-kafka_redis_volume_data</span><br></pre></td></tr></table></figure><p>사용하지 않는 Volume은 다음과 같이 삭제할 수 있습니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker volume <span class="built_in">rm</span> my_volume</span><br></pre></td></tr></table></figure><p>전체 사용하지 않는 Volume을 한꺼번에 삭제하려면 <code>prune</code> 명령어를 사용하면 됩니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker volume prune</span><br></pre></td></tr></table></figure><h2 id="✅-Docker-Volume-사용-예제"><a href="#✅-Docker-Volume-사용-예제" class="headerlink" title="✅ Docker Volume 사용 예제"></a>✅ Docker Volume 사용 예제</h2><p>컨테이너로 구성된 데이터 베이스의 데이터를 영속적으로 저장하기 위해 Docker Volume 을 이용합니다. 해당 명령어로 MySQL 데이터 베이스를 실행하게 되면 실행되는 컨테이너는 다를지라도 항상 같은 Volume 을 바라보게 됩니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name mysql \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=1212!@!@ \</span><br><span class="line">  -v mysql_data:/var/lib/mysql \</span><br><span class="line">  mysql:latest</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Docker/">Docker</category>
      
      
      
      <comments>https://ckck803.github.io/2025/04/06/docker/volume/docker-volume/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스] 인증/인가 - OIDC 를 이용한 Keycloak 연동</title>
      <link>https://ckck803.github.io/2025/04/05/k8s/auth/k8s-oidc-keycloak/</link>
      <guid>https://ckck803.github.io/2025/04/05/k8s/auth/k8s-oidc-keycloak/</guid>
      <pubDate>Sat, 05 Apr 2025 01:31:46 GMT</pubDate>
      
      <description>&lt;!-- ![](/images/k8s/helm/helm.png) --&gt;

&lt;p&gt;&lt;img src=&quot;/images/k8s/k8s.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/05/k8s/auth/k8s-oidc-keycloak/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - OIDC 를 이용한 Keycloak 연동&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - OIDC 를 이용한 Keycloak 연동&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2023/06/11/k8s/auth/ServiceAccount/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - ServiceAccount&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - ServiceAccount&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/03/k8s/auth/cert-user/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/05/k8s/auth/role-clusterrole/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - Role 과 ClusterRole&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - Role 과 ClusterRole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wlsdn3004.tistory.com/62&quot;&gt;https://wlsdn3004.tistory.com/62&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;앞서 말했듯이, 쿠버네티스는 사용자 정보를 저장하지 않습니다. 사용자를 관리하고 싶으면, 쿠버네티스에서 제공하는 OIDC 를 통해 별도의 인증 서버와 연계를 하면 사용자를 관리할 수 있습니다.&lt;/p&gt;
&lt;p&gt;인증서버로 유명한 Keycloak 을 이용해 사용자를 관리하고 쿠버네티스에서 인증을 진행할 수 있도록 설정을 진행하려고 합니다.&lt;/p&gt;
&lt;h2 id=&quot;✅-1-Keycloak-Client-추가&quot;&gt;&lt;a href=&quot;#✅-1-Keycloak-Client-추가&quot; class=&quot;headerlink&quot; title=&quot;✅ 1. Keycloak Client 추가&quot;&gt;&lt;/a&gt;✅ 1. Keycloak Client 추가&lt;/h2&gt;&lt;p&gt;쿠버네티스에서 Keycloak 을 이용해 인증을 진행하기 위해서는 Client 생성(등록) 이 필요합니다.  Client 단위로 Keycloak 에서는 쿠버네티스 사용자들을 관리하고 권한을 매핑해줄 수 있습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- ![](/images/k8s/helm/helm.png) --><p><img src="/images/k8s/k8s.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/04/05/k8s/auth/k8s-oidc-keycloak/" title="[쿠버네티스] 인증&#x2F;인가 - OIDC 를 이용한 Keycloak 연동">[쿠버네티스] 인증&#x2F;인가 - OIDC 를 이용한 Keycloak 연동</a></li><li><a href="/2023/06/11/k8s/auth/ServiceAccount/" title="[쿠버네티스] 인증&#x2F;인가 - ServiceAccount">[쿠버네티스] 인증&#x2F;인가 - ServiceAccount</a></li><li><a href="/2025/04/03/k8s/auth/cert-user/" title="[쿠버네티스] 인증&#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증">[쿠버네티스] 인증&#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증</a></li><li><a href="/2025/04/05/k8s/auth/role-clusterrole/" title="[쿠버네티스] 인증&#x2F;인가 - Role 과 ClusterRole">[쿠버네티스] 인증&#x2F;인가 - Role 과 ClusterRole</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://wlsdn3004.tistory.com/62">https://wlsdn3004.tistory.com/62</a></li></ul><hr><p>앞서 말했듯이, 쿠버네티스는 사용자 정보를 저장하지 않습니다. 사용자를 관리하고 싶으면, 쿠버네티스에서 제공하는 OIDC 를 통해 별도의 인증 서버와 연계를 하면 사용자를 관리할 수 있습니다.</p><p>인증서버로 유명한 Keycloak 을 이용해 사용자를 관리하고 쿠버네티스에서 인증을 진행할 수 있도록 설정을 진행하려고 합니다.</p><h2 id="✅-1-Keycloak-Client-추가"><a href="#✅-1-Keycloak-Client-추가" class="headerlink" title="✅ 1. Keycloak Client 추가"></a>✅ 1. Keycloak Client 추가</h2><p>쿠버네티스에서 Keycloak 을 이용해 인증을 진행하기 위해서는 Client 생성(등록) 이 필요합니다.  Client 단위로 Keycloak 에서는 쿠버네티스 사용자들을 관리하고 권한을 매핑해줄 수 있습니다.</p><h4 id="1-1-Client-생성"><a href="#1-1-Client-생성" class="headerlink" title="1-1. Client 생성"></a>1-1. Client 생성</h4><p><code>kubernetes-client</code> 이름으로 새로운 client 를 생성합니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-client1.png"></p><p>Client authentication 을 활성화 해줍니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-client2.png"></p><p>현재는 OIDC 를 이용하기 위한 URL 이 없으므로 빈칸으로 넘어갑니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-client3.png"></p><h4 id="1-2-Role-생성"><a href="#1-2-Role-생성" class="headerlink" title="1-2. Role 생성"></a>1-2. Role 생성</h4><p>새로운 Role 을 추가해줍니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-add-role.png"></p><h4 id="1-3-User-Client-Role-생성"><a href="#1-3-User-Client-Role-생성" class="headerlink" title="1-3. User Client Role 생성"></a>1-3. User Client Role 생성</h4><p><img src="/images/k8s/auth/k8s-keycloak-user-client-role.png"></p><h4 id="1-4-User-추가"><a href="#1-4-User-추가" class="headerlink" title="1-4. User 추가"></a>1-4. User 추가</h4><p>쿠버네티스 사용자 인증을 위해 <code>test</code> 로 계정을 하나 생성합니다.</p><p><img src="/images/k8s/auth/k8s-create-user.png"></p><p>계정을 활성화 하기 위해서는 password 를 세팅해야 합니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-user-password.png"></p><h4 id="1-5-Group-생성"><a href="#1-5-Group-생성" class="headerlink" title="1-5. Group 생성"></a>1-5. Group 생성</h4><p><img src="/images/k8s/auth/k8s-keycloak-group.png"></p><p><img src="/images/k8s/auth/k8s-keycloak-group2.png"></p><h4 id="1-6-User-에-Group-매핑"><a href="#1-6-User-에-Group-매핑" class="headerlink" title="1-6. User 에 Group 매핑"></a>1-6. User 에 Group 매핑</h4><p><img src="/images/k8s/auth/k8s-keycloak-user-add-group.png"></p><h2 id="✅-2-Kubernetes-API-Server에-OIDC-옵션-추가"><a href="#✅-2-Kubernetes-API-Server에-OIDC-옵션-추가" class="headerlink" title="✅ 2. Kubernetes API Server에 OIDC 옵션 추가"></a>✅ 2. Kubernetes API Server에 OIDC 옵션 추가</h2><h4 id="2-1-kube-apiserver-매니페스트-변경"><a href="#2-1-kube-apiserver-매니페스트-변경" class="headerlink" title="2-1. kube-apiserver 매니페스트 변경"></a>2-1. kube-apiserver 매니페스트 변경</h4><p>쿠버네티스에서 요청을 받은 Kube API Server 가 Keycloak 을 통해 인증의 유효성을 확인할 수 있도록 <code>kube-apiserver.yaml</code> 파일에 설정을 추가해줘야 합니다.</p><p>kubeadm으로 설치했을 경우 <code>/etc/kubernetes/manifests/kube-apiserver.yaml</code> 에 파일이 존재합니다.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--oidc-issuer-url=https://&lt;Keycloak-호스트&gt;/auth/realms/&lt;Realm-이름&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--oidc-client-id=kubernetes</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--oidc-username-claim=preferred_username</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--oidc-username-prefix=-</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--oidc-groups-claim=groups</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--oidc-groups-prefix=&quot;kubernetes:&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-쿠버네티스-접속을-위한-Keycloak-토큰-생성-테스트"><a href="#2-2-쿠버네티스-접속을-위한-Keycloak-토큰-생성-테스트" class="headerlink" title="2-2. 쿠버네티스 접속을 위한 Keycloak 토큰 생성 테스트"></a>2-2. 쿠버네티스 접속을 위한 Keycloak 토큰 생성 테스트</h4><p>위에서 생성한 Keycloak 에서 사용하기 위한 Client 와 User 정보를 이용해 Token 생성 요청이 정상적으로 이뤄지는지 확인합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl --location <span class="string">&#x27;https://&lt;Keycloak-호스트&gt;/realms/&lt;Realm-이름&gt;/protocol/openid-connect/token&#x27;</span> \</span><br><span class="line">  --header <span class="string">&#x27;Content-Type: application/x-www-form-urlencoded&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;grant_type=password&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;client_id=kubernetes-client&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;username=test&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;password=&lt;비밀번호&gt;&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;scope=openid&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;client_secret=&lt;secrete 정보&gt;&#x27;</span></span><br></pre></td></tr></table></figure><p>정상적인 응답이 왔을 경우 Keycloak 에서는 아래와 같은 토큰 정보를 반환해줍니다.</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;access_token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJzOEdsMWxzdUNLcFQ4R0RUcDVycF8waEsxN200TmJEOHFqcWp6dnFkMTFjIn0.eyJleHAiOjE3NDM4NjE0NDYsImlhdCI6MTc0Mzg2MTE0NiwianRpIjoiNzZkZTYwYWMtZGMxYy00YjM1LWFiODUtOWM0ZDNjMDc3M2VlIiwiaXNzIjoiaHR0cHM6Ly9hdXRoLmRkYW56aXRzLmNvbS9yZWFsbXMvZGRhbnppdCIsInN1YiI6IjI1MzJiNjYxLTA5ODUtNDI1YS1iYWU2LTNjMmQ4YmQ0ZGEyMyIsInR5cCI6IkJlYXJlciIsImF6cCI6Imt1YmVybmV0ZXMtY2xpZW50Iiwic2lkIjoiMzc5ZDYzZWMtNzUwOS00NzUyLWI3YTQtOTM1NDE4YTllOWNkIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyIvKiJdLCJyZXNvdXJjZV9hY2Nlc3MiOnsia3ViZXJuZXRlcy1jbGllbnQiOnsicm9sZXMiOlsiYWRtaW4iXX19LCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJncm91cHMiOlsia3ViZXJuZXRlczphZG1pbiJdLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ0ZXN0In0.K8A_nTdNhP7HR4dR_hvuqGaWspnwnsQgJ5VPiC2UceO2l5tPi4Bxmh_TmeuIjcIOlv-d_CjgyZ4_kuKrobMpinReuAuFLD3IMuzqvXUMTyWkBv-tAxfcHqk4jceUSQEANdrywfzA7Xb2h38aSytm9TglZa7_P9mbNT34r3R_qnjwSxlnlPegjFfYvJFP107Tt5w6GIbIf3XhoRI_TYzDBSVTIvL_Y7lkvvoNB0woF0gBX914qW8_koD3NE0eNpXINhAWUB7LUycvBMYE-edgWj8menY3XwHrcNiO0FHCgTJ2nfA0KgJAspiWD725UnCW5v7Y7wD5rijNYZ38LiVkIQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;expires_in&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;refresh_expires_in&quot;</span><span class="punctuation">:</span> <span class="number">1800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;refresh_token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJIUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI0OGE4YzYzMy0zODk3LTQ3ZjMtYTk3Ni05OTdhNmJkYjQ1MzcifQ.eyJleHAiOjE3NDM4NjI5NDYsImlhdCI6MTc0Mzg2MTE0NiwianRpIjoiZmQ1M2UzNjgtMjM4NC00N2FlLTlhNWYtODEyNjIyNzg0ZmE1IiwiaXNzIjoiaHR0cHM6Ly9hdXRoLmRkYW56aXRzLmNvbS9yZWFsbXMvZGRhbnppdCIsImF1ZCI6Imh0dHBzOi8vYXV0aC5kZGFueml0cy5jb20vcmVhbG1zL2RkYW56aXQiLCJzdWIiOiIyNTMyYjY2MS0wOTg1LTQyNWEtYmFlNi0zYzJkOGJkNGRhMjMiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoia3ViZXJuZXRlcy1jbGllbnQiLCJzaWQiOiIzNzlkNjNlYy03NTA5LTQ3NTItYjdhNC05MzU0MThhOWU5Y2QiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGJhc2ljIHJvbGVzIGFjciB3ZWItb3JpZ2lucyBlbWFpbCJ9.jCsS44jWe8xAUV1BNc4bFaamElEtg7pWHuW-m19azInpg-nziZvUrx1RwMYB_sR6pOWRvSOhoIrZXWLJOml7Vg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;token_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bearer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id_token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJzOEdsMWxzdUNLcFQ4R0RUcDVycF8waEsxN200TmJEOHFqcWp6dnFkMTFjIn0.eyJleHAiOjE3NDM4NjE0NDYsImlhdCI6MTc0Mzg2MTE0NiwianRpIjoiNWU0NTk4OTktOTk5NC00N2FlLWE2NjYtOWEwMzNkZmQ1MThkIiwiaXNzIjoiaHR0cHM6Ly9hdXRoLmRkYW56aXRzLmNvbS9yZWFsbXMvZGRhbnppdCIsImF1ZCI6Imt1YmVybmV0ZXMtY2xpZW50Iiwic3ViIjoiMjUzMmI2NjEtMDk4NS00MjVhLWJhZTYtM2MyZDhiZDRkYTIzIiwidHlwIjoiSUQiLCJhenAiOiJrdWJlcm5ldGVzLWNsaWVudCIsInNpZCI6IjM3OWQ2M2VjLTc1MDktNDc1Mi1iN2E0LTkzNTQxOGE5ZTljZCIsImF0X2hhc2giOiJ2N3VFMzY2RS1OSmpsa21QbFRJX0dnIiwiYWNyIjoiMSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZ3JvdXBzIjpbImt1YmVybmV0ZXM6YWRtaW4iXSwicHJlZmVycmVkX3VzZXJuYW1lIjoidGVzdCJ9.bAUI2zSw8WGfKtJagjMFMMpza2jHHbPwB5dOGlvC0bgqJANjuZTt8VU43yLps_1ksf3EydOjnnKXoQOPSDrJprdEb6AKud-wzs0KjeuwCWrJXnHEp1YxA9fM8-CTwcExoeFKSHQOIBFkoCAY2F8fUdfmdszqMUj13vm_95QHUwhN8jw12zh_KKS_KwEMODs9fLqTxJLgKHSti7uGQi8CI_NBFDcfC-FP1Q44fzJf7m9trD14NW06iu9IGL4d32xwtcjzdh9d4zM4Wc42bYOfA1wI0l5N-k6jmpYevilWvwACwxLmkHnVdjRlHSS6pb3lY8lyvKSwfMdQs_McMQcsIA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;not-before-policy&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;session_state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;379d63ec-7509-4752-b7a4-935418a9e9cd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openid profile email&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>위 여러 토큰 중에서 쿠버네티스 API Server 에 요청시에는 <code>id_token</code> 값을 사용합니다. 해당 토큰에 어떤 정보가 있는지 디코딩 해보면 아래와 같은 값들을 갖고 있는 것을 확인할 수 있습니다.</p><p><img src="/images/k8s/auth/k8s-jwt.png"></p><h4 id="2-3-권한-부여-롤-생성-및-롤-바인딩"><a href="#2-3-권한-부여-롤-생성-및-롤-바인딩" class="headerlink" title="2-3. 권한 부여 - 롤 생성 및 롤 바인딩"></a>2-3. 권한 부여 - 롤 생성 및 롤 바인딩</h4><p>쿠버네티스는 인증 후 리소스를 사용하기 위해서는 권한이 필요합니다. 모든 Pod 에 대한 조회 권한을 주기 위해 <code>ClusterRole</code> 을 생성합니다. 만약, 특정 리소스에 대한 권한만을 주고 싶다고 하면 <code>Role</code> 리소스를 생성하면 됩니다.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">keycloak-role</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">&quot;namespaces&quot;</span>, <span class="string">&quot;pods&quot;</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br></pre></td></tr></table></figure><p>권한이 생성 됐으면 해당 권한을 사용하기 위한 롤 바인딩 리소스도 생성합니다. 위에서 <code>ClusterRol</code> 을 생성했으므로 <code>ClusterRoleBinding</code> 리소스를 통해 바인딩을 해야 합니다.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">keycloak-crb-test</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">keycloak-role</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure><h4 id="2-4-토큰을-이용해-쿠버네티스-API-Server-요청"><a href="#2-4-토큰을-이용해-쿠버네티스-API-Server-요청" class="headerlink" title="2-4. 토큰을 이용해 쿠버네티스 API Server 요청"></a>2-4. 토큰을 이용해 쿠버네티스 API Server 요청</h4><p>토큰 생성이 정상적으로 되는지 확인했고, 이번에는 생성한 토큰을 이용해 쿠버네티스 API Server 에 요청을 보내려고 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TOKEN=$(curl --location <span class="string">&#x27;https://&lt;Keycloak-호스트&gt;/realms/&lt;Realm-이름&gt;/protocol/openid-connect/token&#x27;</span> \</span><br><span class="line">  --header <span class="string">&#x27;Content-Type: application/x-www-form-urlencoded&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;grant_type=password&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;client_id=kubernetes-client&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;username=test&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;password=&lt;비밀번호&gt;&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;scope=openid&#x27;</span> \</span><br><span class="line">  -d <span class="string">&#x27;client_secret=&lt;secrete 정보&gt;&#x27;</span> | jq -r <span class="string">&#x27;.id_token&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 받은 토큰을 이용해 쿠버네티스 API Server 에 요청이 정상적으로 가는지 확인해 봅니다.</span></span><br><span class="line">curl  https://&lt;쿠버네티스 api server 주소&gt;/api/v1/namespaces/default --header <span class="string">&quot;Authorization: Bearer <span class="variable">$&#123;TOKEN&#125;</span>&quot;</span> --insecure</span><br></pre></td></tr></table></figure><p>토큰에 문제가 없을 경우 아래와 같은 응답이 오는 것을 확인할 수 있습니다.</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Namespace&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;apiVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1c78224d-d264-4c25-873c-4407be8d63e1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;resourceVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;36&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;creationTimestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-02-20T16:16:48Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;kubernetes.io/metadata.name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;managedFields&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;manager&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kube-apiserver&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;operation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Update&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;apiVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-02-20T16:16:48Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fieldsType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FieldsV1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fieldsV1&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;f:metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;f:labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;.&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;f:kubernetes.io/metadata.name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;spec&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;finalizers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;kubernetes&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;phase&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Active&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>인증에 성공한 User 를 이용해 kubectl 명령어를 이용하기 위해 <code>kubeconfig</code> 파일에 토큰 정보를 반영해줍니다.</p><figure class="highlight yaml"><figcaption><span>config</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">    <span class="attr">certificate-authority-data:</span> <span class="string">LS0tLS1CRUdJ</span> <span class="string">...</span> <span class="string">DQVRFLS0tLS0K</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">&lt;kubernetes</span> <span class="string">api</span> <span class="string">server</span> <span class="string">주소&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">kubernetes</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Config</span></span><br><span class="line"><span class="attr">preferences:</span> &#123;&#125;</span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">token:</span> <span class="string">eyJhbGciO</span> <span class="string">...</span> <span class="string">GfZXJw</span>  <span class="comment"># 요청을 통해 생성된 토큰을 추가해 줍니다.</span></span><br></pre></td></tr></table></figure><h4 id="2-5-인증-및-인가-에러"><a href="#2-5-인증-및-인가-에러" class="headerlink" title="2-5. 인증 및 인가 에러"></a>2-5. 인증 및 인가 에러</h4><p>인증이 정상적으로 이뤄지지 않은 경우에는 다음과 같은 <code>401</code> 에러가 발생하게 됩니다.</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Status&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;apiVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Failure&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unauthorized&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unauthorized&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">401</span></span><br><span class="line"><span class="punctuation">&#125;</span>%</span><br></pre></td></tr></table></figure><p>권한이 제대로 안들어가 있을 경우 <code>403</code> 에러와 함께 리소스에 대한 접근을 할 수 없다는 오류 메시지를 확인할 수 있습니다.  </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Status&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;apiVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Failure&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;namespaces \&quot;default\&quot; is forbidden: User \&quot;test\&quot; cannot get resource \&quot;namespaces\&quot; in API group \&quot;\&quot; in the namespace \&quot;default\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Forbidden&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;details&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;namespaces&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">403</span></span><br><span class="line"><span class="punctuation">&#125;</span>%</span><br></pre></td></tr></table></figure><h2 id="✅-3-kubelogin-OIDC-를-이용하기-위한-Client-사용"><a href="#✅-3-kubelogin-OIDC-를-이용하기-위한-Client-사용" class="headerlink" title="✅ 3. kubelogin - OIDC 를 이용하기 위한 Client 사용"></a>✅ 3. kubelogin - OIDC 를 이용하기 위한 Client 사용</h2><p>쿠버네티스에서 Keycloak 을 이용해 사용자 인증과정에 대한 설정이 끝났습니다. 하지만, 사용자가 쿠버네티스로의 인증 방식에 대해서는 현재 딱히 정해진게 없습니다. </p><p>위 과정에서 쿠버네티스 리소스를 이용하기 전에 토큰을 생성하고, 토큰을 config 파일에 반영하는 과정들이 있습니다. </p><p>매번 반복적으로 하기에는 번거로운 이 과정을 단순화 하기 위해 kubelogin 을 사용해 인증을 간편화하려고 합니다.</p><h4 id="3-1-kubelogin-설치"><a href="#3-1-kubelogin-설치" class="headerlink" title="3-1. kubelogin 설치."></a>3-1. kubelogin 설치.</h4><p><a href="https://github.com/int128/kubelogin">kubelogin 공식문서</a> 에서 운영체제 별로 설치하는 방법이 있습니다. 저는 맥환경에서 이용하므로 brew 를 이용한 방법만 정리했습니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install kubelogin</span><br></pre></td></tr></table></figure><h4 id="3-2-kubelogin-설치"><a href="#3-2-kubelogin-설치" class="headerlink" title="3-2. kubelogin 설치."></a>3-2. kubelogin 설치.</h4><p>kubelogin 에서는 <code>8000</code> 번 포트를 이용해 응답을 대기 합니다. 인증에 성공 후 kubelogin 로 응답을 보내주기 위해 <code>Valid redirect URIs</code> 설정을 추가해줍니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-redirect.png"></p><h4 id="3-3-kubeconfig-파일에-정보-추가"><a href="#3-3-kubeconfig-파일에-정보-추가" class="headerlink" title="3-3. kubeconfig 파일에 정보 추가"></a>3-3. kubeconfig 파일에 정보 추가</h4><p>쿠버네티스에서 kubelogin 을 이용해 사용자 인증이 진행될 수 있도록 config 파일에 명령어와 옵션들을 추가합니다. 해당 정보들을 통해 kubelogin 에서 Keycloak 을 이용해 인증을 진행하고 인증정보들을 관리해줍니다.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">keycloak-user</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">exec:</span></span><br><span class="line">      <span class="attr">apiVersion:</span> <span class="string">client.authentication.k8s.io/v1beta1</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">kubectl</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">oidc-login</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">get-token</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--oidc-issuer-url=https://&lt;Keycloak-호스트&gt;/auth/realms/&lt;Realm-이름&gt;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--oidc-client-id=kubernetes-client</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--oidc-client-secret=&lt;Keycloak</span> <span class="string">Client</span> <span class="string">Secret&gt;</span></span><br></pre></td></tr></table></figure><p>명령어를 이용해서도 config 파일에 설정정보를 추가할 수 있습니다.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl config set-credentials keycloak-user \</span><br><span class="line">  --exec-api-version=client.authentication.k8s.io/v1beta1 \</span><br><span class="line">  --exec-command=kubectl \</span><br><span class="line">  --exec-arg=oidc-login \</span><br><span class="line">  --exec-arg=get-token \</span><br><span class="line">  --exec-arg=--oidc-issuer-url=https://&lt;Keycloak-호스트&gt;/auth/realms/&lt;Realm-이름&gt; \</span><br><span class="line">  --exec-arg=--oidc-client-id=kubernetes-client \</span><br><span class="line">  --exec-arg=--oidc-client-secret=&lt;Keycloak Client Secret&gt;</span><br></pre></td></tr></table></figure><p>아래 처럼 User 정보를 명시적으로 지정해서 명령어를 사용할 수 있습니다.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl --user=keycloak-user get nodes</span><br></pre></td></tr></table></figure><p>kubectl 명령어를 사용하게 되면 kubelogin 가 Keycloak 을 통해 사용자 인증을 하도록 화면을 띄어줍니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-kubelogin.png"></p><p>인증이 정상적으로 이뤄지면 아래와 같이 성공했다는 메시지가 뜨고 위에서 실행한 결과가 정상적으로 실행됩니다.</p><p><img src="/images/k8s/auth/k8s-keycloak-kubelogin-success.png"></p><h4 id="3-4-전체-kubeconfig-파일"><a href="#3-4-전체-kubeconfig-파일" class="headerlink" title="3-4. 전체 kubeconfig 파일"></a>3-4. 전체 kubeconfig 파일</h4><p>이제 새로운 쿠버네티스 운영자가 왔을 경우 해당 config 파일을 건내주면 Keycloak 을 통해 사용자 인증을 받고 쿠버네티스 리소스에 접근할 수 있습니다.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">    <span class="attr">certificate-authority-data:</span> <span class="string">LS0tLS1CRUdJ</span> <span class="string">...</span> <span class="string">DQVRFLS0tLS0K</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">&lt;kubernetes</span> <span class="string">api</span> <span class="string">server</span> <span class="string">주소&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">kubernetes</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">keycloak-user</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Config</span></span><br><span class="line"><span class="attr">preferences:</span> &#123;&#125;</span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">keycloak-user</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">exec:</span></span><br><span class="line">      <span class="attr">apiVersion:</span> <span class="string">client.authentication.k8s.io/v1beta1</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">kubectl</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">oidc-login</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">get-token</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--oidc-issuer-url=https://&lt;Keycloak-호스트&gt;/auth/realms/&lt;Realm-이름&gt;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--oidc-client-id=kubernetes-client</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--oidc-client-secret=&lt;Keycloak</span> <span class="string">Client</span> <span class="string">Secret&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/%EC%9D%B8%EC%A6%9D-%EC%9D%B8%EA%B0%80/">인증/인가</category>
      
      
      
      <comments>https://ckck803.github.io/2025/04/05/k8s/auth/k8s-oidc-keycloak/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스] 인증/인가 - Role 과 ClusterRole</title>
      <link>https://ckck803.github.io/2025/04/05/k8s/auth/role-clusterrole/</link>
      <guid>https://ckck803.github.io/2025/04/05/k8s/auth/role-clusterrole/</guid>
      <pubDate>Sat, 05 Apr 2025 01:31:46 GMT</pubDate>
      
      <description>&lt;!-- ![](/images/k8s/helm/helm.png) --&gt;

&lt;p&gt;&lt;img src=&quot;/images/k8s/k8s.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/05/k8s/auth/k8s-oidc-keycloak/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - OIDC 를 이용한 Keycloak 연동&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - OIDC 를 이용한 Keycloak 연동&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2023/06/11/k8s/auth/ServiceAccount/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - ServiceAccount&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - ServiceAccount&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/03/k8s/auth/cert-user/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/05/k8s/auth/role-clusterrole/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - Role 과 ClusterRole&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - Role 과 ClusterRole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;쿠버네티스에서 Role과 ClusterRole은 RBAC(역할 기반 접근 제어)를 통해 사용자나 서비스 계정에 권한을 부여하는 중요한 리소스입니다. 아래에 각각의 특징과 차이점을 정리해 보았습니다.&lt;/p&gt;
&lt;h2 id=&quot;Role&quot;&gt;&lt;a href=&quot;#Role&quot; class=&quot;headerlink&quot; title=&quot;Role&quot;&gt;&lt;/a&gt;Role&lt;/h2&gt;&lt;p&gt;네임스페이스 범위: Role은 특정 네임스페이스 내에서만 유효합니다. 따라서 한 네임스페이스의 자원에만 접근 권한을 부여할 수 있습니다.&lt;/p&gt;
&lt;p&gt;정책 정의: Role 안에는 API 리소스(예: Pods, Services 등)에 대한 특정 동작(예: get, list, create 등)이 정의되어 있습니다.&lt;/p&gt;
&lt;p&gt;바인딩: Role은 RoleBinding을 통해 사용자나 서비스 계정에 연결됩니다. 이때 RoleBinding 역시 특정 네임스페이스에 속합니다.&lt;/p&gt;
</description>
      
      
      
      <content:encoded><![CDATA[<!-- ![](/images/k8s/helm/helm.png) --><p><img src="/images/k8s/k8s.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/04/05/k8s/auth/k8s-oidc-keycloak/" title="[쿠버네티스] 인증&#x2F;인가 - OIDC 를 이용한 Keycloak 연동">[쿠버네티스] 인증&#x2F;인가 - OIDC 를 이용한 Keycloak 연동</a></li><li><a href="/2023/06/11/k8s/auth/ServiceAccount/" title="[쿠버네티스] 인증&#x2F;인가 - ServiceAccount">[쿠버네티스] 인증&#x2F;인가 - ServiceAccount</a></li><li><a href="/2025/04/03/k8s/auth/cert-user/" title="[쿠버네티스] 인증&#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증">[쿠버네티스] 인증&#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증</a></li><li><a href="/2025/04/05/k8s/auth/role-clusterrole/" title="[쿠버네티스] 인증&#x2F;인가 - Role 과 ClusterRole">[쿠버네티스] 인증&#x2F;인가 - Role 과 ClusterRole</a></li></ul><p>쿠버네티스에서 Role과 ClusterRole은 RBAC(역할 기반 접근 제어)를 통해 사용자나 서비스 계정에 권한을 부여하는 중요한 리소스입니다. 아래에 각각의 특징과 차이점을 정리해 보았습니다.</p><h2 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h2><p>네임스페이스 범위: Role은 특정 네임스페이스 내에서만 유효합니다. 따라서 한 네임스페이스의 자원에만 접근 권한을 부여할 수 있습니다.</p><p>정책 정의: Role 안에는 API 리소스(예: Pods, Services 등)에 대한 특정 동작(예: get, list, create 등)이 정의되어 있습니다.</p><p>바인딩: Role은 RoleBinding을 통해 사용자나 서비스 계정에 연결됩니다. 이때 RoleBinding 역시 특정 네임스페이스에 속합니다.</p>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/%EC%9D%B8%EC%A6%9D-%EC%9D%B8%EA%B0%80/">인증/인가</category>
      
      
      
      <comments>https://ckck803.github.io/2025/04/05/k8s/auth/role-clusterrole/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스] 인증/인가 - X.509 인증서를 사용한 사용자 추가 및 인증</title>
      <link>https://ckck803.github.io/2025/04/03/k8s/auth/cert-user/</link>
      <guid>https://ckck803.github.io/2025/04/03/k8s/auth/cert-user/</guid>
      <pubDate>Thu, 03 Apr 2025 01:31:46 GMT</pubDate>
      
      <description>&lt;!-- ![](/images/k8s/helm/helm.png) --&gt;

&lt;p&gt;&lt;img src=&quot;/images/k8s/k8s.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/05/k8s/auth/k8s-oidc-keycloak/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - OIDC 를 이용한 Keycloak 연동&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - OIDC 를 이용한 Keycloak 연동&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2023/06/11/k8s/auth/ServiceAccount/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - ServiceAccount&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - ServiceAccount&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/03/k8s/auth/cert-user/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/04/05/k8s/auth/role-clusterrole/&quot; title=&quot;[쿠버네티스] 인증&amp;#x2F;인가 - Role 과 ClusterRole&quot;&gt;[쿠버네티스] 인증&amp;#x2F;인가 - Role 과 ClusterRole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;쿠버네티스는 사용자를 “인증”하는 방식만 알면 되고, 사용자 정보를 자체를 저장하지 않습니다. &lt;/p&gt;
&lt;p&gt;X.509 인증서 를 사용하는 방식은 사용자 인증서를 만들고 클러스터에 등록해서 인증하는 방식입니다.&lt;/p&gt;
&lt;h2 id=&quot;✅-1-사용자-인증서-및-키-생성&quot;&gt;&lt;a href=&quot;#✅-1-사용자-인증서-및-키-생성&quot; class=&quot;headerlink&quot; title=&quot;✅ 1. 사용자 인증서 및 키 생성&quot;&gt;&lt;/a&gt;✅ 1. 사용자 인증서 및 키 생성&lt;/h2&gt;&lt;h4 id=&quot;1-개인-키-Private-Key-생성&quot;&gt;&lt;a href=&quot;#1-개인-키-Private-Key-생성&quot; class=&quot;headerlink&quot; title=&quot;1. 개인 키 (Private Key) 생성&quot;&gt;&lt;/a&gt;1. 개인 키 (Private Key) 생성&lt;/h4&gt;&lt;p&gt;RSA 알고리즘으로 개인 키 생성 하게 되면 &lt;code&gt;dev-user.key&lt;/code&gt; 파일이 생성됩니다.&lt;/p&gt;
&lt;p&gt;개인 키는 인증서 서명 요청(CSR)을 만들 때 필요하며 이후 쿠버네티스 API 서버와 통신 시 이 키로 서명된 인증서를 사용해 본인을 증명&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- ![](/images/k8s/helm/helm.png) --><p><img src="/images/k8s/k8s.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/04/05/k8s/auth/k8s-oidc-keycloak/" title="[쿠버네티스] 인증&#x2F;인가 - OIDC 를 이용한 Keycloak 연동">[쿠버네티스] 인증&#x2F;인가 - OIDC 를 이용한 Keycloak 연동</a></li><li><a href="/2023/06/11/k8s/auth/ServiceAccount/" title="[쿠버네티스] 인증&#x2F;인가 - ServiceAccount">[쿠버네티스] 인증&#x2F;인가 - ServiceAccount</a></li><li><a href="/2025/04/03/k8s/auth/cert-user/" title="[쿠버네티스] 인증&#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증">[쿠버네티스] 인증&#x2F;인가 - X.509 인증서를 사용한 사용자 추가 및 인증</a></li><li><a href="/2025/04/05/k8s/auth/role-clusterrole/" title="[쿠버네티스] 인증&#x2F;인가 - Role 과 ClusterRole">[쿠버네티스] 인증&#x2F;인가 - Role 과 ClusterRole</a></li></ul><hr><p>쿠버네티스는 사용자를 “인증”하는 방식만 알면 되고, 사용자 정보를 자체를 저장하지 않습니다. </p><p>X.509 인증서 를 사용하는 방식은 사용자 인증서를 만들고 클러스터에 등록해서 인증하는 방식입니다.</p><h2 id="✅-1-사용자-인증서-및-키-생성"><a href="#✅-1-사용자-인증서-및-키-생성" class="headerlink" title="✅ 1. 사용자 인증서 및 키 생성"></a>✅ 1. 사용자 인증서 및 키 생성</h2><h4 id="1-개인-키-Private-Key-생성"><a href="#1-개인-키-Private-Key-생성" class="headerlink" title="1. 개인 키 (Private Key) 생성"></a>1. 개인 키 (Private Key) 생성</h4><p>RSA 알고리즘으로 개인 키 생성 하게 되면 <code>dev-user.key</code> 파일이 생성됩니다.</p><p>개인 키는 인증서 서명 요청(CSR)을 만들 때 필요하며 이후 쿠버네티스 API 서버와 통신 시 이 키로 서명된 인증서를 사용해 본인을 증명</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genrsa -out dev-user.key 2048</span><br></pre></td></tr></table></figure><h4 id="2-CSR-Certificate-Signing-Request-인증서-서명-요청-생성"><a href="#2-CSR-Certificate-Signing-Request-인증서-서명-요청-생성" class="headerlink" title="2. CSR (Certificate Signing Request, 인증서 서명 요청) 생성"></a>2. CSR (Certificate Signing Request, 인증서 서명 요청) 생성</h4><p>개인 키를 기반으로 사용자 정보를 포함하는 CSR을 생성합니다. 아래 명령어를 이용하면 <code>dev-user.csr</code> 파일이 생성됩니다.</p><p>CN&#x3D;dev-user: 사용자의 이름<br>O&#x3D;dev-group: 그룹 이름 (RBAC에서 사용 가능)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req -new \</span><br><span class="line">  -key dev-user.key \</span><br><span class="line">  -out dev-user.csr \</span><br><span class="line">  -subj <span class="string">&quot;/CN=dev-user/O=dev-group&quot;</span></span><br></pre></td></tr></table></figure><h2 id="✅-2-클러스터-CA로-인증서-서명"><a href="#✅-2-클러스터-CA로-인증서-서명" class="headerlink" title="✅ 2. 클러스터 CA로 인증서 서명"></a>✅ 2. 클러스터 CA로 인증서 서명</h2><p>이 단계는 Kubernetes 클러스터의 CA 인증서와 키가 필요합니다. 클러스터 CA 를 사용하여 CSR에 서명해 X.509 인증서를 발급합니다. 아래 명령어를 이용하면 <code>dev-user.crt</code> 파일이 생성됩니다.</p><p>보통 kubeadm 으로 설치한 경우에는 <code>/etc/kubernetes/pki/ca.crt</code>, <code>/etc/kubernetes/pki/ca.key</code> 경로에 있습니다</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo openssl x509 -req \</span><br><span class="line">  -<span class="keyword">in</span> dev-user.csr \</span><br><span class="line">  -CA /etc/kubernetes/pki/ca.crt \</span><br><span class="line">  -CAkey /etc/kubernetes/pki/ca.key \</span><br><span class="line">  -CAcreateserial \</span><br><span class="line">  -out dev-user.crt \</span><br><span class="line">  -days 365</span><br></pre></td></tr></table></figure><p>이제 dev-user.crt와 dev-user.key가 준비되었습니다.</p><h2 id="✅-3-kubeconfig-파일에-사용자-추가"><a href="#✅-3-kubeconfig-파일에-사용자-추가" class="headerlink" title="✅ 3. kubeconfig 파일에 사용자 추가"></a>✅ 3. kubeconfig 파일에 사용자 추가</h2><h4 id="방법-1-기존-config에-수동으로-추가"><a href="#방법-1-기존-config에-수동으로-추가" class="headerlink" title="방법 1. 기존 config에 수동으로 추가"></a>방법 1. 기존 config에 수동으로 추가</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev-user</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">client-certificate:</span> <span class="string">/path/to/dev-user.crt</span></span><br><span class="line">    <span class="attr">client-key:</span> <span class="string">/path/to/dev-user.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev-context</span></span><br><span class="line">  <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">your-cluster</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">dev-user</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">dev-context</span></span><br></pre></td></tr></table></figure><h4 id="방법-2-kubectl-config-명령어로-추가"><a href="#방법-2-kubectl-config-명령어로-추가" class="headerlink" title="방법 2. kubectl config 명령어로 추가"></a>방법 2. kubectl config 명령어로 추가</h4><p>아래 명령어를 이용하여 위에서 생성한 인증서와 개인키를 kubeconfig 파일에 dev-user 이름으로 인증정보를 등록합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 인증서와 개인키를 등록</span></span><br><span class="line">kubectl config set-credentials dev-user \</span><br><span class="line">  --client-certificate=/path/to/dev-user.crt \</span><br><span class="line">  --client-key=/path/to/dev-user.key</span><br></pre></td></tr></table></figure><p>위에서 등록된 인증정보를 이용해 클러스터에 접근할 수 있도록 context 정보를 kubeconfig 파일에 추가해줍니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 클러스터와 namespace 그리고 user 정보를 등록합니다.</span></span><br><span class="line">kubectl config set-context dev-context \</span><br><span class="line">  --cluster=your-cluster-name \</span><br><span class="line">  --namespace=default \</span><br><span class="line">  --user=dev-user</span><br></pre></td></tr></table></figure><h4 id="최종-config-모습"><a href="#최종-config-모습" class="headerlink" title="최종 config 모습"></a>최종 config 모습</h4><p>위 정보들을 <code>./kube/config</code> 파일에 반영하면 아래와 같은 모습입니다.</p><figure class="highlight yaml"><figcaption><span>config</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">    <span class="attr">certificate-authority-data:</span> <span class="string">LS0tLS1CRUdJTiBDRV</span> <span class="string">....생략....</span> <span class="string">QVRFLS0tLS0K</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">&lt;kubernetes</span> <span class="string">api</span> <span class="string">server</span> <span class="string">주소&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">kubernetes</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">dev-user</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">home-kubernetes</span></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">home-kubernetes</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Config</span></span><br><span class="line"><span class="attr">preferences:</span> &#123;&#125;</span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev-user</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">client-certificate:</span> <span class="string">/Users/dongwoo-yang/.kube/cert/dev-user.crt</span></span><br><span class="line">    <span class="attr">client-key:</span> <span class="string">/Users/dongwoo-yang/.kube/cert/dev-user.key</span></span><br></pre></td></tr></table></figure><h2 id="✅-4-사용자-권한-부여-RBAC-설정"><a href="#✅-4-사용자-권한-부여-RBAC-설정" class="headerlink" title="✅ 4. 사용자 권한 부여 (RBAC 설정)"></a>✅ 4. 사용자 권한 부여 (RBAC 설정)</h2><figure class="highlight yaml"><figcaption><span>dev-role.yaml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>dev-rolebinding.yaml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev-user</span>   <span class="comment"># &lt;-- 여기의 이름은 인증서의 CN과 같아야 함</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h2 id="✅-5-테스트"><a href="#✅-5-테스트" class="headerlink" title="✅ 5. 테스트"></a>✅ 5. 테스트</h2><p>부여한 권한이 제대로 작동하는지 확인합니다. 저는 pod 에 대한 조회 권한을 보여 했으므로 아래 명령어를 이용했을때 pod 목록이 나와야 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl --context=dev-context get pods -n &lt;네임스페이스&gt;</span><br></pre></td></tr></table></figure><p>제가 default 네임스페이스에는 리소스를 생성하지 않아 Role 과 RoleBinding 의 namespace 만 리소스가 있는 monitoring 으로 변경 후 다시 적용했고 위 명령어를 이용해 조홰했더니 pod 목록이 정상적으로 나오는 것을 확인할 수 있었습니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">❯ k get pod -n monitoring   </span><br><span class="line">NAME                                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line">grafana-bc77b49c6-x5zbh                              1/1     Running   0          40d</span><br><span class="line">loki-0                                               2/2     Running   0          39d</span><br><span class="line">loki-canary-zkd5s                                    1/1     Running   0          39d</span><br><span class="line">loki-chunks-cache-0                                  2/2     Running   0          39d</span><br><span class="line">loki-gateway-6447bff65b-9q5fq                        1/1     Running   0          39d</span><br><span class="line">loki-minio-0                                         1/1     Running   0          39d</span><br><span class="line">loki-results-cache-0                                 2/2     Running   0          39d</span><br><span class="line">prometheus-alertmanager-0                            1/1     Running   0          35d</span><br><span class="line">prometheus-kube-state-metrics-648ddc549f-9xnjm       1/1     Running   0          35d</span><br><span class="line">prometheus-prometheus-node-exporter-tfjgp            1/1     Running   0          35d</span><br><span class="line">prometheus-prometheus-pushgateway-76bc7454df-4j44q   1/1     Running   0          35d</span><br><span class="line">prometheus-server-8cd958945-lhxtp                    3/3     Running   0          33d</span><br><span class="line">promtail-952sx                                       1/1     Running   0          39d</span><br></pre></td></tr></table></figure><h4 id="권한제어-Validation-테스트"><a href="#권한제어-Validation-테스트" class="headerlink" title="권한제어 Validation 테스트"></a>권한제어 Validation 테스트</h4><p>현재 생성된 User 는 Pods 에 대한 조회 권한 밖에 없습니다. 해당 권한을 넘어가는 명령어를 실행함으로써 권한 제어가 제대로 작동하는지 확인합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f dev-role-monitoring.yaml</span><br></pre></td></tr></table></figure><p>새로운 Role 을 생성하도록 했는데, Validation 이 정상적으로 작동하는 것을 확인할 수 있었습니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error from server (Forbidden): error when retrieving current configuration of:</span><br><span class="line">Resource: <span class="string">&quot;rbac.authorization.k8s.io/v1, Resource=roles&quot;</span>, GroupVersionKind: <span class="string">&quot;rbac.authorization.k8s.io/v1, Kind=Role&quot;</span></span><br><span class="line">Name: <span class="string">&quot;pod-reader-monitoring&quot;</span>, Namespace: <span class="string">&quot;monitoring&quot;</span></span><br><span class="line">from server <span class="keyword">for</span>: <span class="string">&quot;dev-role-monitoring.yaml&quot;</span>: roles.rbac.authorization.k8s.io <span class="string">&quot;pod-reader-monitoring&quot;</span> is forbidden: User <span class="string">&quot;dev-user&quot;</span> cannot get resource <span class="string">&quot;roles&quot;</span> <span class="keyword">in</span> API group <span class="string">&quot;rbac.authorization.k8s.io&quot;</span> <span class="keyword">in</span> the namespace <span class="string">&quot;monitoring&quot;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/%EC%9D%B8%EC%A6%9D-%EC%9D%B8%EA%B0%80/">인증/인가</category>
      
      
      
      <comments>https://ckck803.github.io/2025/04/03/k8s/auth/cert-user/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Vue 3] - Tailwind 사용하기</title>
      <link>https://ckck803.github.io/2025/03/09/vue/tailwind/vue-tailwind/</link>
      <guid>https://ckck803.github.io/2025/03/09/vue/tailwind/vue-tailwind/</guid>
      <pubDate>Sun, 09 Mar 2025 11:10:40 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/vue/vue_tailwind.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-Vue3-프로젝트-생성&quot;&gt;&lt;a href=&quot;#1-Vue3-프로젝트-생성&quot; class=&quot;headerlink&quot; title=&quot;1. Vue3 프로젝트 생성&quot;&gt;&lt;/a&gt;1. Vue3 프로젝트 생성&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm init vue@latest my-vue3-app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; my-vue3-app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-Tailwind-Css-설치&quot;&gt;&lt;a href=&quot;#2-Tailwind-Css-설치&quot; class=&quot;headerlink&quot; title=&quot;2.  Tailwind Css 설치&quot;&gt;&lt;/a&gt;2.  Tailwind Css 설치&lt;/h2&gt;&lt;p&gt;Tailwind CSS와 관련된 패키지를 설치합니다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -D tailwindcss postcss autoprefixer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;그런 다음 Tailwind CSS 초기화를 진행합니다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npx tailwindcss init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;이 명령어를 실행하면 프로젝트 루트 디렉토리에 &lt;code&gt;tailwind.config.js&lt;/code&gt; 파일이 생성됩니다.&lt;/p&gt;
&lt;h2 id=&quot;3-Tailwind-CSS-구성&quot;&gt;&lt;a href=&quot;#3-Tailwind-CSS-구성&quot; class=&quot;headerlink&quot; title=&quot;3. Tailwind CSS 구성&quot;&gt;&lt;/a&gt;3. Tailwind CSS 구성&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vue/vue_tailwind.png"></p><h2 id="1-Vue3-프로젝트-생성"><a href="#1-Vue3-프로젝트-생성" class="headerlink" title="1. Vue3 프로젝트 생성"></a>1. Vue3 프로젝트 생성</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init vue@latest my-vue3-app</span><br><span class="line"><span class="built_in">cd</span> my-vue3-app</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="2-Tailwind-Css-설치"><a href="#2-Tailwind-Css-설치" class="headerlink" title="2.  Tailwind Css 설치"></a>2.  Tailwind Css 설치</h2><p>Tailwind CSS와 관련된 패키지를 설치합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -D tailwindcss postcss autoprefixer</span><br></pre></td></tr></table></figure><p>그런 다음 Tailwind CSS 초기화를 진행합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx tailwindcss init</span><br></pre></td></tr></table></figure><p>이 명령어를 실행하면 프로젝트 루트 디렉토리에 <code>tailwind.config.js</code> 파일이 생성됩니다.</p><h2 id="3-Tailwind-CSS-구성"><a href="#3-Tailwind-CSS-구성" class="headerlink" title="3. Tailwind CSS 구성"></a>3. Tailwind CSS 구성</h2><p>생성된 <code>tailwind.config.js</code> 파일을 열고, 아래와 같이 <code>content</code> 필드에 Vue 파일 경로를 추가합니다:</p><figure class="highlight typescript"><figcaption><span>tailwind.config.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;tailwindcss&#x27;).Config</span>&#125; */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">content</span>: [</span><br><span class="line">    <span class="string">&quot;./index.html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;./src/**/*.&#123;vue,js,ts,jsx,tsx&#125;&quot;</span>, <span class="comment">// Vue 파일 경로</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">theme</span>: &#123;</span><br><span class="line">    <span class="attr">extend</span>: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="4-CSS-파일-설정"><a href="#4-CSS-파일-설정" class="headerlink" title="4. CSS 파일 설정"></a>4. CSS 파일 설정</h2><p>Tailwind CSS를 사용하려면 CSS 파일에 Tailwind의 기본 디렉티브를 추가해야 합니다.</p><p><code>src/assets/tailwind.css</code> 파일을 생성하고, 아래 내용을 추가합니다:</p><figure class="highlight typescript"><figcaption><span>tailwind.css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">@tailwind</span> base;</span><br><span class="line"><span class="meta">@tailwind</span> components;</span><br><span class="line"><span class="meta">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure><h2 id="5-Tailwind-CSS를-프로젝트에-포함"><a href="#5-Tailwind-CSS를-프로젝트에-포함" class="headerlink" title="5. Tailwind CSS를 프로젝트에 포함"></a>5. Tailwind CSS를 프로젝트에 포함</h2><p><code>src/main.js</code> 또는 <code>src/main.ts</code> 파일에서 생성한 CSS 파일을 import합니다</p><figure class="highlight typescript"><figcaption><span>main.ts</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Tailwind CSS 추가</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./assets/tailwind.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Frontend/">Frontend</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue/">Vue</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue/Tailwind/">Tailwind</category>
      
      
      
      <comments>https://ckck803.github.io/2025/03/09/vue/tailwind/vue-tailwind/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Vue 3] - Pinia 사용하기</title>
      <link>https://ckck803.github.io/2025/03/05/vue/pinia/vue-pinia/</link>
      <guid>https://ckck803.github.io/2025/03/05/vue/pinia/vue-pinia/</guid>
      <pubDate>Wed, 05 Mar 2025 11:10:40 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/vue/vue-2.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Pinia-란&quot;&gt;&lt;a href=&quot;#Pinia-란&quot; class=&quot;headerlink&quot; title=&quot;Pinia 란?&quot;&gt;&lt;/a&gt;Pinia 란?&lt;/h2&gt;&lt;p&gt;Pinia 는 Vue 에서 사용하는 상태 관리를 위한 라이브러리입니다. Vue2 에서는 Vuex 를 사용하다가 Pinia 의 등장으로 점차 Pinia 가 대세를 이루게 됐습니다.&lt;/p&gt;
&lt;p&gt;Vue 에서는 ref, reactive 와 같은 상태 관리를 할 수 있는 방법들이 있는데 이런 함수들을 이용해 생성된 상태를 다른 페이지로 전달하기 위해서는 props 나 event 혹은 provide 나 inject 를 이용해 전달할 수 있지만, 파일이 많아질수록 추적하기가 복잡해집니다.&lt;/p&gt;
&lt;p&gt;Pinia 를 사용하는 이유는 상태를 관리하는 로직을 분리할 수 있고 &lt;strong&gt;중앙 집중식&lt;/strong&gt; 으로 관리할 수 있다는 이점 때문에 그렇습니다.&lt;/p&gt;
&lt;h2 id=&quot;1-Pinia-설치&quot;&gt;&lt;a href=&quot;#1-Pinia-설치&quot; class=&quot;headerlink&quot; title=&quot;1. Pinia 설치&quot;&gt;&lt;/a&gt;1. Pinia 설치&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install pinia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-Pinia-모듈-추가하기&quot;&gt;&lt;a href=&quot;#2-Pinia-모듈-추가하기&quot; class=&quot;headerlink&quot; title=&quot;2. Pinia 모듈 추가하기&quot;&gt;&lt;/a&gt;2. Pinia 모듈 추가하기&lt;/h2&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;main.ts&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; createApp &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;vue&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; createPinia &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;pinia&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;./App.vue&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = &lt;span class=&quot;title function_&quot;&gt;createApp&lt;/span&gt;(&lt;span class=&quot;title class_&quot;&gt;App&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; pinia = &lt;span class=&quot;title function_&quot;&gt;createPinia&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;title function_&quot;&gt;use&lt;/span&gt;(pinia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;title function_&quot;&gt;mount&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-Pinia-Store-생성&quot;&gt;&lt;a href=&quot;#3-Pinia-Store-생성&quot; class=&quot;headerlink&quot; title=&quot;3. Pinia Store 생성&quot;&gt;&lt;/a&gt;3. Pinia Store 생성&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vue/vue-2.png"></p><h2 id="Pinia-란"><a href="#Pinia-란" class="headerlink" title="Pinia 란?"></a>Pinia 란?</h2><p>Pinia 는 Vue 에서 사용하는 상태 관리를 위한 라이브러리입니다. Vue2 에서는 Vuex 를 사용하다가 Pinia 의 등장으로 점차 Pinia 가 대세를 이루게 됐습니다.</p><p>Vue 에서는 ref, reactive 와 같은 상태 관리를 할 수 있는 방법들이 있는데 이런 함수들을 이용해 생성된 상태를 다른 페이지로 전달하기 위해서는 props 나 event 혹은 provide 나 inject 를 이용해 전달할 수 있지만, 파일이 많아질수록 추적하기가 복잡해집니다.</p><p>Pinia 를 사용하는 이유는 상태를 관리하는 로직을 분리할 수 있고 <strong>중앙 집중식</strong> 으로 관리할 수 있다는 이점 때문에 그렇습니다.</p><h2 id="1-Pinia-설치"><a href="#1-Pinia-설치" class="headerlink" title="1. Pinia 설치"></a>1. Pinia 설치</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><h2 id="2-Pinia-모듈-추가하기"><a href="#2-Pinia-모듈-추가하기" class="headerlink" title="2. Pinia 모듈 추가하기"></a>2. Pinia 모듈 추가하기</h2><figure class="highlight typescript"><figcaption><span>main.ts</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(pinia);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="3-Pinia-Store-생성"><a href="#3-Pinia-Store-생성" class="headerlink" title="3. Pinia Store 생성"></a>3. Pinia Store 생성</h2><p>상태들을 저장 및 관리할 수 있는 pinia store 를 생성해줍니다.</p><figure class="highlight ts"><figcaption><span>store/counterStore.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">count</span> * <span class="number">2</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">count</span>++;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">decrement</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">count</span>--;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="4-Pinia-사용하기"><a href="#4-Pinia-사용하기" class="headerlink" title="4. Pinia 사용하기"></a>4. Pinia 사용하기</h2><p>위에서 생성된 Store 를 통해 Store 내에 있는 값을 가져오거나, Store 내에 있는 상태를 업데이트 해주는 함수를 이용해 Store 값을 변경할 수 있습니다.</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter: &#123;&#123; counter &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Double Count: &#123;&#123; doubleCounter &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>Increment<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decrement&quot;</span>&gt;</span>Decrement<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; useCounterStore &#125; <span class="keyword">from</span> <span class="string">&#x27;./store/counterStore&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> counterStore = <span class="title function_">useCounterStore</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">counter</span>: counterStore.<span class="property">count</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">doubleCounter</span>: counterStore.<span class="property">doubleCount</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">increment</span>: counterStore.<span class="property">increment</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">decrement</span>: counterStore.<span class="property">decrement</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.app</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-tag">button</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Frontend/">Frontend</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue/">Vue</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue/Tailwind/">Tailwind</category>
      
      
      
      <comments>https://ckck803.github.io/2025/03/05/vue/pinia/vue-pinia/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Vue 3] - unplugin-vue-router 사용하기</title>
      <link>https://ckck803.github.io/2025/03/05/vue/router/vue-unplugin-vue-router/</link>
      <guid>https://ckck803.github.io/2025/03/05/vue/router/vue-unplugin-vue-router/</guid>
      <pubDate>Wed, 05 Mar 2025 11:10:40 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/vue/vue-2.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/posva/unplugin-vue-router&quot;&gt;https://github.com/posva/unplugin-vue-router&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vue 에서는 새로운 페이지를 생성할때마다 vue-router 에 직접 등록해줘야 하는 번거로움이 있습니다. 이런 수고스러움을 좀 덜고자 찾아보니 vue 에서도 next 나 nuxt 처럼 파일 기반으로 라우팅을 할 수 있게 지원해주는 모듈을 찾게 됐습니다. &lt;/p&gt;
&lt;h2 id=&quot;1-unplugin-vue-router-모듈을-설치&quot;&gt;&lt;a href=&quot;#1-unplugin-vue-router-모듈을-설치&quot; class=&quot;headerlink&quot; title=&quot;1.  unplugin-vue-router 모듈을 설치&quot;&gt;&lt;/a&gt;1.  &lt;code&gt;unplugin-vue-router&lt;/code&gt; 모듈을 설치&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i -D unplugin-vue-router&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-vite-config-ts-에-다음-내용을-추가해-줍니다&quot;&gt;&lt;a href=&quot;#2-vite-config-ts-에-다음-내용을-추가해-줍니다&quot; class=&quot;headerlink&quot; title=&quot;2.  vite.config.ts 에 다음 내용을 추가해 줍니다.&quot;&gt;&lt;/a&gt;2.  &lt;code&gt;vite.config.ts&lt;/code&gt; 에 다음 내용을 추가해 줍니다.&lt;/h2&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;vite.config.ts&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; defineConfig &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;vite&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; vue &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;@vitejs/plugin-vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;VueRouter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;unplugin-vue-router/vite&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// https://vitejs.dev/config/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;defineConfig&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;plugins&lt;/span&gt;: [&lt;span class=&quot;title function_&quot;&gt;vue&lt;/span&gt;(), &lt;span class=&quot;title class_&quot;&gt;VueRouter&lt;/span&gt;(&amp;#123;&amp;#125;)],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-tsconfig-json-설정-정보-추가&quot;&gt;&lt;a href=&quot;#3-tsconfig-json-설정-정보-추가&quot; class=&quot;headerlink&quot; title=&quot;3. tsconfig.json 설정 정보 추가&quot;&gt;&lt;/a&gt;3. tsconfig.json 설정 정보 추가&lt;/h2&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;figcaption&gt;&lt;span&gt;tsconfig.json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;moduleResolution&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Bundler&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;types&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;unplugin-vue-router/client&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&amp;quot;include&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;./typed-router.d.ts&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vue/vue-2.png"></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><p><a href="https://github.com/posva/unplugin-vue-router">https://github.com/posva/unplugin-vue-router</a></p><p>vue 에서는 새로운 페이지를 생성할때마다 vue-router 에 직접 등록해줘야 하는 번거로움이 있습니다. 이런 수고스러움을 좀 덜고자 찾아보니 vue 에서도 next 나 nuxt 처럼 파일 기반으로 라우팅을 할 수 있게 지원해주는 모듈을 찾게 됐습니다. </p><h2 id="1-unplugin-vue-router-모듈을-설치"><a href="#1-unplugin-vue-router-모듈을-설치" class="headerlink" title="1.  unplugin-vue-router 모듈을 설치"></a>1.  <code>unplugin-vue-router</code> 모듈을 설치</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -D unplugin-vue-router</span><br></pre></td></tr></table></figure><h2 id="2-vite-config-ts-에-다음-내용을-추가해-줍니다"><a href="#2-vite-config-ts-에-다음-내용을-추가해-줍니다" class="headerlink" title="2.  vite.config.ts 에 다음 내용을 추가해 줍니다."></a>2.  <code>vite.config.ts</code> 에 다음 내용을 추가해 줍니다.</h2><figure class="highlight typescript"><figcaption><span>vite.config.ts</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-router/vite&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>(), <span class="title class_">VueRouter</span>(&#123;&#125;)],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="3-tsconfig-json-설정-정보-추가"><a href="#3-tsconfig-json-설정-정보-추가" class="headerlink" title="3. tsconfig.json 설정 정보 추가"></a>3. tsconfig.json 설정 정보 추가</h2><figure class="highlight json"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;moduleResolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bundler&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;types&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;unplugin-vue-router/client&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="string">&quot;./typed-router.d.ts&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="4-routes-index-ts-파일-생성"><a href="#4-routes-index-ts-파일-생성" class="headerlink" title="4.  routes&#x2F;index.ts 파일 생성"></a>4.  routes&#x2F;index.ts 파일 생성</h2><figure class="highlight typescript"><figcaption><span>index.ts</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createWebHistory, createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router/auto-routes&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">  routes,</span><br><span class="line">  <span class="attr">strict</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h2 id="5-main-ts-파일에-라우트-모듈-추가"><a href="#5-main-ts-파일에-라우트-모듈-추가" class="headerlink" title="5.  main.ts 파일에 라우트 모듈 추가"></a>5.  main.ts 파일에 라우트 모듈 추가</h2><figure class="highlight typescript"><figcaption><span>main.ts</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createApp&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>  </span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span>  </span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>  </span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>)  </span><br><span class="line">  .<span class="title function_">use</span>(router)  </span><br><span class="line">  .<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="6-app-vue-파일"><a href="#6-app-vue-파일" class="headerlink" title="6.  app.vue 파일"></a>6.  app.vue 파일</h2><figure class="highlight typescript"><figcaption><span>app.vue</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;  </span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;  </span><br><span class="line">  </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span>  </span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span>  </span><br><span class="line">  </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css">  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.logo</span> &#123;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">6em</span>;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">1.5em</span>;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">will-change</span>: filter;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">transition</span>: filter <span class="number">300ms</span>;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.logo</span><span class="selector-pseudo">:hover</span> &#123;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">2em</span> <span class="number">#646cffaa</span>);  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.logo</span><span class="selector-class">.vue</span><span class="selector-pseudo">:hover</span> &#123;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">2em</span> <span class="number">#42b883aa</span>);  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;  </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Frontend/">Frontend</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue/">Vue</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue/Tailwind/">Tailwind</category>
      
      
      
      <comments>https://ckck803.github.io/2025/03/05/vue/router/vue-unplugin-vue-router/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Spring Boot] - Cache</title>
      <link>https://ckck803.github.io/2025/03/05/spring/springboot-cache/</link>
      <guid>https://ckck803.github.io/2025/03/05/spring/springboot-cache/</guid>
      <pubDate>Tue, 04 Mar 2025 22:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/springboot/spring-boot-logo.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Post not found: spring-boot/spring-framework/springboot-actuator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Post not found: spring-boot/spring-framework/springboot-messageresource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Post not found: spring-boot/spring-framework/configuration/springboot-WebMvcConfigurer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Post not found: spring-boot/spring-framework/configuration/springboot-autoconfiguration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-caching.html&quot;&gt;https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-caching.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.baeldung.com/spring-cache-tutorial&quot;&gt;https://www.baeldung.com/spring-cache-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Spring-Boot-캐시-추상화&quot;&gt;&lt;a href=&quot;#Spring-Boot-캐시-추상화&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot 캐시 추상화&quot;&gt;&lt;/a&gt;Spring Boot 캐시 추상화&lt;/h2&gt;&lt;p&gt;Spring Boot 에서는 캐시를 쉽게 사용할 수 있도록 캐싱 기능들을 추상화해 제공합니다. 캐싱 추상화 가능으로 개발자는 특정 캐시 저장소에 종속적이지 않고 일관된 방식으로 캐싱기능을 사용할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&quot;✅-의존성-추가&quot;&gt;&lt;a href=&quot;#✅-의존성-추가&quot; class=&quot;headerlink&quot; title=&quot;✅ 의존성 추가&quot;&gt;&lt;/a&gt;✅ 의존성 추가&lt;/h2&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;implementation &lt;span class=&quot;string&quot;&gt;&amp;#x27;org.springframework.boot:spring-boot-starter-cache&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;✅-Cache-활성화&quot;&gt;&lt;a href=&quot;#✅-Cache-활성화&quot; class=&quot;headerlink&quot; title=&quot;✅ Cache 활성화&quot;&gt;&lt;/a&gt;✅ Cache 활성화&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/springboot/spring-boot-logo.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="#">Post not found: spring-boot/spring-framework/springboot-actuator</a></li><li><a href="#">Post not found: spring-boot/spring-framework/springboot-messageresource</a></li><li><a href="#">Post not found: spring-boot/spring-framework/configuration/springboot-WebMvcConfigurer</a></li><li><a href="#">Post not found: spring-boot/spring-framework/configuration/springboot-autoconfiguration</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-caching.html">https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-caching.html</a></li><li><a href="https://www.baeldung.com/spring-cache-tutorial">https://www.baeldung.com/spring-cache-tutorial</a></li></ul><h2 id="Spring-Boot-캐시-추상화"><a href="#Spring-Boot-캐시-추상화" class="headerlink" title="Spring Boot 캐시 추상화"></a>Spring Boot 캐시 추상화</h2><p>Spring Boot 에서는 캐시를 쉽게 사용할 수 있도록 캐싱 기능들을 추상화해 제공합니다. 캐싱 추상화 가능으로 개발자는 특정 캐시 저장소에 종속적이지 않고 일관된 방식으로 캐싱기능을 사용할 수 있습니다.</p><h2 id="✅-의존성-추가"><a href="#✅-의존성-추가" class="headerlink" title="✅ 의존성 추가"></a>✅ 의존성 추가</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-cache&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="✅-Cache-활성화"><a href="#✅-Cache-활성화" class="headerlink" title="✅ Cache 활성화"></a>✅ Cache 활성화</h2><p><code>@EnableCaching</code> 를 이용해 Cache 기능을 활성화 할 수 있다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CacheManager <span class="title function_">cacheManager</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ConcurrentMapCacheManager</span>(<span class="string">&quot;cache&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="✅-Cache-관련-어노테이션"><a href="#✅-Cache-관련-어노테이션" class="headerlink" title="✅ Cache 관련 어노테이션"></a>✅ Cache 관련 어노테이션</h2><p>스프링에서는 캐싱을 쉽게 제어할 수 있도록 캐시관련 <strong>어노테이션</strong> 들을 제공합니다.</p><h4 id="1-Cacheable"><a href="#1-Cacheable" class="headerlink" title="1. @Cacheable"></a>1. @Cacheable</h4><p>메서드 호출 시 동일한 파라미터 값이 있으면 캐시된 결과를 반환하여 실제 메서드 실행을 건너뜁니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 캐시에서 사용자 조회 (@Cacheable) </span></span><br><span class="line"><span class="comment">// 캐시에서 사용자 조회. DB에서 조회 후, 캐시에 저장합니다.</span></span><br><span class="line"><span class="meta">@Cacheable(key = &quot;#id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">getUserById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;DB에서 사용자 조회: &quot;</span> + id);</span><br><span class="line">    <span class="keyword">return</span> userRepository.findById(id).orElse(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-CachePut"><a href="#2-CachePut" class="headerlink" title="2. @CachePut"></a>2. @CachePut</h4><p>메서드 실행 후 결과를 캐시에 업데이트합니다. 데이터 수정 후 최신 캐시를 유지할 때 사용합니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2. 사용자 업데이트 후 캐시 갱신 (@CachePut)</span></span><br><span class="line"><span class="comment">// 사용자 업데이트 후 캐시 갱신. DB 업데이트와 동시에 캐시 값을 최신화합니다.</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@CachePut(key = &quot;#user.id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">updateUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;DB에서 사용자 업데이트: &quot;</span> + user.getId());</span><br><span class="line">    <span class="keyword">return</span> userRepository.save(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-CacheEvict"><a href="#3-CacheEvict" class="headerlink" title="3. @CacheEvict"></a>3. @CacheEvict</h4><p>특정 조건에 맞는 캐시 항목을 제거합니다. 데이터 삭제나 업데이트 시 캐시 무효화에 유용합니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 3. 사용자 삭제 후 캐시 제거 (@CacheEvict)</span></span><br><span class="line"><span class="comment">// 사용자 삭제 후 캐시 제거. DB 삭제와 동시에 캐시된 데이터를 제거합니다.</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@CacheEvict(key = &quot;#id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;DB에서 사용자 삭제: &quot;</span> + id);</span><br><span class="line">    userRepository.deleteById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-Caching"><a href="#4-Caching" class="headerlink" title="4. @Caching"></a>4. @Caching</h4><p>@Caching 어노테이션은 하나의 메서드에 여러 캐시 관련 애너테이션 (@Cacheable, @CachePut, @CacheEvict 등) 을 함께 적용할 수 있도록 그룹화하는 역할을 합니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 4. 복합 캐시 작업: 캐시 조회, 캐시 업데이트, 그리고 다른 캐시(&quot;userList&quot;) 제거 (@Caching)</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 복합 캐시 작업:</span></span><br><span class="line"><span class="comment"> * - <span class="doctag">@Cacheable</span>: 캐시에서 먼저 조회</span></span><br><span class="line"><span class="comment"> * - <span class="doctag">@CachePut</span>: 메서드 실행 후 캐시 갱신</span></span><br><span class="line"><span class="comment"> * - <span class="doctag">@CacheEvict</span>: 다른 캐시(&quot;userList&quot;)의 모든 엔트리를 제거</span></span><br><span class="line"><span class="comment"> * DB에서 사용자 데이터를 조회하고, 수정 후 저장합니다.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Caching(</span></span><br><span class="line"><span class="meta">    cacheable = &#123; @Cacheable(key = &quot;#id&quot;) &#125;,</span></span><br><span class="line"><span class="meta">    put = &#123; @CachePut(key = &quot;#result.id&quot;) &#125;,</span></span><br><span class="line"><span class="meta">    evict = &#123; @CacheEvict(value = &quot;userList&quot;, allEntries = true) &#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">getAndUpdateUser</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;DB에서 사용자 조회 후 업데이트: &quot;</span> + id);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userRepository.findById(id).orElse(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">if</span>(user != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 예시로 이름 뒤에 &quot; updated&quot;를 붙여 업데이트</span></span><br><span class="line">        user.setName(user.getName() + <span class="string">&quot; updated&quot;</span>);</span><br><span class="line">        user = userRepository.save(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-CacheConfig"><a href="#5-CacheConfig" class="headerlink" title="5. @CacheConfig"></a>5. @CacheConfig</h4><p>@CacheConfig 어노테이션은 <strong>클래스 레벨</strong> 에서 공통 캐시 설정을 정의할 수 있도록 도와줍니다. 이를 통해, 해당 클래스의 모든 캐시 관련 메서드에서 반복적으로 동일한 캐시 이름, 캐시 매니저 등과 같은 설정을 지정할 필요 없이 한 번에 설정할 수 있습니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@CacheConfig(cacheNames = &quot;users&quot;)</span> <span class="comment">// 이 클래스의 모든 캐시 메서드는 기본적으로 &quot;users&quot; 캐시를 사용</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Spring/">Spring</category>
      
      <category domain="https://ckck803.github.io/categories/Spring/Spring-Framework/">Spring Framework</category>
      
      
      <category domain="https://ckck803.github.io/tags/JPA/">JPA</category>
      
      
      <comments>https://ckck803.github.io/2025/03/05/spring/springboot-cache/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</title>
      <link>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-opensearch/</link>
      <guid>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-opensearch/</guid>
      <pubDate>Sat, 22 Feb 2025 06:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/devops/opensearch/opensearch.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-opensearch/&quot; title=&quot;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/21/devops/keycloak/k8s-infra-keyclock/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/local-path-provisioner/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/kubeadm-install/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.pages.kr/2844&quot;&gt;https://blog.pages.kr/2844&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://opendistro.github.io/for-elasticsearch-docs/docs/security/access-control/api/#reserved-and-hidden-resources&quot;&gt;https://opendistro.github.io/for-elasticsearch-docs/docs/security/access-control/api/#reserved-and-hidden-resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forum.opensearch.org/t/default-password-reset/102/10&quot;&gt;https://forum.opensearch.org/t/default-password-reset/102/10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Admin Password 변경&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/opendistro-for-elasticsearch/opendistro-build/issues/558&quot;&gt;https://github.com/opendistro-for-elasticsearch/opendistro-build/issues/558&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://opendistro.github.io/for-elasticsearch-docs/docs/security/configuration/yaml/#internal_usersyml&quot;&gt;https://opendistro.github.io/for-elasticsearch-docs/docs/security/configuration/yaml/#internal_usersyml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/opensearch-project/helm-charts/issues/161&quot;&gt;https://github.com/opensearch-project/helm-charts/issues/161&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;✅-OpenSearch-설치&quot;&gt;&lt;a href=&quot;#✅-OpenSearch-설치&quot; class=&quot;headerlink&quot; title=&quot;✅ OpenSearch 설치&quot;&gt;&lt;/a&gt;✅ OpenSearch 설치&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Helm Repo 추가&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm repo add opensearch https://opensearch-project.github.io/helm-charts/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# OpenSearch 설치&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm upgrade --install opensearch &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -f ./values-opensearch.yaml opensearch/opensearch &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -n logging --create-namespace&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Release &lt;span class=&quot;string&quot;&gt;&amp;quot;opensearch&amp;quot;&lt;/span&gt; has been upgraded. Happy Helming!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME: opensearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LAST DEPLOYED: Thu Jan 18 15:55:28 2024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAMESPACE: logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;STATUS: deployed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;REVISION: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TEST SUITE: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NOTES:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Watch all cluster members come up.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $ kubectl get pods --namespace=logging -l app.kubernetes.io/component=opensearch-cluster-master -w&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;✅-OpenSearch-Dashboard-설치&quot;&gt;&lt;a href=&quot;#✅-OpenSearch-Dashboard-설치&quot; class=&quot;headerlink&quot; title=&quot;✅ OpenSearch Dashboard 설치&quot;&gt;&lt;/a&gt;✅ OpenSearch Dashboard 설치&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;helm upgrade --install opensearch-dashboard &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -f ./values-opensearch-dashboards.yaml opensearch/opensearch-dashboards &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -n logging --create-namespace&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/devops/opensearch/opensearch.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/02/22/devops/infra/k8s-infra-opensearch/" title="[쿠버네티스 DevOps 구축] - OpenSearch 설치하기">[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/" title="[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기">[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</a></li><li><a href="/2025/02/21/devops/keycloak/k8s-infra-keyclock/" title="[쿠버네티스 DevOps 구축] - Keycloak 설치하기">[쿠버네티스 DevOps 구축] - Keycloak 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/" title="[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기">[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</a></li><li><a href="/2025/02/20/k8s/local-path-provisioner/" title="[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치">[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</a></li><li><a href="/2025/02/20/k8s/kubeadm-install/" title="[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기">[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://blog.pages.kr/2844">https://blog.pages.kr/2844</a></li><li><a href="https://opendistro.github.io/for-elasticsearch-docs/docs/security/access-control/api/#reserved-and-hidden-resources">https://opendistro.github.io/for-elasticsearch-docs/docs/security/access-control/api/#reserved-and-hidden-resources</a></li><li><a href="https://forum.opensearch.org/t/default-password-reset/102/10">https://forum.opensearch.org/t/default-password-reset/102/10</a></li><li>Admin Password 변경<ul><li><a href="https://github.com/opendistro-for-elasticsearch/opendistro-build/issues/558">https://github.com/opendistro-for-elasticsearch/opendistro-build/issues/558</a></li><li><a href="https://opendistro.github.io/for-elasticsearch-docs/docs/security/configuration/yaml/#internal_usersyml">https://opendistro.github.io/for-elasticsearch-docs/docs/security/configuration/yaml/#internal_usersyml</a></li><li><a href="https://github.com/opensearch-project/helm-charts/issues/161">https://github.com/opensearch-project/helm-charts/issues/161</a></li></ul></li></ul><h2 id="✅-OpenSearch-설치"><a href="#✅-OpenSearch-설치" class="headerlink" title="✅ OpenSearch 설치"></a>✅ OpenSearch 설치</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Helm Repo 추가</span></span><br><span class="line">helm repo add opensearch https://opensearch-project.github.io/helm-charts/</span><br><span class="line"><span class="comment"># OpenSearch 설치</span></span><br><span class="line">helm upgrade --install opensearch \</span><br><span class="line">  -f ./values-opensearch.yaml opensearch/opensearch \</span><br><span class="line">  -n logging --create-namespace</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Release <span class="string">&quot;opensearch&quot;</span> has been upgraded. Happy Helming!</span><br><span class="line">NAME: opensearch</span><br><span class="line">LAST DEPLOYED: Thu Jan 18 15:55:28 2024</span><br><span class="line">NAMESPACE: logging</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 2</span><br><span class="line">TEST SUITE: None</span><br><span class="line">NOTES:</span><br><span class="line">Watch all cluster members come up.</span><br><span class="line">  $ kubectl get pods --namespace=logging -l app.kubernetes.io/component=opensearch-cluster-master -w</span><br></pre></td></tr></table></figure><h2 id="✅-OpenSearch-Dashboard-설치"><a href="#✅-OpenSearch-Dashboard-설치" class="headerlink" title="✅ OpenSearch Dashboard 설치"></a>✅ OpenSearch Dashboard 설치</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm upgrade --install opensearch-dashboard \</span><br><span class="line">  -f ./values-opensearch-dashboards.yaml opensearch/opensearch-dashboards \</span><br><span class="line">  -n logging --create-namespace</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Release <span class="string">&quot;opensearch&quot;</span> has been upgraded. Happy Helming!</span><br><span class="line">NAME: opensearch</span><br><span class="line">LAST DEPLOYED: Thu Feb  6 23:13:09 2025</span><br><span class="line">NAMESPACE: logging</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 2</span><br><span class="line">TEST SUITE: None</span><br><span class="line">NOTES:</span><br><span class="line">1. Get the application URL by running these commands:</span><br><span class="line">  <span class="built_in">export</span> POD_NAME=$(kubectl get pods --namespace logging -l <span class="string">&quot;app.kubernetes.io/name=opensearch-dashboards,app.kubernetes.io/instance=opensearch&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">  <span class="built_in">export</span> CONTAINER_PORT=$(kubectl get pod --namespace logging <span class="variable">$POD_NAME</span> -o jsonpath=<span class="string">&quot;&#123;.spec.containers[0].ports[0].containerPort&#125;&quot;</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Visit http://127.0.0.1:8080 to use your application&quot;</span></span><br><span class="line">  kubectl --namespace logging port-forward <span class="variable">$POD_NAME</span> 8080:<span class="variable">$CONTAINER_PORT</span></span><br></pre></td></tr></table></figure><h2 id="OpenSearch-Demo-User"><a href="#OpenSearch-Demo-User" class="headerlink" title="OpenSearch Demo User"></a>OpenSearch Demo User</h2><ul><li><a href="https://docs.search-guard.com/latest/demo-users-roles">https://docs.search-guard.com/latest/demo-users-roles</a></li></ul><h2 id="Admin-비밀번호-변경"><a href="#Admin-비밀번호-변경" class="headerlink" title="Admin 비밀번호 변경"></a>Admin 비밀번호 변경</h2><p>필요한 명령어 및 파일 위치</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/usr/share/elasticsearch/plugins/opendistro_security/tools/hash.sh</span><br><span class="line">/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml</span><br><span class="line">/usr/share/elasticsearch/plugins/opendistro_security/tools/securityadmin.sh</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">securityConfig:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">securityConfigSecret:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">dataComplete:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">data:</span></span><br><span class="line">      <span class="attr">internal_users.yml:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">        _meta:</span></span><br><span class="line"><span class="string">          type: &quot;internalusers&quot;</span></span><br><span class="line"><span class="string">          config_version: 2</span></span><br><span class="line"><span class="string">        admin:</span></span><br><span class="line"><span class="string">          hash: &quot;YWtxanF0azFxMnczZTRyIUA=&quot;</span></span><br><span class="line"><span class="string">          reserved: true</span></span><br><span class="line"><span class="string">        backend_roles:</span></span><br><span class="line"><span class="string">        - &quot;admin&quot;</span></span><br><span class="line"><span class="string">        description: &quot;Demo admin user&quot;</span></span><br></pre></td></tr></table></figure><h2 id="문제-Not-yet-initialized-you-may-need-to-run-securityadmin"><a href="#문제-Not-yet-initialized-you-may-need-to-run-securityadmin" class="headerlink" title="문제 - Not yet initialized (you may need to run securityadmin)"></a>문제 - Not yet initialized (you may need to run securityadmin)</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[2023-12-30T15:22:45,111][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:45,115][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:45,118][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:45,120][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:47,614][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:47,617][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:47,620][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br><span class="line">[2023-12-30T15:22:47,623][ERROR][o.o.s.a.BackendRegistry  ] [opensearch-cluster-master-0] Not yet initialized (you may need to run securityadmin)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl -n logging <span class="built_in">exec</span> -it opensearch-cluster-master-0 -- /usr/share/opensearch/plugins/opensearch-security/tools/hash.sh</span><br></pre></td></tr></table></figure><ul><li>pod 내에서</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \</span><br><span class="line">  -<span class="built_in">cd</span> /usr/share/opensearch/config/opensearch-security/ \</span><br><span class="line">  -icl \</span><br><span class="line">  -nhnv \</span><br><span class="line">  -cacert /usr/share/opensearch/config/root-ca.pem \</span><br><span class="line">  -cert /usr/share/opensearch/config/kirk.pem \</span><br><span class="line">  -key /usr/share/opensearch/config/kirk-key.pem</span><br></pre></td></tr></table></figure><ul><li>쿠버네티스 명령어로 실행</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> \</span><br><span class="line">    -n logging \</span><br><span class="line">    -it opensearch-cluster-master-0 \</span><br><span class="line">    -- /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \</span><br><span class="line">    -<span class="built_in">cd</span> /usr/share/opensearch/config/opensearch-security/ \</span><br><span class="line">    -icl \</span><br><span class="line">    -nhnv \</span><br><span class="line">    -cacert /usr/share/opensearch/config/root-ca.pem \</span><br><span class="line">    -cert /usr/share/opensearch/config/kirk.pem \</span><br><span class="line">    -key /usr/share/opensearch/config/kirk-key.pem</span><br></pre></td></tr></table></figure><h4 id="securityConfig-internalUsersSecret-을-이용한-Admin-비밀번호-변경"><a href="#securityConfig-internalUsersSecret-을-이용한-Admin-비밀번호-변경" class="headerlink" title="securityConfig.internalUsersSecret 을 이용한 Admin 비밀번호 변경"></a>securityConfig.internalUsersSecret 을 이용한 Admin 비밀번호 변경</h4><p>비밀번호 Hash 값 생성</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl -n logging <span class="built_in">exec</span> -it opensearch-cluster-master-0 -- /usr/share/opensearch/plugins/opensearch-security/tools/hash.sh</span><br></pre></td></tr></table></figure><p>Secret 파일 생성</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">opensearch-internal-users</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">stringData:</span></span><br><span class="line">  <span class="attr">internal_users.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    ---</span></span><br><span class="line"><span class="string">    # This is the internal user database</span></span><br><span class="line"><span class="string">    # The hash value is a bcrypt hash and can be generated using:</span></span><br><span class="line"><span class="string">    # $ plugins/opensearch-security/tools/hash.sh -p &lt;new-password&gt;</span></span><br><span class="line"><span class="string"></span>    </span><br><span class="line">    <span class="attr">_meta:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">&quot;internalusers&quot;</span></span><br><span class="line">      <span class="attr">config_version:</span> <span class="number">2</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Define your internal users here</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">## internal users</span></span><br><span class="line">    <span class="attr">admin:</span></span><br><span class="line">      <span class="attr">hash:</span> <span class="string">&quot;$2y$12$yGwPWlea1ghTu9NFl00h6.SqRJY1G.MuFyX8PTQnwUnYaGgUsFKBu&quot;</span></span><br><span class="line">      <span class="attr">reserved:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">backend_roles:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;admin&quot;</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">&quot;admin user&quot;</span></span><br></pre></td></tr></table></figure><p>securityConfig.internalUsersSecret 에 Secret 이름 설정</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">securityConfig:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&quot;/usr/share/opensearch/config/opensearch-security&quot;</span></span><br><span class="line">  <span class="attr">actionGroupsSecret:</span></span><br><span class="line">  <span class="attr">configSecret:</span></span><br><span class="line">  <span class="attr">internalUsersSecret:</span> <span class="string">opensearch-internal-users</span></span><br></pre></td></tr></table></figure><h2 id="✅-OpenSearch-Dashboards-basePath-및-Ingress-설정"><a href="#✅-OpenSearch-Dashboards-basePath-및-Ingress-설정" class="headerlink" title="✅ OpenSearch Dashboards basePath 및 Ingress 설정"></a>✅ OpenSearch Dashboards basePath 및 Ingress 설정</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">config:</span></span><br><span class="line">  <span class="attr">opensearch_dashboards.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">      host: &#x27;0.0.0.0&#x27;</span></span><br><span class="line"><span class="string">      basePath: &quot;/logging&quot;</span></span><br><span class="line"><span class="string">      rewriteBasePath: true</span></span><br><span class="line"><span class="string">    opensearch:</span></span><br><span class="line"><span class="string">      hosts: [https://localhost:9200]</span></span><br><span class="line"><span class="string">      ssl.verificationMode: none</span></span><br><span class="line"><span class="string">      username: kibanaserver</span></span><br><span class="line"><span class="string">      password: kibanaserver</span></span><br><span class="line"><span class="string">      requestHeadersWhitelist: [authorization, securitytenant]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">opensearch_security.multitenancy:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">opensearch_security.multitenancy.tenants:</span></span><br><span class="line">      <span class="attr">preferred:</span> [<span class="string">Private</span>, <span class="string">Global</span>]</span><br><span class="line">    <span class="attr">opensearch_security:</span></span><br><span class="line">      <span class="attr">readonly_mode.roles:</span> [<span class="string">kibana_read_only</span>]</span><br><span class="line">      <span class="attr">cookie.secure:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="Ingress-설정"><a href="#Ingress-설정" class="headerlink" title="Ingress 설정"></a>Ingress 설정</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logging</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/logging</span></span><br><span class="line">          <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">service:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">opensearch-dashboards</span></span><br><span class="line">              <span class="attr">port:</span></span><br><span class="line">                <span class="attr">number:</span> <span class="number">5601</span></span><br></pre></td></tr></table></figure><h2 id="✅-KeyCloak-OpenSearch-연동"><a href="#✅-KeyCloak-OpenSearch-연동" class="headerlink" title="✅ KeyCloak OpenSearch 연동"></a>✅ KeyCloak OpenSearch 연동</h2><ul><li>참고<ul><li><a href="https://velog.io/@ziggy/Keyclock-%EA%B5%AC%EC%B6%95-%EB%B0%8F-Opensearch-%EC%97%B0%EB%8F%99">https://velog.io/@ziggy/Keyclock-%EA%B5%AC%EC%B6%95-%EB%B0%8F-Opensearch-%EC%97%B0%EB%8F%99</a></li><li><a href="https://opensearch.org/docs/latest/security/authentication-backends/openid-connect/">https://opensearch.org/docs/latest/security/authentication-backends/openid-connect/</a></li><li><a href="https://opensearch.org/docs/latest/security/authentication-backends/openid-connect/#opensearch-security-configuration">https://opensearch.org/docs/latest/security/authentication-backends/openid-connect/#opensearch-security-configuration</a></li><li><a href="https://opensearch.org/docs/latest/security/authentication-backends/openid-connect/#opensearch-dashboards-single-sign-on">https://opensearch.org/docs/latest/security/authentication-backends/openid-connect/#opensearch-dashboards-single-sign-on</a></li><li><a href="https://forum.opensearch.org/t/opensearch-integration-with-keycloak-using-k8s-opster-operator/15388/5">https://forum.opensearch.org/t/opensearch-integration-with-keycloak-using-k8s-opster-operator/15388/5</a></li></ul></li></ul><h3 id="1-OpenSearch-Client-생성"><a href="#1-OpenSearch-Client-생성" class="headerlink" title="1. OpenSearch Client 생성"></a>1. OpenSearch Client 생성</h3><p><img src="/images/devops/keycloak/opensearch/client_opensearch.png"></p><p><img src="/images/devops/keycloak/opensearch/client_opensearch_2.png"></p><p><img src="/images/devops/keycloak/opensearch/client_opensearch_3.png"></p><h3 id="2-KeyCloak-OpenSearch-User-Client-Role-생성"><a href="#2-KeyCloak-OpenSearch-User-Client-Role-생성" class="headerlink" title="2. KeyCloak OpenSearch User Client Role 생성"></a>2. KeyCloak OpenSearch User Client Role 생성</h3><p><img src="/images/devops/keycloak/opensearch/client_opensearch_scopes.png"></p><p><img src="/images/devops/keycloak/opensearch/client_opensearch_role.png"></p><h3 id="3-OpenSearch-연동-및-설정파일-생성"><a href="#3-OpenSearch-연동-및-설정파일-생성" class="headerlink" title="3. OpenSearch 연동 및 설정파일 생성"></a>3. OpenSearch 연동 및 설정파일 생성</h3><h4 id="3-1-KeyClock-Connect-URL-확인"><a href="#3-1-KeyClock-Connect-URL-확인" class="headerlink" title="3.1 KeyClock Connect URL 확인"></a>3.1 KeyClock Connect URL 확인</h4><p><img src="/images/devops/keycloak/ddanzit_endpoints.png"></p><p><img src="/images/devops/keycloak/connect_url.png" alt="connect_url"></p><h4 id="3-2-OpenSearch-Client-Credential-확인"><a href="#3-2-OpenSearch-Client-Credential-확인" class="headerlink" title="3.2 OpenSearch Client Credential 확인"></a>3.2 OpenSearch Client Credential 확인</h4><p><img src="/images/devops/keycloak/opensearch/opensearch_credential.png" alt="client 의 credential 확인"></p><h4 id="3-3-config-yml-생성"><a href="#3-3-config-yml-생성" class="headerlink" title="3.3 config.yml 생성"></a>3.3 config.yml 생성</h4><ul><li><a href="https://forum.opensearch.org/t/opensearch-saml-ad-working-but-with-no-basic-authorization-header-warning/13883/2">https://forum.opensearch.org/t/opensearch-saml-ad-working-but-with-no-basic-authorization-header-warning/13883/2</a></li><li><a href="https://forum.opensearch.org/t/openid-401-unauthorized-with-keycloak/10364/2">https://forum.opensearch.org/t/openid-401-unauthorized-with-keycloak/10364/2</a></li></ul><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">opensearch-openid-keycloak</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">logging</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">stringData:</span></span><br><span class="line">  <span class="attr">config.yml:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    _meta:</span></span><br><span class="line"><span class="string">      type: &quot;config&quot;</span></span><br><span class="line"><span class="string">      config_version: 2</span></span><br><span class="line"><span class="string">    config:</span></span><br><span class="line"><span class="string">      dynamic:</span></span><br><span class="line"><span class="string">        authz: &#123;&#125;</span></span><br><span class="line"><span class="string">        authc:</span></span><br><span class="line"><span class="string">          openid_auth_domain:</span></span><br><span class="line"><span class="string">            http_enabled: true</span></span><br><span class="line"><span class="string">            transport_enabled: true</span></span><br><span class="line"><span class="string">            order: 0</span></span><br><span class="line"><span class="string">            http_authenticator:</span></span><br><span class="line"><span class="string">              type: openid</span></span><br><span class="line"><span class="string">              challenge: false</span></span><br><span class="line"><span class="string">              config:</span></span><br><span class="line"><span class="string">                subject_key: preferred_username</span></span><br><span class="line"><span class="string">                roles_key: roles</span></span><br><span class="line"><span class="string">                openid_connect_url: http://auth.crunchychoco.com/realms/ddanzit/.well-known/openid-configuration</span></span><br><span class="line"><span class="string">                skip_users:</span></span><br><span class="line"><span class="string">                  - kibanaserver</span></span><br><span class="line"><span class="string">                  - admin</span></span><br><span class="line"><span class="string">            authentication_backend:</span></span><br><span class="line"><span class="string">              type: noop</span></span><br><span class="line"><span class="string">          basic_internal_auth_domain:</span></span><br><span class="line"><span class="string">            http_enabled: true</span></span><br><span class="line"><span class="string">            transport_enabled: true</span></span><br><span class="line"><span class="string">            order: 1</span></span><br><span class="line"><span class="string">            http_authenticator:</span></span><br><span class="line"><span class="string">              type: basic</span></span><br><span class="line"><span class="string">              challenge: false</span></span><br><span class="line"><span class="string">            authentication_backend:</span></span><br><span class="line"><span class="string">              type: internal</span></span><br></pre></td></tr></table></figure><p>config.yml 을 통해 인증 방식과 순서를 설정하면 dashboard 에서 설정된 인증 방식을 확인할 수 있습니다.</p><p><img src="/images/devops/keycloak/opensearch/opensearch_authentication_order.png"></p><p><img src="/images/devops/keycloak/opensearch/http_configuration.png"></p><h4 id="3-4-Opensearch-values-yaml-수정"><a href="#3-4-Opensearch-values-yaml-수정" class="headerlink" title="3.4 Opensearch values.yaml 수정"></a>3.4 Opensearch values.yaml 수정</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">securityConfig:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">configSecret:</span> <span class="string">opensearch-openid-keycloak</span></span><br></pre></td></tr></table></figure><h4 id="3-5-opensearch-dashboards-yml-수정"><a href="#3-5-opensearch-dashboards-yml-수정" class="headerlink" title="3.5 opensearch_dashboards.yml 수정"></a>3.5 opensearch_dashboards.yml 수정</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line"><span class="attr">opensearch:</span></span><br><span class="line">    <span class="attr">hosts:</span> [<span class="string">https://opensearch-cluster-master:9200</span>]</span><br><span class="line">    <span class="attr">ssl.verificationMode:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">kibanaserver</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">kibanaserver</span></span><br><span class="line">    <span class="attr">requestHeadersWhitelist:</span> [<span class="string">authorization</span>, <span class="string">securitytenant</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">opensearch_security.multitenancy:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">opensearch_security.multitenancy.tenants:</span></span><br><span class="line">    <span class="attr">preferred:</span> [<span class="string">Private</span>, <span class="string">Global</span>]</span><br><span class="line"><span class="attr">opensearch_security:</span></span><br><span class="line">    <span class="attr">readonly_mode.roles:</span> [<span class="string">kibana_read_only</span>]</span><br><span class="line">    <span class="attr">cookie.secure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">opensearch_security.auth.type:</span> [<span class="string">&quot;openid&quot;</span>]</span><br><span class="line"><span class="attr">opensearch_security.openid.connect_url:</span> <span class="string">&quot;http://auth.crunchychoco.com/realms/ddanzit/.well-known/openid-configuration&quot;</span></span><br><span class="line"><span class="attr">opensearch_security.openid.client_id:</span> <span class="string">&quot;opensearch&quot;</span></span><br><span class="line"><span class="attr">opensearch_security.openid.client_secret:</span> <span class="string">&quot;9EH2nHCcpKk05F8l8TUsqnEslA26h2KU&quot;</span></span><br><span class="line"><span class="attr">opensearch_security.openid.base_redirect_url:</span> <span class="string">&quot;http://logging.crunchychoco.com&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/images/devops/keycloak/opensearch/keycloak_opensearch.png"></p><h4 id="3-6-OpenSearch-SSO-및-Basic-Auth-사용-설정"><a href="#3-6-OpenSearch-SSO-및-Basic-Auth-사용-설정" class="headerlink" title="3.6 OpenSearch SSO 및 Basic Auth 사용 설정"></a>3.6 OpenSearch SSO 및 Basic Auth 사용 설정</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">opensearch_security.auth.type:</span> [<span class="string">&quot;basicauth&quot;</span>,<span class="string">&quot;openid&quot;</span>]</span><br><span class="line"><span class="attr">opensearch_security.auth.multiple_auth_enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="/images/devops/keycloak/opensearch/opensearch_basic_auth.png"></p><h4 id="3-7-skeycloak-인증-테스트"><a href="#3-7-skeycloak-인증-테스트" class="headerlink" title="3.7 skeycloak 인증 테스트"></a>3.7 skeycloak 인증 테스트</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CLIENT_ID=opensearch</span><br><span class="line"><span class="built_in">export</span> CLIENT_SECRET=<span class="string">&#x27;9EH2nHCcpKk05F8l8TUsqnEslA26h2KU&#x27;</span></span><br><span class="line"><span class="built_in">export</span> PW=<span class="string">&#x27;1q2w3e4r!@#&#x27;</span></span><br><span class="line"></span><br><span class="line">RESULT=$(curl -k --noproxy <span class="string">&#x27;*&#x27;</span> -d <span class="string">&#x27;username=ddanzit&#x27;</span> -d <span class="string">&quot;password=<span class="variable">$PW</span>&quot;</span> -d <span class="string">&#x27;grant_type=password&#x27;</span> -d <span class="string">&quot;client_id=<span class="variable">$CLIENT_ID</span>&quot;</span> -d <span class="string">&quot;client_secret=<span class="variable">$CLIENT_SECRET</span>&quot;</span> -d <span class="string">&#x27;scope=openid&#x27;</span> <span class="string">&#x27;http://auth.crunchychoco.com/realms/ddanzit/protocol/openid-connect/token&#x27;</span>)</span><br><span class="line"></span><br><span class="line">TOKEN=$(<span class="built_in">echo</span> <span class="variable">$RESULT</span> | sed <span class="string">&#x27;s/.*access_token&quot;:&quot;\([^&quot;]*\).*/\1/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">curl -H <span class="string">&quot;Authorization: Bearer <span class="variable">$TOKEN</span>&quot;</span> http://auth.crunchychoco.com/realms/ddanzit/protocol/openid-connect/userinfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;ce6f75ba-26fb-4cf4-9e7d-06f20d7d749f&quot;</span>,</span><br><span class="line">    <span class="string">&quot;email_verified&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;동우 양&quot;</span>,</span><br><span class="line">    <span class="string">&quot;preferred_username&quot;</span>: <span class="string">&quot;kwangill&quot;</span>,</span><br><span class="line">    <span class="string">&quot;given_name&quot;</span>: <span class="string">&quot;동우&quot;</span>,</span><br><span class="line">    <span class="string">&quot;family_name&quot;</span>: <span class="string">&quot;양&quot;</span>,</span><br><span class="line">    <span class="string">&quot;email&quot;</span>: <span class="string">&quot;askain@hanmail.net&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-8-keycloak-Json-Web-Token-JWT-내용-확인"><a href="#3-8-keycloak-Json-Web-Token-JWT-내용-확인" class="headerlink" title="3.8 keycloak Json Web Token(JWT) 내용 확인"></a>3.8 keycloak Json Web Token(JWT) 내용 확인</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">1705381539</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;iat&quot;</span><span class="punctuation">:</span> <span class="number">1705381239</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;jti&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e6cf69c7-f674-4a10-bfbc-444d3c19ad25&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;iss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://auth.crunchychoco.com/realms/ddanzit&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aud&quot;</span><span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sub&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4eac345b-bfb9-4c4f-aba3-d52af277bbf0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;typ&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bearer&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;azp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;opensearch&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;session_state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c7c47cf3-34bf-40d5-891a-6d5ae52cc855&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;acr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;allowed-origins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;realm_access&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;roles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;default-roles-ddanzit&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;offline_access&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;uma_authorization&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;Admin&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;resource_access&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;account&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;roles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;manage-account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;manage-account-links&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;view-profile&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openid email profile&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c7c47cf3-34bf-40d5-891a-6d5ae52cc855&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;email_verified&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;동우 양&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;preferred_username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ddanzit&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;given_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;동우&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;family_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;양&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ckck803@naver.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="No-‘Basic-Authorization’-header-send-401-and-‘WWW-Authenticate-Basic’"><a href="#No-‘Basic-Authorization’-header-send-401-and-‘WWW-Authenticate-Basic’" class="headerlink" title="No ‘Basic Authorization’ header, send 401 and ‘WWW-Authenticate Basic’"></a>No ‘Basic Authorization’ header, send 401 and ‘WWW-Authenticate Basic’</h2><ul><li><a href="https://forum.opensearch.org/t/opensearch-dashboards-getting-no-basic-authorization-header-send-401-and-www-authenticate-basic-when-trying-to-login-via-sso/16101/7">https://forum.opensearch.org/t/opensearch-dashboards-getting-no-basic-authorization-header-send-401-and-www-authenticate-basic-when-trying-to-login-via-sso/16101/7</a></li><li><a href="https://forum.search-guard.com/t/no-basic-authorization-header-send-401-and-www-authenticate-basic-while-using-openid-and-basic-auth-domain/1930">https://forum.search-guard.com/t/no-basic-authorization-header-send-401-and-www-authenticate-basic-while-using-openid-and-basic-auth-domain/1930</a></li><li><a href="https://opensearch.org/docs/latest/security/configuration/security-admin/">https://opensearch.org/docs/latest/security/configuration/security-admin/</a></li></ul><p>위와 같은 에러가 발생한다면 <code>securityadmin.sh</code> 를 이용하여 설정파일을 적용한다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> \</span><br><span class="line">    -n logging \</span><br><span class="line">    -it opensearch-cluster-master-0 \</span><br><span class="line">    -- /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \</span><br><span class="line">    -<span class="built_in">cd</span> /usr/share/opensearch/config/opensearch-security/ \</span><br><span class="line">    -icl \</span><br><span class="line">    -nhnv \</span><br><span class="line">    -cacert /usr/share/opensearch/config/root-ca.pem \</span><br><span class="line">    -cert /usr/share/opensearch/config/kirk.pem \</span><br><span class="line">    -key /usr/share/opensearch/config/kirk-key.pem</span><br></pre></td></tr></table></figure><h2 id="FATAL-Error-Multiple-Authentication-Mode-is-disabled-To-enable-this-feature-please-set-up-opensearch-security-auth-multiple-auth-enabled-true"><a href="#FATAL-Error-Multiple-Authentication-Mode-is-disabled-To-enable-this-feature-please-set-up-opensearch-security-auth-multiple-auth-enabled-true" class="headerlink" title="FATAL  Error: Multiple Authentication Mode is disabled. To enable this feature, please set up opensearch_security.auth.multiple_auth_enabled: true"></a>FATAL  Error: Multiple Authentication Mode is disabled. To enable this feature, please set up opensearch_security.auth.multiple_auth_enabled: true</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">opensearch_security.auth.multiple_auth_enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      
      
      <comments>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-opensearch/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</title>
      <link>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/</link>
      <guid>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/</guid>
      <pubDate>Sat, 22 Feb 2025 04:31:46 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-opensearch/&quot; title=&quot;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/21/devops/keycloak/k8s-infra-keyclock/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/local-path-provisioner/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/kubeadm-install/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;✅-메트릭-수집을-위한-Prometheus&quot;&gt;&lt;a href=&quot;#✅-메트릭-수집을-위한-Prometheus&quot; class=&quot;headerlink&quot; title=&quot;✅ 메트릭 수집을 위한 Prometheus&quot;&gt;&lt;/a&gt;✅ 메트릭 수집을 위한 Prometheus&lt;/h2&gt;&lt;p&gt;서비스를 올렸다고 해서 끝이 아니다! 서비스를 운용하는 입장에서는 시스템이 안정적인지 지속적으로 확인을 해야 하는데, 운영하는 서비스의 CPU 사용률, 메모리 사용률과 같은 메트릭 정보를 지속적으로 수집하는 시스템을 구축해야 합니다.&lt;/p&gt;
&lt;p&gt;저는 대중적으로 많이 알려진 Prometheus 를 이용해 쿠버네티스에서 운영중인 서비스에 대한 메트릭 정보를 수집하려고 합니다.&lt;/p&gt;
&lt;h2 id=&quot;Helm-을-이용한-Prometheus-설치&quot;&gt;&lt;a href=&quot;#Helm-을-이용한-Prometheus-설치&quot; class=&quot;headerlink&quot; title=&quot;Helm 을 이용한 Prometheus 설치&quot;&gt;&lt;/a&gt;Helm 을 이용한 Prometheus 설치&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# helm repo 추가&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm repo add prometheus-community https://prometheus-community.github.io/helm-charts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# prometheus 설치&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm upgrade --install -f ./values-prometheus.yaml prometheus prometheus-community/prometheus -n monitoring --create-namespace&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Release &lt;span class=&quot;string&quot;&gt;&amp;quot;prometheus&amp;quot;&lt;/span&gt; does not exist. Installing it now.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME: prometheus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LAST DEPLOYED: Fri Nov 15 10:11:47 2024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAMESPACE: monitoring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;STATUS: deployed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;REVISION: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TEST SUITE: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NOTES:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prometheus-server.monitoring.svc.cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Get the Prometheus server URL by running these commands &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the same shell:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; POD_NAME=$(kubectl get pods --namespace monitoring -l &lt;span class=&quot;string&quot;&gt;&amp;quot;app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=prometheus&amp;quot;&lt;/span&gt; -o jsonpath=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;.items[0].metadata.name&amp;#125;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kubectl --namespace monitoring port-forward &lt;span class=&quot;variable&quot;&gt;$POD_NAME&lt;/span&gt; 9090&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#################################################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######   WARNING: Persistence is disabled!!! You will lose your data when   #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######            the Server pod is terminated.                             #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#################################################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The Prometheus alertmanager can be accessed via port 9093 on the following DNS name from within your cluster:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prometheus-alertmanager.monitoring.svc.cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Get the Alertmanager URL by running these commands &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the same shell:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; POD_NAME=$(kubectl get pods --namespace monitoring -l &lt;span class=&quot;string&quot;&gt;&amp;quot;app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=prometheus&amp;quot;&lt;/span&gt; -o jsonpath=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;.items[0].metadata.name&amp;#125;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kubectl --namespace monitoring port-forward &lt;span class=&quot;variable&quot;&gt;$POD_NAME&lt;/span&gt; 9093&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#################################################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######   WARNING: Persistence is disabled!!! You will lose your data when   #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######            the AlertManager pod is terminated.                       #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#################################################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#################################################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######   WARNING: Pod Security Policy has been disabled by default since    #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######            it deprecated after k8s 1.25+. use                        #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######            (index .Values &amp;quot;prometheus-node-exporter&amp;quot; &amp;quot;rbac&amp;quot;          #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;###### .          &amp;quot;pspEnabled&amp;quot;) with (index .Values                         #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######            &amp;quot;prometheus-node-exporter&amp;quot; &amp;quot;rbac&amp;quot; &amp;quot;pspAnnotations&amp;quot;)       #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;######            in case you still need it.                                #####&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#################################################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prometheus-prometheus-pushgateway.monitoring.svc.cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Get the PushGateway URL by running these commands &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the same shell:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; POD_NAME=$(kubectl get pods --namespace monitoring -l &lt;span class=&quot;string&quot;&gt;&amp;quot;app=prometheus-pushgateway,component=pushgateway&amp;quot;&lt;/span&gt; -o jsonpath=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;.items[0].metadata.name&amp;#125;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kubectl --namespace monitoring port-forward &lt;span class=&quot;variable&quot;&gt;$POD_NAME&lt;/span&gt; 9091&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;For more information on running Prometheus, visit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://prometheus.io/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;✅-모니터링을-위한-Grafana&quot;&gt;&lt;a href=&quot;#✅-모니터링을-위한-Grafana&quot; class=&quot;headerlink&quot; title=&quot;✅ 모니터링을 위한 Grafana&quot;&gt;&lt;/a&gt;✅ 모니터링을 위한 Grafana&lt;/h2&gt;&lt;p&gt;메트릭 수집을 위한 Prometheus 를 설치 했는데! 단순 메트릭 정보만 있으면 운영하는 입장에서 가시적으로 와 닿지 않습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/02/22/devops/infra/k8s-infra-opensearch/" title="[쿠버네티스 DevOps 구축] - OpenSearch 설치하기">[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/" title="[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기">[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</a></li><li><a href="/2025/02/21/devops/keycloak/k8s-infra-keyclock/" title="[쿠버네티스 DevOps 구축] - Keycloak 설치하기">[쿠버네티스 DevOps 구축] - Keycloak 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/" title="[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기">[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</a></li><li><a href="/2025/02/20/k8s/local-path-provisioner/" title="[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치">[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</a></li><li><a href="/2025/02/20/k8s/kubeadm-install/" title="[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기">[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</a></li></ul><h2 id="✅-메트릭-수집을-위한-Prometheus"><a href="#✅-메트릭-수집을-위한-Prometheus" class="headerlink" title="✅ 메트릭 수집을 위한 Prometheus"></a>✅ 메트릭 수집을 위한 Prometheus</h2><p>서비스를 올렸다고 해서 끝이 아니다! 서비스를 운용하는 입장에서는 시스템이 안정적인지 지속적으로 확인을 해야 하는데, 운영하는 서비스의 CPU 사용률, 메모리 사용률과 같은 메트릭 정보를 지속적으로 수집하는 시스템을 구축해야 합니다.</p><p>저는 대중적으로 많이 알려진 Prometheus 를 이용해 쿠버네티스에서 운영중인 서비스에 대한 메트릭 정보를 수집하려고 합니다.</p><h2 id="Helm-을-이용한-Prometheus-설치"><a href="#Helm-을-이용한-Prometheus-설치" class="headerlink" title="Helm 을 이용한 Prometheus 설치"></a>Helm 을 이용한 Prometheus 설치</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># helm repo 추가</span></span><br><span class="line">helm repo add prometheus-community https://prometheus-community.github.io/helm-charts</span><br><span class="line"><span class="comment"># prometheus 설치</span></span><br><span class="line">helm upgrade --install -f ./values-prometheus.yaml prometheus prometheus-community/prometheus -n monitoring --create-namespace</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Release <span class="string">&quot;prometheus&quot;</span> does not exist. Installing it now.</span><br><span class="line">NAME: prometheus</span><br><span class="line">LAST DEPLOYED: Fri Nov 15 10:11:47 2024</span><br><span class="line">NAMESPACE: monitoring</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 1</span><br><span class="line">TEST SUITE: None</span><br><span class="line">NOTES:</span><br><span class="line">The Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:</span><br><span class="line">prometheus-server.monitoring.svc.cluster.local</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Get the Prometheus server URL by running these commands <span class="keyword">in</span> the same shell:</span><br><span class="line">  <span class="built_in">export</span> POD_NAME=$(kubectl get pods --namespace monitoring -l <span class="string">&quot;app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=prometheus&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">  kubectl --namespace monitoring port-forward <span class="variable">$POD_NAME</span> 9090</span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"><span class="comment">######   WARNING: Persistence is disabled!!! You will lose your data when   #####</span></span><br><span class="line"><span class="comment">######            the Server pod is terminated.                             #####</span></span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The Prometheus alertmanager can be accessed via port 9093 on the following DNS name from within your cluster:</span><br><span class="line">prometheus-alertmanager.monitoring.svc.cluster.local</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Get the Alertmanager URL by running these commands <span class="keyword">in</span> the same shell:</span><br><span class="line">  <span class="built_in">export</span> POD_NAME=$(kubectl get pods --namespace monitoring -l <span class="string">&quot;app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=prometheus&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">  kubectl --namespace monitoring port-forward <span class="variable">$POD_NAME</span> 9093</span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"><span class="comment">######   WARNING: Persistence is disabled!!! You will lose your data when   #####</span></span><br><span class="line"><span class="comment">######            the AlertManager pod is terminated.                       #####</span></span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"><span class="comment">######   WARNING: Pod Security Policy has been disabled by default since    #####</span></span><br><span class="line"><span class="comment">######            it deprecated after k8s 1.25+. use                        #####</span></span><br><span class="line"><span class="comment">######            (index .Values &quot;prometheus-node-exporter&quot; &quot;rbac&quot;          #####</span></span><br><span class="line"><span class="comment">###### .          &quot;pspEnabled&quot;) with (index .Values                         #####</span></span><br><span class="line"><span class="comment">######            &quot;prometheus-node-exporter&quot; &quot;rbac&quot; &quot;pspAnnotations&quot;)       #####</span></span><br><span class="line"><span class="comment">######            in case you still need it.                                #####</span></span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:</span><br><span class="line">prometheus-prometheus-pushgateway.monitoring.svc.cluster.local</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Get the PushGateway URL by running these commands <span class="keyword">in</span> the same shell:</span><br><span class="line">  <span class="built_in">export</span> POD_NAME=$(kubectl get pods --namespace monitoring -l <span class="string">&quot;app=prometheus-pushgateway,component=pushgateway&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">  kubectl --namespace monitoring port-forward <span class="variable">$POD_NAME</span> 9091</span><br><span class="line"></span><br><span class="line">For more information on running Prometheus, visit:</span><br><span class="line">https://prometheus.io/</span><br></pre></td></tr></table></figure><h2 id="✅-모니터링을-위한-Grafana"><a href="#✅-모니터링을-위한-Grafana" class="headerlink" title="✅ 모니터링을 위한 Grafana"></a>✅ 모니터링을 위한 Grafana</h2><p>메트릭 수집을 위한 Prometheus 를 설치 했는데! 단순 메트릭 정보만 있으면 운영하는 입장에서 가시적으로 와 닿지 않습니다.</p><p>이번에는 메트릭 정보를 사용자에게 보여주는 대시보드 툴인 Grafana 를 설치해 대시보드를 구성하려고 합니다.</p><h2 id="Helm-을-이용한-Grafana-설치"><a href="#Helm-을-이용한-Grafana-설치" class="headerlink" title="Helm 을 이용한 Grafana 설치"></a>Helm 을 이용한 Grafana 설치</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># repo 추가</span></span><br><span class="line">helm repo add grafana https://grafana.github.io/helm-charts</span><br><span class="line"><span class="comment"># grafana 설치</span></span><br><span class="line">helm upgrade --install -f values-grafana.yaml grafana grafana/grafana -n monitoring --create-namespace</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Release <span class="string">&quot;grafana&quot;</span> does not exist. Installing it now.</span><br><span class="line">NAME: grafana</span><br><span class="line">LAST DEPLOYED: Fri Nov 15 11:22:42 2024</span><br><span class="line">NAMESPACE: monitoring</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 1</span><br><span class="line">NOTES:</span><br><span class="line">1. Get your <span class="string">&#x27;admin&#x27;</span> user password by running:</span><br><span class="line"></span><br><span class="line">   kubectl get secret --namespace monitoring grafana -o jsonpath=<span class="string">&quot;&#123;.data.admin-password&#125;&quot;</span> | <span class="built_in">base64</span> --decode ; <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:</span><br><span class="line"></span><br><span class="line">   grafana.monitoring.svc.cluster.local</span><br><span class="line"></span><br><span class="line">   Get the Grafana URL to visit by running these commands <span class="keyword">in</span> the same shell:</span><br><span class="line">     <span class="built_in">export</span> POD_NAME=$(kubectl get pods --namespace monitoring -l <span class="string">&quot;app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">     kubectl --namespace monitoring port-forward <span class="variable">$POD_NAME</span> 3000</span><br><span class="line"></span><br><span class="line">3. Login with the password from step 1 and the username: admin</span><br><span class="line"><span class="comment">#################################################################################</span></span><br><span class="line"><span class="comment">######   WARNING: Persistence is disabled!!! You will lose your data when   #####</span></span><br><span class="line"><span class="comment">######            the Grafana pod is terminated.                            #####</span></span><br><span class="line"><span class="comment">#################################################################################</span></span><br></pre></td></tr></table></figure><h2 id="✅-Grafana-KeyCloak-연동"><a href="#✅-Grafana-KeyCloak-연동" class="headerlink" title="✅ Grafana KeyCloak 연동"></a>✅ Grafana KeyCloak 연동</h2><ul><li>참고<ul><li><a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/keycloak/">https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/keycloak/</a></li></ul></li></ul><h3 id="1-KeyCloak-Grafana-Client-생성"><a href="#1-KeyCloak-Grafana-Client-생성" class="headerlink" title="1. KeyCloak - Grafana Client 생성"></a>1. KeyCloak - Grafana Client 생성</h3><p><img src="/images/devops/keycloak/grafana/client_grafana.png"></p><p><img src="/images/devops/keycloak/grafana/client_grafana_2.png"></p><p><img src="/images/devops/keycloak/grafana/client_grafana_3.png"></p><h3 id="2-KeyCloak-Grafana-User-Client-Role-추가"><a href="#2-KeyCloak-Grafana-User-Client-Role-추가" class="headerlink" title="2. KeyCloak - Grafana User Client Role 추가"></a>2. KeyCloak - Grafana User Client Role 추가</h3><p><img src="/images/devops/keycloak/grafana/user_client_role.png"></p><p><img src="/images/devops/keycloak/grafana/user_client_role2.png"></p><h3 id="3-Grafana-values-yaml-수정"><a href="#3-Grafana-values-yaml-수정" class="headerlink" title="3. Grafana values.yaml 수정"></a>3. Grafana values.yaml 수정</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">root_url:</span> <span class="string">http://monitoring.crunchychoco.com/</span></span><br><span class="line"><span class="attr">auth.generic_oauth:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ddanzit</span></span><br><span class="line">  <span class="attr">allow_sign_up:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">FYFRju1uhbUnZeQq3BUz1n7G1cK7DSNc</span></span><br><span class="line">  <span class="attr">scopes:</span> <span class="string">openid</span> <span class="string">email</span> <span class="string">profile</span> <span class="string">offline_access</span> <span class="string">roles</span></span><br><span class="line">  <span class="attr">email_attribute_path:</span> <span class="string">email</span></span><br><span class="line">  <span class="attr">login_attribute_path:</span> <span class="string">username</span></span><br><span class="line">  <span class="attr">name_attribute_path:</span> <span class="string">full_name</span></span><br><span class="line">  <span class="attr">auth_url:</span> <span class="string">http://auth.crunchychoco.com/realms/ddanzit/protocol/openid-connect/auth</span></span><br><span class="line">  <span class="attr">token_url:</span> <span class="string">http://auth.crunchychoco.com/realms/ddanzit/protocol/openid-connect/token</span></span><br><span class="line">  <span class="attr">api_url:</span> <span class="string">http://auth.crunchychoco.com/realms/ddanzit/protocol/openid-connect/userinfo</span></span><br><span class="line">  <span class="attr">role_attribute_path:</span> <span class="string">contains(roles[*],</span> <span class="string">&#x27;admin&#x27;</span><span class="string">)</span> <span class="string">&amp;&amp;</span> <span class="string">&#x27;Admin&#x27;</span> <span class="string">||</span> <span class="string">contains(roles[*],</span> <span class="string">&#x27;editor&#x27;</span><span class="string">)</span> <span class="string">&amp;&amp;</span> <span class="string">&#x27;Editor&#x27;</span> <span class="string">||</span> <span class="string">&#x27;Viewer&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/images/devops/keycloak/grafana/grafana_sso.png"></p>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      
      
      <comments>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</title>
      <link>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/</link>
      <guid>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/</guid>
      <pubDate>Sat, 22 Feb 2025 03:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/springboot/sample-board/nginx/nginx.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-opensearch/&quot; title=&quot;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/21/devops/keycloak/k8s-infra-keyclock/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/local-path-provisioner/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/kubeadm-install/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kubernetes.github.io/ingress-nginx/&quot;&gt;https://kubernetes.github.io/ingress-nginx/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nginxinc/kubernetes-ingress&quot;&gt;https://github.com/nginxinc/kubernetes-ingress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx&quot;&gt;https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nginx.com/blog/guide-to-choosing-ingress-controller-part-4-nginx-ingress-controller-options/&quot;&gt;https://www.nginx.com/blog/guide-to-choosing-ingress-controller-part-4-nginx-ingress-controller-options/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters&quot;&gt;https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Ingress-Controller-설치&quot;&gt;&lt;a href=&quot;#Ingress-Controller-설치&quot; class=&quot;headerlink&quot; title=&quot;Ingress Controller 설치&quot;&gt;&lt;/a&gt;Ingress Controller 설치&lt;/h2&gt;&lt;p&gt;현재 설치된 쿠버네티스에서는 Ingress 를 생성 하더라도 외부 요청을 Ingress 설정에 맞게 외부 요청을 내부 서비스로 전달해주는 Controller 가 따로 없습니다. 다시 말해, 규칙을 생성하더라도 규칙을 읽어서 적용시켜주는 모듈이 없는 상태입니다.&lt;/p&gt;
&lt;p&gt;보통, 클라우스 서비스에서는 ALB 나 NLB 와 같은 서비스를 이용해 Ingress 정책을 읽어 Load Balancing 규칙을 적용해주는데, 개인 쿠버네티스 서비스에서는 저런 시스템을 기대하기 힘듦으로 저는 Nginx 에서 제공해주는 Ingress Controller 를 이용하려고 합니다.&lt;/p&gt;
&lt;h2 id=&quot;Helm-설치&quot;&gt;&lt;a href=&quot;#Helm-설치&quot; class=&quot;headerlink&quot; title=&quot;Helm 설치&quot;&gt;&lt;/a&gt;Helm 설치&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;helm upgrade --install ingress-nginx ingress-nginx &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --repo https://kubernetes.github.io/ingress-nginx &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --namespace ingress-nginx --create-namespace&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/springboot/sample-board/nginx/nginx.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/02/22/devops/infra/k8s-infra-opensearch/" title="[쿠버네티스 DevOps 구축] - OpenSearch 설치하기">[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/" title="[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기">[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</a></li><li><a href="/2025/02/21/devops/keycloak/k8s-infra-keyclock/" title="[쿠버네티스 DevOps 구축] - Keycloak 설치하기">[쿠버네티스 DevOps 구축] - Keycloak 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/" title="[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기">[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</a></li><li><a href="/2025/02/20/k8s/local-path-provisioner/" title="[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치">[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</a></li><li><a href="/2025/02/20/k8s/kubeadm-install/" title="[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기">[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://kubernetes.github.io/ingress-nginx/">https://kubernetes.github.io/ingress-nginx/</a></li><li><a href="https://github.com/nginxinc/kubernetes-ingress">https://github.com/nginxinc/kubernetes-ingress</a></li><li><a href="https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx">https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx</a></li><li><a href="https://www.nginx.com/blog/guide-to-choosing-ingress-controller-part-4-nginx-ingress-controller-options/">https://www.nginx.com/blog/guide-to-choosing-ingress-controller-part-4-nginx-ingress-controller-options/</a></li><li><a href="https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters">https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters</a></li></ul><h2 id="Ingress-Controller-설치"><a href="#Ingress-Controller-설치" class="headerlink" title="Ingress Controller 설치"></a>Ingress Controller 설치</h2><p>현재 설치된 쿠버네티스에서는 Ingress 를 생성 하더라도 외부 요청을 Ingress 설정에 맞게 외부 요청을 내부 서비스로 전달해주는 Controller 가 따로 없습니다. 다시 말해, 규칙을 생성하더라도 규칙을 읽어서 적용시켜주는 모듈이 없는 상태입니다.</p><p>보통, 클라우스 서비스에서는 ALB 나 NLB 와 같은 서비스를 이용해 Ingress 정책을 읽어 Load Balancing 규칙을 적용해주는데, 개인 쿠버네티스 서비스에서는 저런 시스템을 기대하기 힘듦으로 저는 Nginx 에서 제공해주는 Ingress Controller 를 이용하려고 합니다.</p><h2 id="Helm-설치"><a href="#Helm-설치" class="headerlink" title="Helm 설치"></a>Helm 설치</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm upgrade --install ingress-nginx ingress-nginx \</span><br><span class="line">  --repo https://kubernetes.github.io/ingress-nginx \</span><br><span class="line">  --namespace ingress-nginx --create-namespace</span><br></pre></td></tr></table></figure><h2 id="BareMetal-설치"><a href="#BareMetal-설치" class="headerlink" title="BareMetal 설치"></a>BareMetal 설치</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># BareMetal 설치</span></span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.4/deploy/static/provider/baremetal/deploy.yaml</span><br><span class="line">kubectl apply -f deploy.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cloud 설치</span></span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/cloud/deploy.yaml</span><br><span class="line">kubectl apply -f deploy.yaml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">namespace/ingress-nginx created</span><br><span class="line">serviceaccount/ingress-nginx created</span><br><span class="line">serviceaccount/ingress-nginx-admission created</span><br><span class="line">role.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">role.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created</span><br><span class="line">configmap/ingress-nginx-controller created</span><br><span class="line">service/ingress-nginx-controller created</span><br><span class="line">service/ingress-nginx-controller-admission created</span><br><span class="line">deployment.apps/ingress-nginx-controller created</span><br><span class="line">job.batch/ingress-nginx-admission-create created</span><br><span class="line">job.batch/ingress-nginx-admission-patch created</span><br><span class="line">ingressclass.networking.k8s.io/nginx created</span><br><span class="line">validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created</span><br></pre></td></tr></table></figure><h3 id="1-hostNetwork-사용하기"><a href="#1-hostNetwork-사용하기" class="headerlink" title="1. hostNetwork 사용하기"></a>1. hostNetwork 사용하기</h3><ul><li><a href="https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network">https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network</a></li></ul><p>EKS 나 AKS 와는 달리 LB(Load Balancer) 가 없는 Bare Metal 환경에서는 Ingress Controller 만 설치 했다고 해서 외부 요청이 쿠버네티스 내로 들어오지는 못합니다. 😭</p><p>NortPort 를 이용해 Ingress Controller 의 서비스를 외부로 노출하는 방법이 있지만, 단일 Pod 만 올린 상태라 Pod 의 포트를 외부로 직접 노출하는 hostNetwork 를 사용하려고 합니다. (hostPort 도 사용 가능)</p><p>hostNetwork 옵션을 사용하면, 해당 Pod가 노드의 네트워크 네임스페이스를 공유하게 되어 컨테이너 포트가 노드 포트와 직접 연결됩니다. 즉, 컨테이너 내의 80번 포트가 자동으로 노드의 80번 포트와 바인딩되므로 별도의 포트 포워딩 없이 외부에서 노드의 80번(및 443번) 포트로 접속할 때 Ingress Controller 가 요청을 처리하게 됩니다.</p><p>만일 Controller Pod 가 여러개 있어 쿠버네티스의 서비스에서 제공하는 로드밸런싱을 사용하고 싶다면 NortPort 를 이용해 외부에서 접근하도록 설정하면 됩니다.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># hostNetwork 활성화: Pod가 노드 네트워크를 사용함 수 있습니다.</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span>  </span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">controller</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">k8s.gcr.io/ingress-nginx/controller:v1.7.1</span> </span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">          <span class="comment"># 필요에 따라 추가 인자 설정</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="comment"># hostNetwork 사용 시 hostPort 지정은 사실상 불필요하지만 명시할 수도 있음</span></span><br><span class="line">          <span class="attr">hostPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">hostPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><h2 id="HTTPS-적용하기-NGINX-Ingress-Controller와-cert-manager"><a href="#HTTPS-적용하기-NGINX-Ingress-Controller와-cert-manager" class="headerlink" title="HTTPS 적용하기 - NGINX Ingress Controller와 cert-manager"></a>HTTPS 적용하기 - NGINX Ingress Controller와 cert-manager</h2><ul><li>참고<ul><li><a href="https://kubernetes.github.io/ingress-nginx/user-guide/tls/#automated-certificate-management-with-cert-manager">https://kubernetes.github.io/ingress-nginx/user-guide/tls/#automated-certificate-management-with-cert-manager</a></li><li><a href="https://github.com/cert-manager/cert-manager">https://github.com/cert-manager/cert-manager</a></li></ul></li></ul><p>Ingress Controller 설치를 통해 클러스터내부와 외부의 HTTP 통신이 가능한 상태니 여기서 보안이 추가된 HTTPS 통신을 하기 위한 설정을 하려고 합니다.</p><p>HTTPS 를 사용하기 위해서는 인증서를 생성하고 GlobalSign 나 DigiCert 와 같은 신뢰성이 높고 유명한 기관에 인증서를 등록해야 하지만, 기관에 SSL 인증서를 등록하기 위해서는 금액이 꽤 들기 때문에 무료로 인증서를 등록 및 관리하는 방법이 없는지 찾아보다가 쿠버네티스에서 HTTPS 를 손쉽게 적용해주는 cert-manager 를 찾았습니다.</p><p>cert-manager 에서는 쿠버네티스에서 쉽게 HTTPS 를 구성할 수 있도록 Operator 를 제공합니다.</p><h3 id="1-cert-manager-설치"><a href="#1-cert-manager-설치" class="headerlink" title="1. cert-manager 설치"></a>1. cert-manager 설치</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.3/cert-manager.yaml</span><br></pre></td></tr></table></figure><h3 id="2-Issuers-정의"><a href="#2-Issuers-정의" class="headerlink" title="2. Issuers 정의"></a>2. Issuers 정의</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tls-issuer.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f tls-issuer.yaml</span></span><br><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: ClusterIssuer</span><br><span class="line">metadata:</span><br><span class="line">  name: letsencrypt-nginx</span><br><span class="line">spec:</span><br><span class="line">  acme:</span><br><span class="line">    server: https://acme-v02.api.letsencrypt.org/directory</span><br><span class="line">    email: &lt;이메일&gt;</span><br><span class="line">    privateKeySecretRef:</span><br><span class="line">      name: letsencrypt-nginx</span><br><span class="line">    solvers:</span><br><span class="line">      - http01:</span><br><span class="line">          ingress:</span><br><span class="line">            class: nginx</span><br></pre></td></tr></table></figure><h3 id="3-ingress에-반영"><a href="#3-ingress에-반영" class="headerlink" title="3. ingress에 반영"></a>3. ingress에 반영</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ingress.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f ingress.yaml</span></span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    cert-manager.io/cluster-issuer: letsencrypt-nginx</span><br><span class="line">    acme.cert-manager.io/http01-edit-in-place: <span class="string">&quot;true&quot;</span></span><br><span class="line">    nginx.ingress.kubernetes.io/ssl-redirect: <span class="string">&quot;true&quot;</span></span><br><span class="line">    kubernetes.io/tls-acme: <span class="string">&quot;true&quot;</span></span><br><span class="line">  name: backend-ingress</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  tls:</span><br><span class="line">    - hosts:</span><br><span class="line">        - &lt;도메인&gt;</span><br><span class="line">      secretName: tls-secret</span><br><span class="line">  rules:</span><br><span class="line">    - host: &lt;도메인&gt;</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">          - path: /</span><br><span class="line">            pathType: Prefix</span><br><span class="line">            backend:</span><br><span class="line">              service:</span><br><span class="line">                name: backend-svc</span><br><span class="line">                port:</span><br><span class="line">                  number: 80</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      
      
      <comments>https://ckck803.github.io/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스 DevOps 구축] - Keycloak 설치하기</title>
      <link>https://ckck803.github.io/2025/02/21/devops/keycloak/k8s-infra-keyclock/</link>
      <guid>https://ckck803.github.io/2025/02/21/devops/keycloak/k8s-infra-keyclock/</guid>
      <pubDate>Fri, 21 Feb 2025 00:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/devops/keycloak/keycloak.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-opensearch/&quot; title=&quot;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/21/devops/keycloak/k8s-infra-keyclock/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/local-path-provisioner/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/kubeadm-install/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;🔎-SSO-를-위한-Keycloak&quot;&gt;&lt;a href=&quot;#🔎-SSO-를-위한-Keycloak&quot; class=&quot;headerlink&quot; title=&quot;🔎 SSO 를 위한 Keycloak&quot;&gt;&lt;/a&gt;🔎 SSO 를 위한 Keycloak&lt;/h2&gt;&lt;p&gt;보통 DevOps 시스템을 구축하게 되면 각 시스템 마다 접근을 위한 계정 관리를 해줘야 합니다. 즉, N 개의 관리 시스템을 설치하게 되면 N 개의 계정이 필요합니다.&lt;/p&gt;
&lt;p&gt;계정이 너무 많아지면 사용하는 입장에서도 관리하는 입장에서도 너무 복잡해져서 보통, 한 서비스 가입을 통해 모든 시스템에 접근할 수 있는 SSO 를 많이들 구축합니다.&lt;/p&gt;
&lt;p&gt;저는 일반적으로 많이 사용하는 OpenSource 인 KeyCloak 을 이용해 쿠버네티스 위에 올라가는 서비스에 대한 SSO 를 구축하려고 합니다.&lt;/p&gt;
&lt;h2 id=&quot;✅-Helm-을-이용한-KeyCloak-설치&quot;&gt;&lt;a href=&quot;#✅-Helm-을-이용한-KeyCloak-설치&quot; class=&quot;headerlink&quot; title=&quot;✅ Helm 을 이용한 KeyCloak 설치&quot;&gt;&lt;/a&gt;✅ Helm 을 이용한 KeyCloak 설치&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;참고&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://artifacthub.io/packages/helm/bitnami/keycloak&quot;&gt;https://artifacthub.io/packages/helm/bitnami/keycloak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Helm Repo 추가&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm repo add keycloak https://charts.bitnami.com/bitnami&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Helm Default Chart 내려받기&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm show values keycloak/keycloak &amp;gt;&amp;gt; values-keycloak.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Keycloak 설치 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;helm upgrade --install -f ./values-keycloak.yaml keycloak keycloak/keycloak -n auth --create-namespace   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/devops/keycloak/keycloak.jpg"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/02/22/devops/infra/k8s-infra-opensearch/" title="[쿠버네티스 DevOps 구축] - OpenSearch 설치하기">[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/" title="[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기">[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</a></li><li><a href="/2025/02/21/devops/keycloak/k8s-infra-keyclock/" title="[쿠버네티스 DevOps 구축] - Keycloak 설치하기">[쿠버네티스 DevOps 구축] - Keycloak 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/" title="[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기">[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</a></li><li><a href="/2025/02/20/k8s/local-path-provisioner/" title="[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치">[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</a></li><li><a href="/2025/02/20/k8s/kubeadm-install/" title="[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기">[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</a></li></ul><h2 id="🔎-SSO-를-위한-Keycloak"><a href="#🔎-SSO-를-위한-Keycloak" class="headerlink" title="🔎 SSO 를 위한 Keycloak"></a>🔎 SSO 를 위한 Keycloak</h2><p>보통 DevOps 시스템을 구축하게 되면 각 시스템 마다 접근을 위한 계정 관리를 해줘야 합니다. 즉, N 개의 관리 시스템을 설치하게 되면 N 개의 계정이 필요합니다.</p><p>계정이 너무 많아지면 사용하는 입장에서도 관리하는 입장에서도 너무 복잡해져서 보통, 한 서비스 가입을 통해 모든 시스템에 접근할 수 있는 SSO 를 많이들 구축합니다.</p><p>저는 일반적으로 많이 사용하는 OpenSource 인 KeyCloak 을 이용해 쿠버네티스 위에 올라가는 서비스에 대한 SSO 를 구축하려고 합니다.</p><h2 id="✅-Helm-을-이용한-KeyCloak-설치"><a href="#✅-Helm-을-이용한-KeyCloak-설치" class="headerlink" title="✅ Helm 을 이용한 KeyCloak 설치"></a>✅ Helm 을 이용한 KeyCloak 설치</h2><ul><li>참고<ul><li><a href="https://artifacthub.io/packages/helm/bitnami/keycloak">https://artifacthub.io/packages/helm/bitnami/keycloak</a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Helm Repo 추가</span></span><br><span class="line">helm repo add keycloak https://charts.bitnami.com/bitnami</span><br><span class="line"><span class="comment"># Helm Default Chart 내려받기</span></span><br><span class="line">helm show values keycloak/keycloak &gt;&gt; values-keycloak.yaml</span><br><span class="line"><span class="comment"># Keycloak 설치 </span></span><br><span class="line">helm upgrade --install -f ./values-keycloak.yaml keycloak keycloak/keycloak -n auth --create-namespace   </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Release <span class="string">&quot;keycloak&quot;</span> does not exist. Installing it now.</span><br><span class="line">NAME: keycloak</span><br><span class="line">LAST DEPLOYED: Sun Dec 24 10:00:06 2023</span><br><span class="line">NAMESPACE: auth</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 1</span><br><span class="line">TEST SUITE: None</span><br><span class="line">NOTES:</span><br><span class="line">CHART NAME: keycloak</span><br><span class="line">CHART VERSION: 17.3.6</span><br><span class="line">APP VERSION: 22.0.5</span><br><span class="line"></span><br><span class="line">** Please be patient <span class="keyword">while</span> the chart is being deployed **</span><br><span class="line"></span><br><span class="line">Keycloak can be accessed through the following DNS name from within your cluster:</span><br><span class="line"></span><br><span class="line">    keycloak.auth.svc.cluster.local (port 80)</span><br><span class="line"></span><br><span class="line">To access Keycloak from outside the cluster execute the following commands:</span><br><span class="line"></span><br><span class="line">1. Get the Keycloak URL by running these commands:</span><br><span class="line"></span><br><span class="line">    <span class="built_in">export</span> HTTP_SERVICE_PORT=$(kubectl get --namespace auth -o jsonpath=<span class="string">&quot;&#123;.spec.ports[?(@.name==&#x27;http&#x27;)].port&#125;&quot;</span> services keycloak)</span><br><span class="line">    kubectl port-forward --namespace auth svc/keycloak <span class="variable">$&#123;HTTP_SERVICE_PORT&#125;</span>:<span class="variable">$&#123;HTTP_SERVICE_PORT&#125;</span> &amp;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;http://127.0.0.1:<span class="variable">$&#123;HTTP_SERVICE_PORT&#125;</span>/&quot;</span></span><br><span class="line"></span><br><span class="line">2. Access Keycloak using the obtained URL.</span><br></pre></td></tr></table></figure><h2 id="✅-KeyCloak-Ingress-설정"><a href="#✅-KeyCloak-Ingress-설정" class="headerlink" title="✅ KeyCloak Ingress 설정"></a>✅ KeyCloak Ingress 설정</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  <span class="attr">pathType:</span> <span class="string">ImplementationSpecific</span></span><br><span class="line">  <span class="attr">apiVersion:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">auth.crunchychoco.com</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/DevOps/">DevOps</category>
      
      <category domain="https://ckck803.github.io/categories/DevOps/KeyCloak/">KeyCloak</category>
      
      
      
      <comments>https://ckck803.github.io/2025/02/21/devops/keycloak/k8s-infra-keyclock/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</title>
      <link>https://ckck803.github.io/2025/02/20/k8s/local-path-provisioner/</link>
      <guid>https://ckck803.github.io/2025/02/20/k8s/local-path-provisioner/</guid>
      <pubDate>Thu, 20 Feb 2025 12:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/k8s/k8s.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-opensearch/&quot; title=&quot;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/21/devops/keycloak/k8s-infra-keyclock/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/local-path-provisioner/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/kubeadm-install/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rancher/local-path-provisioner&quot;&gt;https://github.com/rancher/local-path-provisioner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;🔎-로컬-쿠버네티스-동적-프로비저닝&quot;&gt;&lt;a href=&quot;#🔎-로컬-쿠버네티스-동적-프로비저닝&quot; class=&quot;headerlink&quot; title=&quot;🔎 로컬 쿠버네티스 동적 프로비저닝&quot;&gt;&lt;/a&gt;🔎 로컬 쿠버네티스 동적 프로비저닝&lt;/h2&gt;&lt;p&gt;로컬 쿠버네티스 환경에서는 기본적으로 동적 PV 프로비저닝을 지원하지 않습니다. 다시 말해, 사용자가 직접 PV 를 생성한 후 PVC 에 수동으로 PV 를 연결해야 합니다.&lt;/p&gt;
&lt;p&gt;EKS 에서는 CSI 드라이버를 통해 동적 프로비저닝을 제공하는데, 로컬 환경에서 동일한 기능을 제공해주는 플러그인을 찾다가 &lt;strong&gt;local-path-provisioner&lt;/strong&gt; 를 발견했습니다.&lt;/p&gt;
&lt;h3 id=&quot;1-local-path-provisioner-설치&quot;&gt;&lt;a href=&quot;#1-local-path-provisioner-설치&quot; class=&quot;headerlink&quot; title=&quot;1. local-path-provisioner 설치&quot;&gt;&lt;/a&gt;1. local-path-provisioner 설치&lt;/h3&gt;&lt;p&gt;아래 명령어를 사용해 local-path-provisioner를 설치합니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/k8s/k8s.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/02/22/devops/infra/k8s-infra-opensearch/" title="[쿠버네티스 DevOps 구축] - OpenSearch 설치하기">[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/" title="[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기">[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</a></li><li><a href="/2025/02/21/devops/keycloak/k8s-infra-keyclock/" title="[쿠버네티스 DevOps 구축] - Keycloak 설치하기">[쿠버네티스 DevOps 구축] - Keycloak 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/" title="[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기">[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</a></li><li><a href="/2025/02/20/k8s/local-path-provisioner/" title="[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치">[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</a></li><li><a href="/2025/02/20/k8s/kubeadm-install/" title="[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기">[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/rancher/local-path-provisioner">https://github.com/rancher/local-path-provisioner</a></li></ul><h2 id="🔎-로컬-쿠버네티스-동적-프로비저닝"><a href="#🔎-로컬-쿠버네티스-동적-프로비저닝" class="headerlink" title="🔎 로컬 쿠버네티스 동적 프로비저닝"></a>🔎 로컬 쿠버네티스 동적 프로비저닝</h2><p>로컬 쿠버네티스 환경에서는 기본적으로 동적 PV 프로비저닝을 지원하지 않습니다. 다시 말해, 사용자가 직접 PV 를 생성한 후 PVC 에 수동으로 PV 를 연결해야 합니다.</p><p>EKS 에서는 CSI 드라이버를 통해 동적 프로비저닝을 제공하는데, 로컬 환경에서 동일한 기능을 제공해주는 플러그인을 찾다가 <strong>local-path-provisioner</strong> 를 발견했습니다.</p><h3 id="1-local-path-provisioner-설치"><a href="#1-local-path-provisioner-설치" class="headerlink" title="1. local-path-provisioner 설치"></a>1. local-path-provisioner 설치</h3><p>아래 명령어를 사용해 local-path-provisioner를 설치합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml</span><br></pre></td></tr></table></figure><h3 id="2-기본-StorageClass-설정"><a href="#2-기본-StorageClass-설정" class="headerlink" title="2. 기본 StorageClass 설정"></a>2. 기본 StorageClass 설정</h3><p>설치 후, local-path StorageClass를 기본(default) StorageClass로 설정합니다. 기본 StorageClass는 PVC에 storageClassName을 지정하지 않아도 자동으로 사용됩니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl patch storageclass local-path -p <span class="string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-설치-확인"><a href="#3-설치-확인" class="headerlink" title="3. 설치 확인"></a>3. 설치 확인</h3><p>다음 명령어로 StorageClass가 제대로 생성되고 기본값으로 설정되었는지 확인합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get storageclass</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NAME                   PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE</span><br><span class="line">local-path (default)   rancher.io/local-path   Delete          WaitForFirstConsumer   <span class="literal">false</span>                  15d</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      
      
      <comments>https://ckck803.github.io/2025/02/20/k8s/local-path-provisioner/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</title>
      <link>https://ckck803.github.io/2025/02/20/k8s/kubeadm-install/</link>
      <guid>https://ckck803.github.io/2025/02/20/k8s/kubeadm-install/</guid>
      <pubDate>Wed, 19 Feb 2025 21:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/k8s/k8s.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-opensearch/&quot; title=&quot;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - OpenSearch 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/21/devops/keycloak/k8s-infra-keyclock/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Keycloak 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/local-path-provisioner/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2025/02/20/k8s/kubeadm-install/&quot; title=&quot;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&quot;&gt;[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&quot;&gt;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cocococo.tistory.com/entry/k8s-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-kubeadm-kubelet-%EB%B0%8F-kubectl-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95&quot;&gt;https://cocococo.tistory.com/entry/k8s-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-kubeadm-kubelet-%EB%B0%8F-kubectl-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jongsky.tistory.com/112&quot;&gt;https://jongsky.tistory.com/112&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Wr6nrBRqYYE&quot;&gt;https://www.youtube.com/watch?v=Wr6nrBRqYYE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;📝-회고&quot;&gt;&lt;a href=&quot;#📝-회고&quot; class=&quot;headerlink&quot; title=&quot;📝 회고&quot;&gt;&lt;/a&gt;📝 회고&lt;/h2&gt;&lt;p&gt;Vitality 팀에 있을때 EKS 로 구축된 시스템을 운영했었습니다. 지금은 해당 팀이 해체 되면서 운영하고 있지는 않지만 그때 내부적으로 진행했던 프로젝트들의 기억을 되살리고자 포스트로 남기려고 합니다.&lt;/p&gt;
&lt;h2 id=&quot;🤔-쿠버네티스-운영환경-선택&quot;&gt;&lt;a href=&quot;#🤔-쿠버네티스-운영환경-선택&quot; class=&quot;headerlink&quot; title=&quot;🤔 쿠버네티스 운영환경 선택&quot;&gt;&lt;/a&gt;🤔 쿠버네티스 운영환경 선택&lt;/h2&gt;&lt;p&gt;지속적으로 쿠버네티스 환경을 운영도 하면서 공부도 하고 싶어 여러가지 환경을 검토해봤는데, EKS 는 일단 컨트롤 플레인 자체만으로도 한달에 7만원 정도가 나와 Pass (너무 비싸 😭), 로컬 PC 에 Minikube 를 이용하는 방법은 노트북을 너무 핫하게 만드는 방법이라 Pass&lt;/p&gt;
&lt;p&gt;요즘 알리에서 미니 PC 가 싸게 풀리고 있고 시스템 초기 구입 비용 빼면 운용하는데는 매월 전기세만 내면 돼 크게 부담이 안될 것 같아 미니 PC 를 이용한 서버를 구축하기로 했습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/k8s/k8s.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2025/02/22/devops/infra/k8s-infra-opensearch/" title="[쿠버네티스 DevOps 구축] - OpenSearch 설치하기">[쿠버네티스 DevOps 구축] - OpenSearch 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-prometheus-grafana/" title="[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기">[쿠버네티스 DevOps 구축] - Prometheus 와 Grafana 설치하기</a></li><li><a href="/2025/02/21/devops/keycloak/k8s-infra-keyclock/" title="[쿠버네티스 DevOps 구축] - Keycloak 설치하기">[쿠버네티스 DevOps 구축] - Keycloak 설치하기</a></li><li><a href="/2025/02/22/devops/infra/k8s-infra-nginx-ingress-controller/" title="[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기">[쿠버네티스 DevOps 구축] - Ingress Nginx Controller 설치하기</a></li><li><a href="/2025/02/20/k8s/local-path-provisioner/" title="[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치">[쿠버네티스 DevOps 구축] - Local PC 쿠버네티스 동적 프로비저닝을 위한 StorageClass 설치</a></li><li><a href="/2025/02/20/k8s/kubeadm-install/" title="[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기">[쿠버네티스 DevOps 구축] - Local PC 에 쿠버네티스 설치하기</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a></li><li><a href="https://cocococo.tistory.com/entry/k8s-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-kubeadm-kubelet-%EB%B0%8F-kubectl-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95">https://cocococo.tistory.com/entry/k8s-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-kubeadm-kubelet-%EB%B0%8F-kubectl-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95</a></li><li><a href="https://jongsky.tistory.com/112">https://jongsky.tistory.com/112</a></li><li><a href="https://www.youtube.com/watch?v=Wr6nrBRqYYE">https://www.youtube.com/watch?v=Wr6nrBRqYYE</a></li></ul><h2 id="📝-회고"><a href="#📝-회고" class="headerlink" title="📝 회고"></a>📝 회고</h2><p>Vitality 팀에 있을때 EKS 로 구축된 시스템을 운영했었습니다. 지금은 해당 팀이 해체 되면서 운영하고 있지는 않지만 그때 내부적으로 진행했던 프로젝트들의 기억을 되살리고자 포스트로 남기려고 합니다.</p><h2 id="🤔-쿠버네티스-운영환경-선택"><a href="#🤔-쿠버네티스-운영환경-선택" class="headerlink" title="🤔 쿠버네티스 운영환경 선택"></a>🤔 쿠버네티스 운영환경 선택</h2><p>지속적으로 쿠버네티스 환경을 운영도 하면서 공부도 하고 싶어 여러가지 환경을 검토해봤는데, EKS 는 일단 컨트롤 플레인 자체만으로도 한달에 7만원 정도가 나와 Pass (너무 비싸 😭), 로컬 PC 에 Minikube 를 이용하는 방법은 노트북을 너무 핫하게 만드는 방법이라 Pass</p><p>요즘 알리에서 미니 PC 가 싸게 풀리고 있고 시스템 초기 구입 비용 빼면 운용하는데는 매월 전기세만 내면 돼 크게 부담이 안될 것 같아 미니 PC 를 이용한 서버를 구축하기로 했습니다.</p><h2 id="✅-1-쿠버테니스-설치전-사전-세팅"><a href="#✅-1-쿠버테니스-설치전-사전-세팅" class="headerlink" title="✅ 1. 쿠버테니스 설치전 사전 세팅"></a>✅ 1. 쿠버테니스 설치전 사전 세팅</h2><h3 id="1-1-swap-비활성화"><a href="#1-1-swap-비활성화" class="headerlink" title="1.1 swap 비활성화"></a>1.1 swap 비활성화</h3><p>쿠버네티스를 설치하기 전에 리눅스 메모리 swap 을 비활성화 해줘야 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo swapoff -a</span><br><span class="line"><span class="comment"># 부팅 시에도 swap이 활성화되지 않도록 /etc/fstab 파일에서 swap 관련 항목 주석 처리</span></span><br><span class="line">sudo sed -i <span class="string">&#x27;/swap/d&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="1-2-iptables-설정"><a href="#1-2-iptables-설정" class="headerlink" title="1.2 iptables 설정"></a>1.2 iptables 설정</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 네트워크 모듈 로드</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/k8s.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo modprobe overlay</span><br><span class="line">sudo modprobe br_netfilter</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sysctl 파라미터 설정</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h3 id="1-3-Docker-설치"><a href="#1-3-Docker-설치" class="headerlink" title="1.3 Docker 설치"></a>1.3 Docker 설치</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ca-certificates curl</span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class="line">sudo <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.asc</span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(. /etc/os-release &amp;&amp; echo <span class="string">&quot;<span class="variable">$&#123;UBUNTU_CODENAME:-<span class="variable">$VERSION_CODENAME</span>&#125;</span>&quot;</span>)</span> stable&quot;</span> | \</span><br><span class="line">  sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><h3 id="1-4-containerd-설정"><a href="#1-4-containerd-설정" class="headerlink" title="1.4 containerd 설정"></a>1.4 containerd 설정</h3><p>쿠버네티스에서 사용하는 containerd 를 설정을 변경합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/containerd </span><br><span class="line">sudo containerd config default | sudo <span class="built_in">tee</span> /etc/containerd/config.toml </span><br><span class="line"><span class="comment"># config.toml 파일에서 SystemdCgroup 값을 변경합니다.</span></span><br><span class="line">sudo sed -i <span class="string">&#x27;s/SystemdCgroup = false/SystemdCgroup = true/&#x27;</span> /etc/containerd/config.toml </span><br><span class="line">sudo systemctl restart containerd</span><br></pre></td></tr></table></figure><h2 id="✅-2-쿠버네티스-설치에-필요한-패키지-설치"><a href="#✅-2-쿠버네티스-설치에-필요한-패키지-설치" class="headerlink" title="✅ 2. 쿠버네티스 설치에 필요한 패키지 설치"></a>✅ 2. 쿠버네티스 설치에 필요한 패키지 설치</h2><p>쿠버네티스 설치에 필요한 패키지를 다운 받을 수 있도록 아래 명령어를 이용해 apt 저장소에 GPG 키와 Kubernetes 저장소를 추가해줍니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># GPG 키 다운로드 및 저장</span></span><br><span class="line">curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo <span class="built_in">tee</span> /etc/apt/keyrings/kubernetes-apt-keyring.asc &gt; /dev/null</span><br><span class="line"><span class="comment"># apt 저장소에 쿠버네티스 저장소 추가</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/kubernetes.list &gt; /dev/null</span><br><span class="line"><span class="comment"># 위 내용이 반영될 수 있도록 apt 저장소를 업데이트합니다.</span></span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>쿠버네티스 저장소가 추가 됐으면 apt 명령어를 이용해 kubelet, kubeadm, kubectl 을 설치해줍니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 설치 가능한 버전 확인</span></span><br><span class="line">sudo apt-cache madison kubeadm</span><br><span class="line"><span class="comment"># 버전을 명시해서 설치가능</span></span><br><span class="line">sudo apt-get install -y kubelet=1.27.16-1.1 kubeadm=1.27.16-1.1 kubectl=1.27.16-1.1</span><br><span class="line">sudo apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h2 id="✅-3-Kubernetes-클러스터-초기화"><a href="#✅-3-Kubernetes-클러스터-초기화" class="headerlink" title="✅ 3. Kubernetes 클러스터 초기화"></a>✅ 3. Kubernetes 클러스터 초기화</h2><p>kubelet, kubeadm, kubectl 가 완료되면 kubeadm init 명령어를 이용해 쿠버네티스 컨트롤 플레인 노드를 초기화 시켜줍니다.</p><p>kubeadm init 추가적인 파라미터를 확인하고 싶을 경우 <a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/">쿠버네티스 공식 문서</a> 에서 확인할 수 있습니다.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo kubeadm init --pod-network-cidr=10.0.0.0/16 --v=5</span><br><span class="line"><span class="comment"># 외부 Listening 할 수 있는 IP 가 있는 경우 </span></span><br><span class="line">sudo kubeadm init --control-plane-endpoint=&lt;접속_IP&gt; --pod-network-cidr=&lt;Pod_네트워크_범위&gt;</span><br></pre></td></tr></table></figure><h4 id="Config-파일을-이용한-클러스터-초기화"><a href="#Config-파일을-이용한-클러스터-초기화" class="headerlink" title="Config 파일을 이용한 클러스터 초기화"></a>Config 파일을 이용한 클러스터 초기화</h4><p>config 파일을 별도로 생성해 쿠버네티스 클러스터를 생성하는 방법도 있습니다.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: <span class="string">&quot;v1.29.3&quot;</span> <span class="comment">#설치할 쿠버네티스 버전</span></span><br><span class="line">controlPlaneEndpoint: <span class="string">&quot;&lt;접속_IP&gt;:&lt;접속_PORT&gt;&quot;</span> <span class="comment">#외부 IP 주소와 포트 지정</span></span><br><span class="line">networking:</span><br><span class="line">  podSubnet: <span class="string">&quot;10.244.0.0/16&quot;</span> <span class="comment">#Pod 네트워크 범위 설정</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo kubeadm init --config kubeadm-config.yaml</span><br></pre></td></tr></table></figure><h4 id="쿠버네티스-설정파일-생성"><a href="#쿠버네티스-설정파일-생성" class="headerlink" title="쿠버네티스 설정파일 생성"></a>쿠버네티스 설정파일 생성</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube </span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config </span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h2 id="✅-4-CNI-Container-Network-Interface-설치"><a href="#✅-4-CNI-Container-Network-Interface-설치" class="headerlink" title="✅ 4. CNI (Container Network Interface) 설치"></a>✅ 4. CNI (Container Network Interface) 설치</h2><p>클러스터 내부의 Pod 들이 서로 통신할 수 있도록 CNI 를 설치합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> cni</span><br><span class="line"><span class="built_in">cd</span> cni</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/projectcalico/calico/v3.28.1/manifests/tigera-operator.yaml</span><br><span class="line">wget https://raw.githubusercontent.com/projectcalico/calico/v3.28.1/manifests/custom-resources.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># cidr 대역을 worker node 대역으로 변경</span></span><br><span class="line">vi custom-resources.yaml</span><br><span class="line"></span><br><span class="line">kubectl create -f tigera-operator.yaml</span><br><span class="line">kubectl create -f custom-resources.yaml</span><br></pre></td></tr></table></figure><h3 id="쿠버네티스-설치-점검-확인"><a href="#쿠버네티스-설치-점검-확인" class="headerlink" title="쿠버네티스 설치 점검 확인"></a>쿠버네티스 설치 점검 확인</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -l | grep kube</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hi  kubeadm                                       1.29.13-1.1                              amd64        Command-line utility <span class="keyword">for</span> administering a Kubernetes cluster</span><br><span class="line">hi  kubectl                                       1.29.13-1.1                              amd64        Command-line utility <span class="keyword">for</span> interacting with a Kubernetes cluster</span><br><span class="line">hi  kubelet                                       1.29.13-1.1                              amd64        Node agent <span class="keyword">for</span> Kubernetes clusters</span><br><span class="line">ii  kubernetes-cni                                1.3.0-1.1                                amd64        Binaries required to provision kubernetes container networking</span><br></pre></td></tr></table></figure><h2 id="✅-5-Control-Plain-Taint-삭제"><a href="#✅-5-Control-Plain-Taint-삭제" class="headerlink" title="✅ 5. Control Plain Taint 삭제"></a>✅ 5. Control Plain Taint 삭제</h2><p>쿠버네티스를 초기화하게되면 Control Plane 노드에 Pod 설치를 못하도록 (Schedule 이 불가능) Taint 설정이 들어가 있습니다.</p><p>Control Plane 에도 Pod 설치가 가능하게 (Schedule 이 가능하게) 하려면 해당 노드에 걸려있는 Taint 설정을 해지해줘야 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Events:</span><br><span class="line">  Type     Reason            Age    From               Message</span><br><span class="line">  ----     ------            ----   ----               -------</span><br><span class="line">  Warning  FailedScheduling  3m     default-scheduler  0/1 nodes are available: 1 node(s) had untolerated taint &#123;node-role.kubernetes.io/control-plane: &#125;. preemption: 0/1 nodes are available: 1 Preemption is not helpful <span class="keyword">for</span> scheduling.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br><span class="line">kubectl taint nodes --all node-role.kubernetes.io/control-plane-</span><br></pre></td></tr></table></figure><hr><h3 id="⚠️-클러스터-초기화시-오류-발생"><a href="#⚠️-클러스터-초기화시-오류-발생" class="headerlink" title="⚠️ 클러스터 초기화시 오류 발생"></a>⚠️ 클러스터 초기화시 오류 발생</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo kubeadm init --pod-network-cidr=192.168.0.0/16</span><br><span class="line"></span><br><span class="line">I0202 21:12:59.135308    6955 version.go:256] remote version is much newer: v1.32.1; falling back to: stable-1.29</span><br><span class="line">[init] Using Kubernetes version: v1.29.13</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[WARNING Swap]: swap is supported <span class="keyword">for</span> cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default</span><br><span class="line">error execution phase preflight: [preflight] Some fatal errors occurred:</span><br><span class="line">[ERROR CRI]: container runtime is not running: output: time=<span class="string">&quot;2025-02-02T21:12:59+09:00&quot;</span> level=fatal msg=<span class="string">&quot;validate service connection: validate CRI v1 runtime API for endpoint \&quot;unix:///var/run/containerd/containerd.sock\&quot;: rpc error: code = Unimplemented desc = unknown service runtime.v1.RuntimeService&quot;</span></span><br><span class="line">, error: <span class="built_in">exit</span> status 1</span><br><span class="line">[ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables does not exist</span><br><span class="line">[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`</span><br><span class="line">To see the stack trace of this error execute with --v=5 or higher</span><br></pre></td></tr></table></figure><h4 id="ERROR-CRI-container-runtime-is-not-running"><a href="#ERROR-CRI-container-runtime-is-not-running" class="headerlink" title="[ERROR CRI]: container runtime is not running"></a>[ERROR CRI]: container runtime is not running</h4><p>아래 파일에서 <code>SystemdCgroup = false</code> 해당 부분을 주석 처리 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><p>파일을 수정한 후 containerd 를 재실행해줍니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure><h4 id="ERROR-FileContent–proc-sys-net-bridge-bridge-nf-call-iptables"><a href="#ERROR-FileContent–proc-sys-net-bridge-bridge-nf-call-iptables" class="headerlink" title="[ERROR FileContent–proc-sys-net-bridge-bridge-nf-call-iptables]"></a>[ERROR FileContent–proc-sys-net-bridge-bridge-nf-call-iptables]</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo modprobe br_netfilter</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;br_netfilter&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/modules-load.d/k8s.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h3 id="⚠️-The-HTTP-call-equal-to-‘curl-sSL-http-localhost-10248-healthz‘-failed-with-error-Get-“http-localhost-10248-healthz“-dial-tcp-127-0-0-1-10248-connect-connection-refused"><a href="#⚠️-The-HTTP-call-equal-to-‘curl-sSL-http-localhost-10248-healthz‘-failed-with-error-Get-“http-localhost-10248-healthz“-dial-tcp-127-0-0-1-10248-connect-connection-refused" class="headerlink" title="⚠️ The HTTP call equal to ‘curl -sSL http://localhost:10248/healthz‘ failed with error: Get “http://localhost:10248/healthz“: dial tcp 127.0.0.1:10248: connect: connection refused."></a>⚠️ The HTTP call equal to ‘curl -sSL <a href="http://localhost:10248/healthz">http://localhost:10248/healthz</a>‘ failed with error: Get “<a href="http://localhost:10248/healthz">http://localhost:10248/healthz</a>“: dial tcp 127.0.0.1:10248: connect: connection refused.</h3><p>container 의 cgroups 에 systemd 를 사용하도록 Docker 데몬을 구성한다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /etc/docker</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">t &lt;&lt;EOF | sudo tee /etc/docker/daemon.json</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;exec-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;native.cgroupdriver=systemd&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;log-driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json-file&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;log-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;max-size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;storage-driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;overlay2&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>Docker Daemon 설정을 적용하기 위해 서비스를 재시작 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker </span><br><span class="line">sudo systemctl daemon-reload </span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="⚠️-kubelet-check-It-seems-like-the-kubelet-isn’t-running-or-healthy"><a href="#⚠️-kubelet-check-It-seems-like-the-kubelet-isn’t-running-or-healthy" class="headerlink" title="⚠️ [kubelet-check] It seems like the kubelet isn’t running or healthy."></a>⚠️ [kubelet-check] It seems like the kubelet isn’t running or healthy.</h3><p>kubelet 상태가 현재 정상적이지 않다는 오류가 발생하고 있어, 아래 명령어들을 이용해 kubelet 상태를 확인해봅니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 서비스 상태 확인</span></span><br><span class="line">sudo systemctl status kubelet</span><br><span class="line"><span class="comment">## 로그 확인</span></span><br><span class="line">sudo journalctl -xeu kubelet | <span class="built_in">tail</span> -n 50</span><br></pre></td></tr></table></figure><h4 id="🔎-failed-to-run-Kubelet-running-with-swap-on-is-not-supported"><a href="#🔎-failed-to-run-Kubelet-running-with-swap-on-is-not-supported" class="headerlink" title="🔎 failed to run Kubelet: running with swap on is not supported"></a>🔎 failed to run Kubelet: running with swap on is not supported</h4><p>로그를 확인해보면 현재 메모리 스왑으로 인해 kubelet 이 정상적으로 실행되지 않음을 확인할 수 있습니다.</p><p>Kubernetes는 <code>swap</code> 을 사용하면 정상적으로 동작하지 않으므로 반드시 비활성화 해주어야 합니다.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Feb 02 23:16:56 ddanzit-ubuntu-desktop kubelet[20910]: E0202 23:16:56.465663   20910 run.go:74] <span class="string">&quot;command failed&quot;</span> err=<span class="string">&quot;failed to run Kubelet: running with swap on is not supported, please disable swap! or set --fail-swap-on flag to false. /proc/swaps contained: [Filename\t\t\t\tType\t\tSize\t\tUsed\t\tPriority /swap.img                               file\t\t8388604\t\t0\t\t-2]&quot;</span></span><br><span class="line">Feb 02 23:16:56 ddanzit-ubuntu-desktop systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE</span><br><span class="line">░░ Subject: Unit process exited</span><br><span class="line">░░ Defined-By: systemd</span><br><span class="line">░░ Support: http://www.ubuntu.com/support</span><br><span class="line">░░</span><br><span class="line">░░ An ExecStart= process belonging to unit kubelet.service has exited.</span><br><span class="line">░░</span><br><span class="line">░░ The process<span class="string">&#x27; exit code is &#x27;</span>exited<span class="string">&#x27; and its exit status is 1.</span></span><br><span class="line"><span class="string">Feb 02 23:16:56 ddanzit-ubuntu-desktop systemd[1]: kubelet.service: Failed with result &#x27;</span>exit-code<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">░░ Subject: Unit failed</span></span><br><span class="line"><span class="string">░░ Defined-By: systemd</span></span><br><span class="line"><span class="string">░░ Support: http://www.ubuntu.com/support</span></span><br><span class="line"><span class="string">░░</span></span><br><span class="line"><span class="string">░░ The unit kubelet.service has entered the &#x27;</span>failed<span class="string">&#x27; state with result &#x27;</span>exit-code<span class="string">&#x27;.</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Kubernetes/">Kubernetes</category>
      
      
      
      <comments>https://ckck803.github.io/2025/02/20/k8s/kubeadm-install/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Spring] - M1 맥북에서 Embeded Redis 사용하기</title>
      <link>https://ckck803.github.io/2024/11/29/spring/spring-redis/springboot-redis-m1/</link>
      <guid>https://ckck803.github.io/2024/11/29/spring/spring-redis/springboot-redis-m1/</guid>
      <pubDate>Fri, 29 Nov 2024 14:47:05 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/springboot/redis/redis.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2024/11/29/spring/spring-redis/springboot-redis-m1/&quot; title=&quot;[Spring] - M1 맥북에서 Embeded Redis 사용하기&quot;&gt;[Spring] - M1 맥북에서 Embeded Redis 사용하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/12/23/spring/spring-redis/springboot-redis/&quot; title=&quot;[Spring] - Embeded Redis 사용하기&quot;&gt;[Spring] - Embeded Redis 사용하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ozimov/embedded-redis&quot;&gt;https://github.com/ozimov/embedded-redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/redis/redis-hashes&quot;&gt;https://github.com/redis/redis-hashes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;🚫-M1-Mac-에서-Embedded-Redis-사용시-에러&quot;&gt;&lt;a href=&quot;#🚫-M1-Mac-에서-Embedded-Redis-사용시-에러&quot; class=&quot;headerlink&quot; title=&quot;🚫 M1 Mac 에서 Embedded Redis 사용시 에러&quot;&gt;&lt;/a&gt;🚫 M1 Mac 에서 Embedded Redis 사용시 에러&lt;/h2&gt;&lt;p&gt;M1 맥북에서 Embedded Redis 를 그냥 사용하려고 하면 다음과 같이 redis server 를 시작할 수 없다는 에러가 발생합니다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Caused by: java.lang.RuntimeException: Can&lt;span class=&quot;string&quot;&gt;&amp;#x27;t start redis server. Check logs for details. Redis process log: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    at redis.embedded.AbstractRedisInstance.awaitRedisServerReady(AbstractRedisInstance.java:70) ~[embedded-redis-0.7.3.jar:na]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    at redis.embedded.AbstractRedisInstance.start(AbstractRedisInstance.java:42) ~[embedded-redis-0.7.3.jar:na]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;🔎-Embedded-Redis-라이브러리-확인&quot;&gt;&lt;a href=&quot;#🔎-Embedded-Redis-라이브러리-확인&quot; class=&quot;headerlink&quot; title=&quot;🔎 Embedded Redis 라이브러리 확인&quot;&gt;&lt;/a&gt;🔎 Embedded Redis 라이브러리 확인&lt;/h2&gt;&lt;p&gt;Embedded Redis 라이브러리에서 제공해주는 Redis 아키택처 정보들을 확인하면 M1 맥북에 해당하는 &lt;strong&gt;aarch64&lt;/strong&gt; 용 Redis 를 지원하지 않습니다. 따라서, M1 에서 Embedded Redis 를 사용하기 위해서는 M1 용 아키택처에 맞게 Redis 를 새롭게 빌드해서 Embedded Redis 라이브러리가 띄울 수 있게 제공해야 합니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/springboot/redis/redis.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2024/11/29/spring/spring-redis/springboot-redis-m1/" title="[Spring] - M1 맥북에서 Embeded Redis 사용하기">[Spring] - M1 맥북에서 Embeded Redis 사용하기</a></li><li><a href="/2021/12/23/spring/spring-redis/springboot-redis/" title="[Spring] - Embeded Redis 사용하기">[Spring] - Embeded Redis 사용하기</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/ozimov/embedded-redis">https://github.com/ozimov/embedded-redis</a></li><li><a href="https://github.com/redis/redis-hashes">https://github.com/redis/redis-hashes</a></li></ul><h2 id="🚫-M1-Mac-에서-Embedded-Redis-사용시-에러"><a href="#🚫-M1-Mac-에서-Embedded-Redis-사용시-에러" class="headerlink" title="🚫 M1 Mac 에서 Embedded Redis 사용시 에러"></a>🚫 M1 Mac 에서 Embedded Redis 사용시 에러</h2><p>M1 맥북에서 Embedded Redis 를 그냥 사용하려고 하면 다음과 같이 redis server 를 시작할 수 없다는 에러가 발생합니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Caused by: java.lang.RuntimeException: Can<span class="string">&#x27;t start redis server. Check logs for details. Redis process log: </span></span><br><span class="line"><span class="string">    at redis.embedded.AbstractRedisInstance.awaitRedisServerReady(AbstractRedisInstance.java:70) ~[embedded-redis-0.7.3.jar:na]</span></span><br><span class="line"><span class="string">    at redis.embedded.AbstractRedisInstance.start(AbstractRedisInstance.java:42) ~[embedded-redis-0.7.3.jar:na]</span></span><br></pre></td></tr></table></figure><h2 id="🔎-Embedded-Redis-라이브러리-확인"><a href="#🔎-Embedded-Redis-라이브러리-확인" class="headerlink" title="🔎 Embedded Redis 라이브러리 확인"></a>🔎 Embedded Redis 라이브러리 확인</h2><p>Embedded Redis 라이브러리에서 제공해주는 Redis 아키택처 정보들을 확인하면 M1 맥북에 해당하는 <strong>aarch64</strong> 용 Redis 를 지원하지 않습니다. 따라서, M1 에서 Embedded Redis 를 사용하기 위해서는 M1 용 아키택처에 맞게 Redis 를 새롭게 빌드해서 Embedded Redis 라이브러리가 띄울 수 있게 제공해야 합니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1) given explicit file (os-independence broken!)</span></span><br><span class="line"><span class="type">RedisServer</span> <span class="variable">redisServer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisServer</span>(<span class="string">&quot;/path/to/your/redis&quot;</span>, <span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2) given os-independent matrix</span></span><br><span class="line"><span class="type">RedisExecProvider</span> <span class="variable">customProvider</span> <span class="operator">=</span> RedisExecProvider.defaultProvider()</span><br><span class="line">  .override(OS.UNIX, <span class="string">&quot;/path/to/unix/redis&quot;</span>)</span><br><span class="line">  .override(OS.WINDOWS, Architecture.x86, <span class="string">&quot;/path/to/windows/redis&quot;</span>)</span><br><span class="line">  .override(OS.Windows, Architecture.x86_64, <span class="string">&quot;/path/to/windows/redis&quot;</span>)</span><br><span class="line">  .override(OS.MAC_OS_X, Architecture.x86, <span class="string">&quot;/path/to/macosx/redis&quot;</span>)</span><br><span class="line">  .override(OS.MAC_OS_X, Architecture.x86_64, <span class="string">&quot;/path/to/macosx/redis&quot;</span>)</span><br><span class="line">  </span><br><span class="line"><span class="type">RedisServer</span> <span class="variable">redisServer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisServer</span>(customProvider, <span class="number">6379</span>);</span><br></pre></td></tr></table></figure><h2 id="✅-M1-용-Redis-Server-생성"><a href="#✅-M1-용-Redis-Server-생성" class="headerlink" title="✅ M1 용 Redis Server 생성"></a>✅ M1 용 Redis Server 생성</h2><p>Redis 공식 문서에서는 Redis 소스를 제공합니다. 최신 버전에 해당하는 Redis 를 내려받아 M1 맥북에 맞게 소스를 빌드해줍니다.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Redis 소스를 내려받고 빌드를 폴더 정의</span></span><br><span class="line">mkdir -p src/main/resources/binary/redis</span><br><span class="line"><span class="comment">// 다운로드 폴더로 이동</span></span><br><span class="line">cd src/main/resources/binary/redis</span><br><span class="line"><span class="comment">// 소스 코드 다운로드</span></span><br><span class="line">wget https:<span class="comment">//download.redis.io/releases/redis-7.0.15.tar.gz</span></span><br><span class="line"><span class="comment">// 압축 해제</span></span><br><span class="line">tar xzf redis-<span class="number">7.0</span><span class="number">.15</span>.tar.gz </span><br><span class="line"><span class="comment">// redis-7.0.15 디렉토리 이동</span></span><br><span class="line">cd redis-<span class="number">7.0</span><span class="number">.15</span></span><br><span class="line"><span class="comment">// Redis 빌드를 진행</span></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>make 명령어를 통해 빌드를 진행하면 src 폴더에 redis-server 가 생성됩니다. 생성된 redis-server 를 사용하기 쉽게 <code>resource/binary/redis</code> 폴더로 옮겨줍니다.</p><p><img src="/images/springboot/redis/m1-redis.png"></p><h2 id="✅-현재-운영체제와-아키텍처-확인"><a href="#✅-현재-운영체제와-아키텍처-확인" class="headerlink" title="✅ 현재 운영체제와 아키텍처 확인"></a>✅ 현재 운영체제와 아키텍처 확인</h2><p>M1 Mac 일때만 M1 Mac 에 맞게 빌드된 Redis 를 사용하기 위해 현재 OS 와 Arch 정보들을 <code>jshell</code> 을 이용해 확인합니다. </p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">❯ jshell</span><br><span class="line">|  Welcome to JShell -- Version 17.0.9</span><br><span class="line">|  For an introduction <span class="built_in">type</span>: /help intro</span><br><span class="line"></span><br><span class="line">jshell&gt; System.getProperty(<span class="string">&quot;os.name&quot;</span>)</span><br><span class="line"><span class="variable">$1</span> ==&gt; <span class="string">&quot;Mac OS X&quot;</span></span><br><span class="line"></span><br><span class="line">jshell&gt; System.getProperty(<span class="string">&quot;os.arch&quot;</span>)</span><br><span class="line"><span class="variable">$2</span> ==&gt; <span class="string">&quot;aarch64&quot;</span></span><br></pre></td></tr></table></figure><h2 id="✅-Embeded-Redis-사용하기위한-설정"><a href="#✅-Embeded-Redis-사용하기위한-설정" class="headerlink" title="✅ Embeded Redis 사용하기위한 설정"></a>✅ Embeded Redis 사용하기위한 설정</h2><p><code>binary/redis</code> 경로에 M1 아키텍처로 새롭게 빌드된 <code>redis-server</code> 를 RedisServer 에 넘겨주면 어플레케이션이 문제 없이 실행되는 것을 확인할 수 있습니다.</p><figure class="highlight java"><figcaption><span>EmbeddedRedisConfig.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Profile(&quot;local&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmbeddedRedisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">6379</span>;</span><br><span class="line">    <span class="keyword">private</span> RedisServer redisServer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">redisServer</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;System OS: &#123;&#125;&quot;</span>, System.getProperty(<span class="string">&quot;os.name&quot;</span>));</span><br><span class="line">        log.info(<span class="string">&quot;System Architecture: &#123;&#125;&quot;</span>, System.getProperty(<span class="string">&quot;os.arch&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isMacM1()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Mac OS ARM Architecture&quot;</span>);</span><br><span class="line">            redisServer = <span class="keyword">new</span> <span class="title class_">RedisServer</span>(getRedisFileForArcMac(), port);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            redisServer = <span class="keyword">new</span> <span class="title class_">RedisServer</span>(port);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        redisServer.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreDestroy</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stopRedis</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (redisServer != <span class="literal">null</span>) &#123;</span><br><span class="line">            redisServer.stop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isMacM1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!System.getProperty(<span class="string">&quot;os.name&quot;</span>).equals(<span class="string">&quot;Mac OS X&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> System.getProperty(<span class="string">&quot;os.arch&quot;</span>).equals(<span class="string">&quot;aarch64&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> File <span class="title function_">getRedisFileForArcMac</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;binary/redis/redis-server&quot;</span>).getFile();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Spring/">Spring</category>
      
      <category domain="https://ckck803.github.io/categories/Spring/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/categories/Spring/Spring-Boot/Redis/">Redis</category>
      
      
      
      <comments>https://ckck803.github.io/2024/11/29/spring/spring-redis/springboot-redis-m1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>쓰레드와 메모리구조</title>
      <link>https://ckck803.github.io/2024/03/03/computer-science/os/thread/thread-memory/</link>
      <guid>https://ckck803.github.io/2024/03/03/computer-science/os/thread/thread-memory/</guid>
      <pubDate>Sat, 02 Mar 2024 21:16:13 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2022/04/11/computer-science/os/thread/thread-safe/&quot; title=&quot;Thread Safe&quot;&gt;Thread Safe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/03/computer-science/os/thread/thread-memory/&quot; title=&quot;쓰레드와 메모리구조&quot;&gt;쓰레드와 메모리구조&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/thread/thread/&quot; title=&quot;쓰레드&quot;&gt;쓰레드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/process/syncronize/&quot; title=&quot;프로세스 동기화&quot;&gt;프로세스 동기화&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/process/scheduling-algorithm/&quot; title=&quot;프로세스 스케줄링 알고리즘&quot;&gt;프로세스 스케줄링 알고리즘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/process/scheduling/&quot; title=&quot;프로세스 상태와 스케줄러&quot;&gt;프로세스 상태와 스케줄러&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/process/ipc/&quot; title=&quot;Inter Process Communication(프로세스간의 통신)&quot;&gt;Inter Process Communication(프로세스간의 통신)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/process/process-memory/&quot; title=&quot;프로세스 메모리 영역&quot;&gt;프로세스 메모리 영역&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2021/11/04/computer-science/os/process/process/&quot; title=&quot;Process (프로세스)&quot;&gt;Process (프로세스)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://inpa.tistory.com/entry/%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%E2%9A%94%EF%B8%8F-%EC%93%B0%EB%A0%88%EB%93%9C-%EC%B0%A8%EC%9D%B4&quot;&gt;https://inpa.tistory.com/entry/%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%E2%9A%94%EF%B8%8F-%EC%93%B0%EB%A0%88%EB%93%9C-%EC%B0%A8%EC%9D%B4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;쓰레드-메모리-구조&quot;&gt;&lt;a href=&quot;#쓰레드-메모리-구조&quot; class=&quot;headerlink&quot; title=&quot;쓰레드 메모리 구조&quot;&gt;&lt;/a&gt;쓰레드 메모리 구조&lt;/h2&gt;&lt;p&gt;프로세스 안에서 생성되는 쓰레드는 프로세스의 메모리 영역을 사용하게 됩니다. 프로세스내 메모리 영역 중 Code, Data, Heap 영역은 모든 쓰레드가 공유해서 사용하고 각 쓰레드 별로 Stack 영역이 생성됩니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/computer-science/os/thread/thread-memory.png&quot; alt=&quot;쓰레드 메모리 구조&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;프로세스-메모리-구조&quot;&gt;&lt;a href=&quot;#프로세스-메모리-구조&quot; class=&quot;headerlink&quot; title=&quot;프로세스 메모리 구조&quot;&gt;&lt;/a&gt;프로세스 메모리 구조&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/computer-science/os/process/process-memory.png&quot; alt=&quot;프로세스 메모리 구조&quot;&gt;&lt;/p&gt;
</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2022/04/11/computer-science/os/thread/thread-safe/" title="Thread Safe">Thread Safe</a></li><li><a href="/2024/03/03/computer-science/os/thread/thread-memory/" title="쓰레드와 메모리구조">쓰레드와 메모리구조</a></li><li><a href="/2021/11/04/computer-science/os/thread/thread/" title="쓰레드">쓰레드</a></li><li><a href="/2021/11/04/computer-science/os/process/syncronize/" title="프로세스 동기화">프로세스 동기화</a></li><li><a href="/2021/11/04/computer-science/os/process/scheduling-algorithm/" title="프로세스 스케줄링 알고리즘">프로세스 스케줄링 알고리즘</a></li><li><a href="/2021/11/04/computer-science/os/process/scheduling/" title="프로세스 상태와 스케줄러">프로세스 상태와 스케줄러</a></li><li><a href="/2021/11/04/computer-science/os/process/ipc/" title="Inter Process Communication(프로세스간의 통신)">Inter Process Communication(프로세스간의 통신)</a></li><li><a href="/2021/11/04/computer-science/os/process/process-memory/" title="프로세스 메모리 영역">프로세스 메모리 영역</a></li><li><a href="/2021/11/04/computer-science/os/process/process/" title="Process (프로세스)">Process (프로세스)</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://inpa.tistory.com/entry/%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%E2%9A%94%EF%B8%8F-%EC%93%B0%EB%A0%88%EB%93%9C-%EC%B0%A8%EC%9D%B4">https://inpa.tistory.com/entry/%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%E2%9A%94%EF%B8%8F-%EC%93%B0%EB%A0%88%EB%93%9C-%EC%B0%A8%EC%9D%B4</a></li></ul><h2 id="쓰레드-메모리-구조"><a href="#쓰레드-메모리-구조" class="headerlink" title="쓰레드 메모리 구조"></a>쓰레드 메모리 구조</h2><p>프로세스 안에서 생성되는 쓰레드는 프로세스의 메모리 영역을 사용하게 됩니다. 프로세스내 메모리 영역 중 Code, Data, Heap 영역은 모든 쓰레드가 공유해서 사용하고 각 쓰레드 별로 Stack 영역이 생성됩니다.</p><p><img src="/images/computer-science/os/thread/thread-memory.png" alt="쓰레드 메모리 구조"></p><h2 id="프로세스-메모리-구조"><a href="#프로세스-메모리-구조" class="headerlink" title="프로세스 메모리 구조"></a>프로세스 메모리 구조</h2><p><img src="/images/computer-science/os/process/process-memory.png" alt="프로세스 메모리 구조"></p>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/CS/">CS</category>
      
      <category domain="https://ckck803.github.io/categories/CS/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/">운영체제</category>
      
      
      
      <comments>https://ckck803.github.io/2024/03/03/computer-science/os/thread/thread-memory/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Vue3 - Component 간 통신</title>
      <link>https://ckck803.github.io/2024/03/02/vue/vue3/vue3-component-communication/</link>
      <guid>https://ckck803.github.io/2024/03/02/vue/vue3/vue3-component-communication/</guid>
      <pubDate>Sat, 02 Mar 2024 11:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/vue/vue-component.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/02/vue/vue3/vue3-component-communication/&quot; title=&quot;Vue3 - Component 간 통신&quot;&gt;Vue3 - Component 간 통신&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-component/&quot; title=&quot;Vue3 - Component&quot;&gt;Vue3 - Component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-composition-api/&quot; title=&quot;Vue3 - Composition API&quot;&gt;Vue3 - Composition API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-instance/&quot; title=&quot;Vue3 - Instance&quot;&gt;Vue3 - Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-reactivity/&quot; title=&quot;[Vue3] - Reactivity (반응형)&quot;&gt;[Vue3] - Reactivity (반응형)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-start/&quot; title=&quot;Vue3 - 시작하기&quot;&gt;Vue3 - 시작하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Component-간-통신-Props&quot;&gt;&lt;a href=&quot;#Component-간-통신-Props&quot; class=&quot;headerlink&quot; title=&quot;Component 간 통신 - Props&quot;&gt;&lt;/a&gt;Component 간 통신 - Props&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Props&lt;/strong&gt; 는 상위 컴포넌트에서 하위 컴포넌트로 데이터를 전송할때 사용합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Vue 에서는 상위 컴포넌트에서 하위 컴포넌트로 통신하기 위한 방법으로 Props 를 제공합니다. Props 를 통해 상위 컴포넌트에서 하위 컴포넌트로 데이터를 내려줍니다.&lt;/p&gt;
&lt;p&gt;하위 컴포넌트에서 전달 받은 Props 를 사용하기 위해&lt;code&gt;v-bind&lt;/code&gt; 를 이용해 &lt;code&gt;Props 이름&lt;/code&gt;&amp;#x3D;”&lt;code&gt;상위컴포넌트의 데이터이름&lt;/code&gt;“ 형식으로 Props 를 매팽해 줍니다.&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&lt;span class=&quot;string&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;app-header&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-bind:title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;appTitle&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;app-header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://unpkg.com/vue@3/dist/vue.global.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &lt;span class=&quot;title class_&quot;&gt;Vue&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;createApp&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;title function_&quot;&gt;data&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;appTitle&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;프롭스 넘기기&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;components&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// &amp;#x27;컴포넌트 이름&amp;#x27;: 컴포넌트 내용&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&amp;#x27;app-header&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;h1&amp;gt;&amp;#123;&amp;#123;title&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;props&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&amp;#x27;title&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &amp;#125;).&lt;span class=&quot;title function_&quot;&gt;mount&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Component-간-통신-Event&quot;&gt;&lt;a href=&quot;#Component-간-통신-Event&quot; class=&quot;headerlink&quot; title=&quot;Component 간 통신 - Event&quot;&gt;&lt;/a&gt;Component 간 통신 - Event&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Event 는 하위 컴포넌트에서 상위 컴포넌트로 &lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vue/vue-component.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2024/03/02/vue/vue3/vue3-component-communication/" title="Vue3 - Component 간 통신">Vue3 - Component 간 통신</a></li><li><a href="/2024/03/01/vue/vue3/vue3-component/" title="Vue3 - Component">Vue3 - Component</a></li><li><a href="/2024/03/01/vue/vue3/vue3-composition-api/" title="Vue3 - Composition API">Vue3 - Composition API</a></li><li><a href="/2024/03/01/vue/vue3/vue3-instance/" title="Vue3 - Instance">Vue3 - Instance</a></li><li><a href="/2024/03/01/vue/vue3/vue3-reactivity/" title="[Vue3] - Reactivity (반응형)">[Vue3] - Reactivity (반응형)</a></li><li><a href="/2024/03/01/vue/vue3/vue3-start/" title="Vue3 - 시작하기">Vue3 - 시작하기</a></li></ul><h2 id="Component-간-통신-Props"><a href="#Component-간-통신-Props" class="headerlink" title="Component 간 통신 - Props"></a>Component 간 통신 - Props</h2><blockquote><p><strong>Props</strong> 는 상위 컴포넌트에서 하위 컴포넌트로 데이터를 전송할때 사용합니다.</p></blockquote><p>Vue 에서는 상위 컴포넌트에서 하위 컴포넌트로 통신하기 위한 방법으로 Props 를 제공합니다. Props 를 통해 상위 컴포넌트에서 하위 컴포넌트로 데이터를 내려줍니다.</p><p>하위 컴포넌트에서 전달 받은 Props 를 사용하기 위해<code>v-bind</code> 를 이용해 <code>Props 이름</code>&#x3D;”<code>상위컴포넌트의 데이터이름</code>“ 형식으로 Props 를 매팽해 줍니다.</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">app-header</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;appTitle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">appTitle</span>: <span class="string">&#x27;프롭스 넘기기&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// &#x27;컴포넌트 이름&#x27;: 컴포넌트 내용</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="string">&#x27;app-header&#x27;</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">template</span>: <span class="string">&#x27;&lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;/h1&gt;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="Component-간-통신-Event"><a href="#Component-간-통신-Event" class="headerlink" title="Component 간 통신 - Event"></a>Component 간 통신 - Event</h2><blockquote><p>Event 는 하위 컴포넌트에서 상위 컴포넌트로 </p></blockquote><p>하위 컴포넌트에서 상위 컴포넌트와 통신하기 위한 방법으로는 Event 를 제공합니다.</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">app-content</span> <span class="attr">v-on:refresh</span>=<span class="string">&quot;showAlert&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">app-content</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> appContents = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">template</span>: <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">    &lt;p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">      &lt;button v-on:click=&quot;sendEvent&quot;&gt;갱신&lt;/button&gt;  </span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">    &lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">    `</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">sendEvent</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;refresh&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// Root 컴포넌트</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">showAlert</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">alert</span>(<span class="string">&#x27;새로고침&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// &#x27;컴포넌트 이름&#x27;: 컴포넌트 내용</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="string">&#x27;app-content&#x27;</span>: appContents</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/images/vue/vue-event.png"></p><h2 id="같은-레벨의-컴포넌트간-데이터-통신"><a href="#같은-레벨의-컴포넌트간-데이터-통신" class="headerlink" title="같은 레벨의 컴포넌트간 데이터 통신"></a>같은 레벨의 컴포넌트간 데이터 통신</h2><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">app-header</span> <span class="attr">v-bind:app-title</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">app-content</span> <span class="attr">v-on:login</span>=<span class="string">&quot;receive&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">app-content</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> appHeader = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">props</span>: [<span class="string">&#x27;appTitle&#x27;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">template</span>: <span class="string">`&lt;h1&gt;&#123;&#123;appTitle&#125;&#125;&lt;/h1&gt;`</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> appContents = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">template</span>: <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">      &lt;p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">        &lt;button v-on:click=&quot;sendEvent&quot;&gt;로그인&lt;/button&gt;  </span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">      &lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"><span class="language-xml">      `</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">sendEvent</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;login&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// Root 컴포넌트</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">message</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">receive</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;받았다.&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">message</span> = <span class="string">&quot;로그인 됨&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// &#x27;컴포넌트 이름&#x27;: 컴포넌트 내용</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="string">&#x27;app-header&#x27;</span>: appHeader,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="string">&#x27;app-content&#x27;</span>: appContents</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Frontend/">Frontend</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue3/">Vue3</category>
      
      
      
      <comments>https://ckck803.github.io/2024/03/02/vue/vue3/vue3-component-communication/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Vue3 - Component</title>
      <link>https://ckck803.github.io/2024/03/01/vue/vue3/vue3-component/</link>
      <guid>https://ckck803.github.io/2024/03/01/vue/vue3/vue3-component/</guid>
      <pubDate>Fri, 01 Mar 2024 11:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/vue/vue-component.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/02/vue/vue3/vue3-component-communication/&quot; title=&quot;Vue3 - Component 간 통신&quot;&gt;Vue3 - Component 간 통신&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-component/&quot; title=&quot;Vue3 - Component&quot;&gt;Vue3 - Component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-composition-api/&quot; title=&quot;Vue3 - Composition API&quot;&gt;Vue3 - Composition API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-instance/&quot; title=&quot;Vue3 - Instance&quot;&gt;Vue3 - Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-reactivity/&quot; title=&quot;Vue3 - Reactivity&quot;&gt;Vue3 - Reactivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-start/&quot; title=&quot;Vue3 - 시작하기&quot;&gt;Vue3 - 시작하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h2&gt;&lt;p&gt;Component 란 하나의 화면을 여러개의 블록으로 나눌 수 있는 단위입니다. Component 를 통해 빠르게 화면을 구조화할 수 있고 코드 재사용성이 늘어납니다. Vue 에서는 Component 를 이용한 개발을 지원합니다.&lt;/p&gt;
&lt;h4 id=&quot;한-페이지에서-하위-컴포넌트-생성&quot;&gt;&lt;a href=&quot;#한-페이지에서-하위-컴포넌트-생성&quot; class=&quot;headerlink&quot; title=&quot;한 페이지에서 하위 컴포넌트 생성&quot;&gt;&lt;/a&gt;한 페이지에서 하위 컴포넌트 생성&lt;/h4&gt;&lt;p&gt;components 내 template 을 이용하면 상위 컴포넌트에서 바로 하위 컴포넌트 내용을 정의할 수 있습니다. &lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title class_&quot;&gt;Vue&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;createApp&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;components&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x27;컴포넌트 이름&amp;#x27;: 컴포넌트 내용&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;#x27;app-header&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;h1&amp;gt;컴포넌트 이름&amp;lt;/h1&amp;gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).&lt;span class=&quot;title function_&quot;&gt;mount&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;정의된 하위 컴포넌트는 컴포넌트 이름을 통해 상위 컴포넌트에서 사용할 수 있습니다.&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&lt;span class=&quot;string&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;app-header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;app-header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vue/vue-component.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2024/03/02/vue/vue3/vue3-component-communication/" title="Vue3 - Component 간 통신">Vue3 - Component 간 통신</a></li><li><a href="/2024/03/01/vue/vue3/vue3-component/" title="Vue3 - Component">Vue3 - Component</a></li><li><a href="/2024/03/01/vue/vue3/vue3-composition-api/" title="Vue3 - Composition API">Vue3 - Composition API</a></li><li><a href="/2024/03/01/vue/vue3/vue3-instance/" title="Vue3 - Instance">Vue3 - Instance</a></li><li><a href="/2024/03/01/vue/vue3/vue3-reactivity/" title="Vue3 - Reactivity">Vue3 - Reactivity</a></li><li><a href="/2024/03/01/vue/vue3/vue3-start/" title="Vue3 - 시작하기">Vue3 - 시작하기</a></li></ul><h2 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h2><p>Component 란 하나의 화면을 여러개의 블록으로 나눌 수 있는 단위입니다. Component 를 통해 빠르게 화면을 구조화할 수 있고 코드 재사용성이 늘어납니다. Vue 에서는 Component 를 이용한 개발을 지원합니다.</p><h4 id="한-페이지에서-하위-컴포넌트-생성"><a href="#한-페이지에서-하위-컴포넌트-생성" class="headerlink" title="한 페이지에서 하위 컴포넌트 생성"></a>한 페이지에서 하위 컴포넌트 생성</h4><p>components 내 template 을 이용하면 상위 컴포넌트에서 바로 하위 컴포넌트 내용을 정의할 수 있습니다. </p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="comment">// &#x27;컴포넌트 이름&#x27;: 컴포넌트 내용</span></span><br><span class="line">    <span class="string">&#x27;app-header&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;&lt;h1&gt;컴포넌트 이름&lt;/h1&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>정의된 하위 컴포넌트는 컴포넌트 이름을 통해 상위 컴포넌트에서 사용할 수 있습니다.</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">app-header</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="별도의-파일로-Component-생성"><a href="#별도의-파일로-Component-생성" class="headerlink" title="별도의 파일로 Component 생성"></a>별도의 파일로 Component 생성</h4><p>vue 파일을 이용해 하위 컴포넌트를 생성할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; appTitle &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeTitle&quot;</span>&gt;</span>변경<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>: [<span class="string">&#x27;appTitle&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">changeTitle</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;change&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>상위 Component 에서 하위 Component 를 사용하기 위해서는 import 를 이용해 하위 vue 파일에 정의된 Component 를 가져와 components 에 등록해야합니다. </p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// import 컴포넌트이름 from &#x27;./컴포넌트 경로&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AppHeader</span> <span class="keyword">from</span> <span class="string">&quot;./components/AppHeader.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 하위 컴포넌트 등록</span></span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">AppHeader</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;앱 헤더 컴포넌트&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">changeMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">message</span> = <span class="string">&quot;변경됨&quot;</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>위와 마찬가지로 상위 컴포넌트에서는 등록된 컴포넌트 이름을 이용해 사용할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">AppHeader</span> <span class="attr">v-bind:appTitle</span>=<span class="string">&quot;message&quot;</span> <span class="attr">v-on:change</span>=<span class="string">&quot;changeMessage&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">AppHeader</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Frontend/">Frontend</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue3/">Vue3</category>
      
      
      
      <comments>https://ckck803.github.io/2024/03/01/vue/vue3/vue3-component/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Vue3 - Instance</title>
      <link>https://ckck803.github.io/2024/03/01/vue/vue3/vue3-instance/</link>
      <guid>https://ckck803.github.io/2024/03/01/vue/vue3/vue3-instance/</guid>
      <pubDate>Fri, 01 Mar 2024 03:31:46 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;/images/vue/vue.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/02/vue/vue3/vue3-component-communication/&quot; title=&quot;Vue3 - Component 간 통신&quot;&gt;Vue3 - Component 간 통신&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-component/&quot; title=&quot;Vue3 - Component&quot;&gt;Vue3 - Component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-composition-api/&quot; title=&quot;Vue3 - Composition API&quot;&gt;Vue3 - Composition API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-instance/&quot; title=&quot;Vue3 - Instance&quot;&gt;Vue3 - Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-reactivity/&quot; title=&quot;Vue3 - Reactivity&quot;&gt;Vue3 - Reactivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/01/vue/vue3/vue3-start/&quot; title=&quot;Vue3 - 시작하기&quot;&gt;Vue3 - 시작하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Vue-3-Instance-와-속성&quot;&gt;&lt;a href=&quot;#Vue-3-Instance-와-속성&quot; class=&quot;headerlink&quot; title=&quot;Vue 3 Instance 와 속성&quot;&gt;&lt;/a&gt;Vue 3 Instance 와 속성&lt;/h2&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title class_&quot;&gt;Vue&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;createApp&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;template&lt;/span&gt;: ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;data&lt;/span&gt;: ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;methods&lt;/span&gt;: ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;created&lt;/span&gt;: ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;watch&lt;/span&gt;: ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;methods&quot;&gt;&lt;a href=&quot;#methods&quot; class=&quot;headerlink&quot; title=&quot;methods&quot;&gt;&lt;/a&gt;methods&lt;/h4&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&lt;span class=&quot;string&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;count&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-on:click&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;addCount&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;+&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://unpkg.com/vue@3/dist/vue.global.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &lt;span class=&quot;title class_&quot;&gt;Vue&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;createApp&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;title function_&quot;&gt;data&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;methods&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &lt;span class=&quot;title function_&quot;&gt;addCount&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;count&lt;/span&gt;++;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &amp;#125;).&lt;span class=&quot;title function_&quot;&gt;mount&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h2 id=&quot;Vue-Directive&quot;&gt;&lt;a href=&quot;#Vue-Directive&quot; class=&quot;headerlink&quot; title=&quot;Vue Directive&quot;&gt;&lt;/a&gt;Vue Directive&lt;/h2&gt;&lt;h4 id=&quot;v-for&quot;&gt;&lt;a href=&quot;#v-for&quot; class=&quot;headerlink&quot; title=&quot;v-for&quot;&gt;&lt;/a&gt;v-for&lt;/h4&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&lt;span class=&quot;string&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;item in items&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;item&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://unpkg.com/vue@3/dist/vue.global.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &lt;span class=&quot;title class_&quot;&gt;Vue&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;createApp&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &lt;span class=&quot;title function_&quot;&gt;data&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;items&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&amp;#x27;삼성&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;네이버&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;인프런&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;  &amp;#125;).&lt;span class=&quot;title function_&quot;&gt;mount&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vue/vue.png"></p><h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><ul><li><a href="/2024/03/02/vue/vue3/vue3-component-communication/" title="Vue3 - Component 간 통신">Vue3 - Component 간 통신</a></li><li><a href="/2024/03/01/vue/vue3/vue3-component/" title="Vue3 - Component">Vue3 - Component</a></li><li><a href="/2024/03/01/vue/vue3/vue3-composition-api/" title="Vue3 - Composition API">Vue3 - Composition API</a></li><li><a href="/2024/03/01/vue/vue3/vue3-instance/" title="Vue3 - Instance">Vue3 - Instance</a></li><li><a href="/2024/03/01/vue/vue3/vue3-reactivity/" title="Vue3 - Reactivity">Vue3 - Reactivity</a></li><li><a href="/2024/03/01/vue/vue3/vue3-start/" title="Vue3 - 시작하기">Vue3 - 시작하기</a></li></ul><h2 id="Vue-3-Instance-와-속성"><a href="#Vue-3-Instance-와-속성" class="headerlink" title="Vue 3 Instance 와 속성"></a>Vue 3 Instance 와 속성</h2><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line">  <span class="attr">template</span>: ,</span><br><span class="line">  <span class="attr">data</span>: ,</span><br><span class="line">  <span class="attr">methods</span>: ,</span><br><span class="line">  <span class="attr">created</span>: ,</span><br><span class="line">  <span class="attr">watch</span>: ,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="methods"><a href="#methods" class="headerlink" title="methods"></a>methods</h4><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addCount&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">count</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">addCount</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">count</span>++;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="Vue-Directive"><a href="#Vue-Directive" class="headerlink" title="Vue Directive"></a>Vue Directive</h2><h4 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h4><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">items</span>: [<span class="string">&#x27;삼성&#x27;</span>, <span class="string">&#x27;네이버&#x27;</span>, <span class="string">&#x27;인프런&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Frontend/">Frontend</category>
      
      <category domain="https://ckck803.github.io/categories/Frontend/Vue3/">Vue3</category>
      
      
      
      <comments>https://ckck803.github.io/2024/03/01/vue/vue3/vue3-instance/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
